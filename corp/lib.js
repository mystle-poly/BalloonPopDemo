{var xa=apn.inheritWidget(apn.widgets["apn.wgt.layerContainer"]);xa.editor=xa.editor||{},xa.editor.iconThumb="DB/EDU/imgs/wgts/thumbs/spriteAnimation.png",xa.editor.states={play:"Play",loop:"Loop",stop:"Stop"},xa.scriptInfo=void 0,xa.properties.state="stop",xa.properties.attrs={apxAnimate:!0,cfg:{idStep:""}},xa.createAsCanvasObject=function(e,t,a,i,n){return apn.IWidget.createCanvasObject(e,apn.widgets["apn.wgt.layerContainer"],"apn.CLayerContainer",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n,{orderedActive:!0})},xa.exeFireStateEvent=void 0,xa.exeSetState=function(e,t,a){a&&("play"==a||"loop"==a?1<e.wgtAniCheck(e.wgtId(t))&&e.wgtAniRun(e.wgtId(t),"play"==a?1:2)&&e.fireEvent("animation","Start",t.apnOID):"stop"==a&&e.wgtAniSet(e.wgtId(t)))},xa.exeOnLoad=function(a,i){var n=a.wgtGetProperty(i,"cfg");n&&n.idStep&&a.wgtTag(n.idStep)&&a.wgtListenProperty(i,"apxStep",function(e,t){e==n.idStep&&t&&(e=apn.Project.getStateByObjectID(a.viewer.project,a.getPageID(),i))&&(apn.UTIL.sort(e,"order",1,!0),e[t.current])&&e[t.current].stateID&&a.wgtSetProperty(i,"apxLayer",e[t.current].stateID)})},xa.edtSetupStep=function(e,t,a,i){var n,o=e.getScreenData(),r=[{title:apn.CExe.GL({ko:"[없음]",en:"[None]"}),value:""}];for(n in o.objects)o.objects[n].create&&o.objects[n].create.data&&o.objects[n].create.data.properties&&o.objects[n].create.data.properties.attrs&&o.objects[n].create.data.properties.attrs.apxStep&&r.push({value:n,title:e.itrGetObjectTitle(n)});eduLib.edtInputAdd(e,a,{type:"select",options:r,title:apn.CExe.GL({ko:"연동할 위젯",en:"Widget to interface with"}),key:"idStep",value:i,join:!0})},xa.edtOnConfig=function(e,t){var a,i,n=e.wgtGetProperty(t,"cfg")||{idStep:""};(a=e.dlgDoModal(600,200,function(){eduLib.edtInputApplyAll(e,a),e.wgtSetProperty(t,"cfg",n)}))&&(i=apn.CExe.CSS_SETUP_PANE+"height:"+(a.clientHeight-40)+"px",a.tagTab=a.$TAG("div",{style:"position:relative;font-weight:bold;width:100%;height:26px;padding-bottom:14px;"}),a.tagTab.innerHTML='<span id="tagTab2" style="'+apn.CExe.CSS_SETUP_TAB+'">'+apn.CExe.GL({ko:"스텝 연동",en:"Step Interface"})+"</span>"+apn.CExe.CSS_SETUP_TAB_END,a.tagTab2=a.$TAG("div",{style:i}),this.edtSetupStep(e,t,a.tagTab2,n),a.tagTab.$$("tagTab2").style.borderStyle="solid solid none solid",a.tagTab.$$("tagBlank").style.width=a.clientWidth-a.tagTab.$$("tagBlank").offsetLeft-1+"px")},xa.WGTS_SHOW=["edu.wgt.animSprite","apn.wgt.rect","apn.wgt.singleText","apn.wgt.roundRect","apn.wgt.ellipse","apn.wgt.line","apn.wgt.image2","apn.wgt.polygon","apn.wgt.video","apn.wgt.itrAreaRect","apn.wgt.itrAreaEllipse","ux.wgt.imgSprite","ux.wgt.shtSprite"],xa.onEdit=function(e,t){apn.widgets.utils.editWidget(e.getObjectByID(t),e,2,!0,{wgtsShow:this.WGTS_SHOW,layerTitleFromOrder:!0,layerDuration:apx.wgt.spriteDefaultFrameDuration,layerOrdering:!0,layerScrollbar:"always"})},eduWgtAnimSprite=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.sceneContainer"])).exeItrNoResize=!0,xa.editor=xa.editor||{},xa.editor.iconThumb="DB/EDU/imgs/wgts/thumbs/sceneAnimation.png",xa.editor.states={play:"Play",loop:"Loop",stop:"Stop",stopL:"StopAtLast"},xa.properties.state="stop",xa.properties.attrs={apxAnimate:!0,ver:2,ofl:""},xa.exeSetState=function(e,t,a,i){a&&("stopL"==(a=i||"stopL"!=a?a:"stop")?(i=apn.Project.getStateByObjectID(e.project,e.getPageID(),t.apnOID))&&0<i.length&&(i.sort(function(e,t){return void 0===e.order&&void 0===t.order?0:void 0===e.order?1:void 0===t.order?-1:e.order-t.order}),e.wgtAniSet(e.wgtId(t),void 0,i[i.length-1].title)):eduWgtAnimSprite.exeSetState.call(this,e,t,a))},xa.exeOnLoad=eduWgtAnimSprite.exeOnLoad,xa.onEdit=function(e,t){apn.widgets.utils.editWidget(e.getObjectByID(t),e,1,!0,{layerTitleFromOrder:!0,layerDuration:apx.wgt.spriteDefaultFrameDuration,layerOrdering:!0,layerScrollbar:"always",wgtsShow:apn.widgets["apn.wgt.sceneContainer"].WGTS_SHOW,editNoGroup:!0})},eduWgtAnimScene=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.layerContainer"])).editor=xa.editor||{},xa.editor.iconThumb="DB/EDU/imgs/wgts/common/icon_thumb.png",xa.properties.attrs={apxAnimateHolder:!0},xa.exeSetState=void 0,xa.onEdit=function(e,t){apn.widgets.utils.editWidget(e.getObjectByID(t),e,2,!0,{layerTitlePrefix:"State",layerScrollbar:"always"})},eduWgtAnimHolder=xa,(xa=apn.inheritWidget(eduWgtAnimHolder)).editor=xa.editor||{},xa.editor.iconThumb="DB/EDU/imgs/wgts/thumbs/sceneAnimation.png",xa.properties.attrs={apxAnimateHolder:!0},xa.exeSetState=function(e,t,a,n){var o,r,d=e.screen.objects[t.apnOID].layout.layers;for(i in d)for(o=e.getWidgetsByProperty("apxAnimate",d[i].id),r=0;r<o.length;r++)i!=a?e.wgtSetProperty(o[r],"apxState","stop"):e.wgtSetProperty(o[r],"apxState","loop");a!=n&&e.fireEvent("stateChange",a,t.apnOID)},xa.exeOnStart=function(e,t){var a=this;setTimeout(function(){a.exeSetState(e,e.wgtTag(t),e.stateGetActive(t))},0)},eduWgtAnimHolder2=xa}(xa=apn.inheritWidget(apn.widgets["apn.wgt.audio"])).scriptInfo={wgtData:{background:{help:{ko:"Boolean\n페이지 종료 후 계속 Play할지 여부",en:"Boolean\nPlay on background after page end"}}}},void 0!==xa.properties.attrs.stp&&delete xa.properties.attrs.stp,xa.editor.states=void 0,xa.exeSetState=function(e,t,a,i){apn.widgets["apn.wgt.audio"].exeSetState.call(this,e,t,a,i),0==a.indexOf("T:")&&(i=parseInt(a.substring(2)),t.apnPlayList&&t.apnPlayList[i-1]?e.wgtControlMedia(t.apnOID,"play",i,!0):e.log(t.apnOID,"Invalid track is requested to play. TrackId="+i))},xa.exeOnLoad=function(e,a){apn.widgets["apn.wgt.audio"].exeOnLoad.call(this,e,a);var t,i,n=e.wgtTag(a);if(i=e.wgtGetProperty(a,"URLs"))for(var o=0;o<i.length;o++)i[o].URL&&(t=t||[]).push(i[o].URL);else if(i=e.wgtGetProperty(a,"list"))for(o=0;o<i.length;o++)i[o].audio.mediaID&&(t=t||[]).push(i[o].audio.mediaID);t&&t.length&&(this.exeAssetLoad(e,e.wgtTag(a),t),n._mediaLoaded=!0),(e.wgtGetProperty(a,"background")||e.wgtGetProperty(a,"cfg")&&"Y"==e.wgtGetProperty(a,"cfg").bg)&&(n.apxBackgroundRun=!0),e.wgtListenProperty(a,"background",function(e,t){e==a&&(n.apxBackgroundRun=t)})},xa.exeOnStart=function(e,t){apn.widgets["apn.wgt.audio"].exeOnStart.call(this,e,t),this.exeOnResume(e,t)},xa.exeOnResume=function(e,t){var a;e.wgtTag(t)._mediaLoaded||(a=e.ctxGet("eduAudioPlayList"))&&a.length&&this.exeAssetLoad(e,e.wgtTag(t),a)},xa.exeInputGet=function(e,t){if(t._newList)a=t._newList;else{var a=[],i=e.wgtGetProperty(t.apnOID,"list");if(i)for(var n=0;n<i.length;n++)i[n].audio.mediaID&&a.push(i[n].audio.mediaID)}return JSON.stringify(a)},xa.edtOnInputGet=function(e,t,a){var i=[];if((e=e.pages[t].objects[a].create.data)&&e.properties&&e.properties.attrs&&e.properties.attrs.list)for(var n=e.properties.attrs.list,o=0;o<n.length;o++)n[o].audio.mediaID&&i.push(n[o].audio.mediaID);return JSON.stringify(i)},xa.exeInputSet=function(e,t,a){var i;try{i=JSON.parse(a)}catch(e){}if(i&&i instanceof Array&&i.length){this.exeAssetLoad(e,t,i),t._mediaLoaded=!0,t._newList=i;for(var n=e.wgtGetProperty(t.apnOID,"list"),o=n.length=0;o<i.length;o++)n.push({audio:{mediaID:i[o]}})}else e.log(t.apnOID,"Invalid value is set, value="+a)},xa.exeMediaSupportTrack=function(e,t){return apn.dbUI&&apn.dbUI.system&&apn.dbUI.system.exeEventCache?!((e=e.objects[t].create.data)&&e.properties&&e.properties.attrs&&2==e.properties.attrs.v&&e.properties.attrs.noMultiTrack):null},xa.onEdit=void 0,xa.edtOnConfig=function(e,t){var a,i={mdaSync:e.wgtGetProperty(t,"mdaSync")};if(e.wgtGetProperty(t,"URLs")){var n=e.wgtGetProperty(t,"URLs");(a=e.dlgDoModal(900,400,function(){eduLib.edtInputApplyAll(e,a),e.wgtSetProperty(t,"URLs",n),e.wgtSetProperty(t,"mdaSync",i.mdaSync)}))&&(e.wgtGetProperty(t,"noMultiTrack")?eduLib.edtInputAdd(e,a,{type:"table",value:n,options:{th:["Audio URL"]},td:[{type:"text",key:"URL"}],join:!0}):eduLib.edtInputAdd(e,a,{type:"table",value:n,options:{th:["Audio URL"],add:!0,remove:!0},td:[{type:"text",key:"URL"}],join:!0}),eduLib.edtInputAdd(e,a,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(e,a,i))}else{var o=e.wgtGetProperty(t,"list"),r=e.wgtGetProperty(t,"cfg")||{},o=o||[{audio:{mediaID:void 0}}],d={background:"N"},p=e.wgtGetProperty(t,"background");function s(){eduLib.edtInputDestroy(e,a)}if(void 0!==p?p&&(d.background="Y"):void 0!==r.bg&&"Y"==r.bg&&(d.background="Y"),a=e.dlgDoModal(900,Math.floor(.8*bx.UX.height),function(){eduLib.edtInputApplyAll(e,a),r.apxApCH&&(r.apxApCH=parseInt(r.apxApCH)),o[0]&&o[0].audio.mediaID&&e.wgtSetProperty(t,"apxMediaID",o[0].audio.mediaID),void 0!==r.bg&&delete r.bg,e.wgtSetProperty(t,"list",o),e.wgtSetProperty(t,"cfg",r),e.wgtSetProperty(t,"background","Y"==d.background),e.wgtSetProperty(t,"mdaSync",i.mdaSync),s()},s)){if(eduLib.edtInputAdd(e,a,{type:"table",value:o,options:{th:["Audio","Comment"],add:!0,remove:!0,order:!0},td:[{type:"audio",key:"audio",acceptFileName:!0},{type:"text",key:"cmt",width:"400px"}],join:!0}),eduLib.edtInputAdd(e,a,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(e,a,i),eduLib.edtInputAdd(e,a,{type:"space"}),apn.CExe.IWidget_getAudioAutoplayCount(e.getData())){for(var l=[],g=0;g<apn.CExe.IWidget_getAudioAutoplayCount(e.getData());g++)l.push({title:g+1,value:g+1});l.push({title:apn.CExe.GL({ko:"[사용안함]",en:"[Not use]"}),value:""}),eduLib.edtInputAdd(e,a,{type:"title",title:apn.CExe.GL({ko:"자동재생 채널을 통하여 재생",en:"Use autoplay channel"})}),eduLib.edtInputAdd(e,a,{type:"select",title:apn.CExe.GL({ko:"채널 ID",en:"Channel ID"}),value:r,key:"apxApCH",options:l,join:!0}),eduLib.edtInputAdd(e,a,{type:"space"})}eduLib.edtInputAdd(e,a,{type:"title",title:"More options"}),eduLib.edtInputAdd(e,a,{type:"select",title:"Background play",value:d,key:"background",options:[{title:"Yes",value:"Y"},{title:"No",value:"N"}],join:!0})}}},xa.edtOnBuildState=function(e,t,a,i){for(var n in apn.widgets["apn.wgt.audio"].editor.states)i[n]=apn.widgets["apn.wgt.audio"].editor.states[n];var o=e.pages[a].objects[t].create.data;if(!(o&&o.properties&&o.properties.attrs&&2<=o.properties.attrs.v)){var r=1;if(o&&o.properties&&o.properties.attrs&&o.properties.attrs.URLs)for(n=0;n<o.properties.attrs.URLs.length;n++)o.properties.attrs.URLs[n].URL&&(i["T:"+r]="PlayTrack "+r,r++);else if(o&&o.properties&&o.properties.attrs&&o.properties.attrs.list)for(n=0;n<o.properties.attrs.list.length;n++)o.properties.attrs.list[n].audio.mediaID&&(i["T:"+r]="PlayTrack "+r,r++)}},xa.edtOnBuildEvent=function(e,t,a,n){var o=1,r=e.pages[a].objects[t].create.data;if(r&&r.properties&&r.properties.attrs&&r.properties.attrs.URLs)for(i=0;i<r.properties.attrs.URLs.length;i++)r.properties.attrs.URLs[i].URL&&(n.media.param["trS_"+o]="TrackStart"+o,n.media.param["trE_"+o]="TrackEnd"+o,n.media.param["trEN_"+o]="TrackEndNormal"+o,o++);else if(r&&r.properties&&r.properties.attrs&&r.properties.attrs.list)for(i=0;i<r.properties.attrs.list.length;i++)r.properties.attrs.list[i].audio.mediaID&&(n.media.param["trS_"+o]="TrackStart"+o,n.media.param["trE_"+o]="TrackEnd"+o,n.media.param["trEN_"+o]="TrackEndNormal"+o,o++)},eduWgtAudioPlayer=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.audio"])).scriptInfo=xa.scriptInfo||{},xa.scriptInfo.wgtData=xa.scriptInfo.wgtData||{},xa.scriptInfo.wgtData.background={help:{ko:"Boolean\n페이지 전환 후에도 계속 재생할지 여부입니다.",en:"Boolean\nPlay on background after page switch"}},xa.editor.states=void 0,xa.exeInputSet=eduWgtAudioPlayer.exeInputSet,xa.exeInputGet=eduWgtAudioPlayer.exeInputGet,xa.edtOnInputGet=eduWgtAudioPlayer.edtOnInputGet,xa.properties=xa.properties||{},xa.properties.attrs=xa.properties.attrs||{},xa.properties.attrs.list=[{audio:{mediaID:void 0}}],xa.properties.attrs.noMultiTrack=!0,xa.properties.attrs.background=!1,void 0!==xa.properties.attrs.apxStep&&delete xa.properties.attrs.apxStep,void 0!==xa.properties.attrs.stp&&delete xa.properties.attrs.stp,xa.exeSetState=function(e,t,a,i){if(apn.widgets["apn.wgt.audio"].exeSetState.call(this,e,t,a,i),0==a.indexOf("T:")){for(var n,o=parseInt(a.substring(2)),r=e.wgtGetProperty(t.apnOID,"list"),d=0,p=0;p<r.length;p++)if(r[p].audio.mediaID&&++d==o){t.apnTrackPlayIdx=o,this.exeAssetLoad(e,t,r[p].audio.mediaID),e.wgtControlMedia(t.apnOID,"play"),n=!0;break}n||e.log(t.apnOID,"Invalid track is requested to play. TrackId="+o)}},xa.exeOnLoad=function(e,a){apn.widgets["apn.wgt.audio"].exeOnLoad.call(this,e,a);var t,i=e.wgtTag(a);if(listPrp=e.wgtGetProperty(a,"list"))for(var n=0;n<listPrp.length;n++)if(listPrp[n].audio.mediaID){t=listPrp[n].audio.mediaID;break}t&&(i.apnTrackPlayIdx=1,this.exeAssetLoad(e,e.wgtTag(a),t)),e.wgtGetProperty(a,"background")&&(i.apxBackgroundRun=!0),e.wgtListenProperty(a,"background",function(e,t){e==a&&(i.apxBackgroundRun=t)})},xa.exeMediaSupportTrack=function(e,t){return 1},xa.onEdit=void 0,xa.edtOnConfig=function(e,t){var a,i=e.wgtGetProperty(t,"list"),n=e.wgtGetProperty(t,"cfg")||{},o={mdaSync:e.wgtGetProperty(t,"mdaSync"),background:!0===e.wgtGetProperty(t,"background")?"Y":"N"};function r(){eduLib.edtInputDestroy(e,a)}if(a=e.dlgDoModal(900,Math.floor(.8*bx.UX.height),function(){eduLib.edtInputApplyAll(e,a),n.apxApCH&&(n.apxApCH=parseInt(n.apxApCH)),i[0]&&i[0].audio.mediaID&&e.wgtSetProperty(t,"apxMediaID",i[0].audio.mediaID),e.wgtSetProperty(t,"list",i),e.wgtSetProperty(t,"cfg",n),e.wgtSetProperty(t,"background","Y"==o.background),e.wgtSetProperty(t,"mdaSync",o.mdaSync),r()},r)){if(eduLib.edtInputAdd(e,a,{type:"table",value:i,options:{th:["Audio","Comment"],add:!0,remove:!0,order:!0},td:[{type:"audio",key:"audio",acceptFileName:!0},{type:"text",key:"cmt",width:"400px"}],join:!0}),eduLib.edtInputAdd(e,a,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(e,a,o),apn.CExe.IWidget_getAudioAutoplayCount(e.getData())){for(var d=[],p=0;p<apn.CExe.IWidget_getAudioAutoplayCount(e.getData());p++)d.push({title:p+1,value:p+1});d.push({title:apn.CExe.GL({ko:"[사용안함]",en:"[Not use]"}),value:""}),eduLib.edtInputAdd(e,a,{type:"space"}),eduLib.edtInputAdd(e,a,{type:"title",title:apn.CExe.GL({ko:"자동재생 채널을 통하여 재생",en:"Use autoplay channel"})}),eduLib.edtInputAdd(e,a,{type:"select",title:apn.CExe.GL({ko:"채널 ID",en:"Channel ID"}),value:n,key:"apxApCH",options:d,join:!0})}var s=!0,l=apn.Project.getExeModule(e.getData());l.IStub_getConfiguration&&(l=l.IStub_getConfiguration(e.getData()))&&l.flowModeHide&&((l=apn.Project.getLayout(e.getData()).property).CExeBookCore&&"Y"==l.CExeBookCore.pageNoReset||(s=!1)),s&&(eduLib.edtInputAdd(e,a,{type:"space"}),eduLib.edtInputAdd(e,a,{type:"title",title:apn.CExe.GL(apn.CExe.TXT_SETUP_OPTS)}),eduLib.edtInputAdd(e,a,{type:"select",title:apn.CExe.GL({ko:"페이지 전환 후에도 계속 재생",en:"Background play after page switch"}),value:o,key:"background",options:[{title:apn.CExe.GL({ko:"예",en:"Yes"}),value:"Y"},{title:apn.CExe.GL({ko:"아니오",en:"No"}),value:"N"}],join:!0}))}},xa.edtOnBuildState=function(e,t,a,i){for(var n in apn.widgets["apn.wgt.audio"].editor.states)i[n]=apn.widgets["apn.wgt.audio"].editor.states[n];var o=e.pages[a].objects[t].create.data,r=1;if(o&&o.properties&&o.properties.attrs&&o.properties.attrs.URLs)for(n=0;n<o.properties.attrs.URLs.length;n++)o.properties.attrs.URLs[n].URL&&(i["T:"+r]="PlayTrack "+r,r++);else if(o&&o.properties&&o.properties.attrs&&o.properties.attrs.list)for(n=0;n<o.properties.attrs.list.length;n++)o.properties.attrs.list[n].audio.mediaID&&(i["T:"+r]="PlayTrack "+r,r++)},xa.edtOnBuildEvent=function(e,t,a,i){eduWgtAudioPlayer.edtOnBuildEvent.call(this,e,t,a,i),delete i.media.param.trackStart,delete i.media.param.trackEnd,delete i.media.param.trackEndN},eduWgtAudioPlayerMF=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.video"])).exeAssetDelayedLoad=!0,xa.exeOnLoad=function(e,t){apn.widgets["apn.wgt.video"].exeOnLoad.call(this,e,t);var a,i,n=e.wgtTag(t);if(i=e.wgtGetProperty(t,"URLs")){for(var o,r=0;r<i.length;r++)if(i[r].subURL){o=!0;break}for(r=0;r<i.length;r++)o?(i[r].vURL||i[r].subURL)&&((a=a||{main:[],sub:[]}).main.push(i[r].vURL),a.sub.push(i[r].subURL)):i[r].vURL&&(a=a||[]).push(i[r].vURL)}else if(i=e.wgtGetProperty(t,"list"))for(r=0;r<i.length;r++)i[r].video.mediaID&&(a=a||[]).push(i[r].video.mediaID);a&&(a.length||a.main&&a.main.length)&&(this.exeAssetLoad(e,e.wgtTag(t),a),n._mediaLoaded=!0)},xa.exeOnStart=xa.exeOnResume=function(e,t){var a;e.wgtTag(t)._mediaLoaded||(a=e.ctxGet("eduVideoPlayList"))&&a.length&&this.exeAssetLoad(e,e.wgtTag(t),a)},xa.exeInputGet=function(e,t){if(t._newList)a=t._newList;else{var a=[],i=e.wgtGetProperty(t.apnOID,"list");if(i)for(var n=0;n<i.length;n++)i[n].video.mediaID&&a.push(i[n].video.mediaID);else{var o=e.wgtGetProperty(t.apnOID,"URLs");if(o)for(n=0;n<o.length;n++)o[n].vURL&&a.push(o[n].vURL)}}return JSON.stringify(a)},xa.edtOnInputGet=function(e,t,a){var i=[];if((e=e.pages[t].objects[a].create.data)&&e.properties&&e.properties.attrs&&e.properties.attrs.list)for(var n=e.properties.attrs.list,o=0;o<n.length;o++)n[o].video.mediaID&&i.push(n[o].video.mediaID);else if(e&&e.properties&&e.properties.attrs&&e.properties.attrs.URLs)for(n=e.properties.attrs.URLs,o=0;o<n.length;o++)n[o].vURL&&i.push(n[o].vURL);return JSON.stringify(i)},xa.exeInputSet=function(e,t,a){var i;try{i=JSON.parse(a)}catch(e){i=a}(i=i&&i instanceof Array?i:[i])[0]?(this.exeAssetLoad(e,t,i),t._mediaLoaded=!0):(apn.widgets["apn.wgt.video"].exeMediaClear(e,t.apnOID),t._mediaLoaded=!1),t._newList=i;var n=e.wgtGetProperty(t.apnOID,"URLs");if(n)for(var o=n.length=0;o<i.length;o++)n.push({vURL:i[o]})},xa.exeMediaSupportTrack=function(e,t){return apn.dbUI&&apn.dbUI.system&&apn.dbUI.system.exeEventCache?!((e=e.objects[t].create.data)&&e.properties&&e.properties.attrs&&2==e.properties.attrs.v&&e.properties.attrs.noMultiTrack):null},xa.onEdit=void 0,xa.edtOnConfig=function(a,e){var t,i,n,o,r,d=apn.Project.getExeModule(a.getData()),p=(d.IStub_getConfiguration&&d.IStub_getConfiguration()&&d.IStub_getConfiguration().mediaMultiFormat&&(t=!0),a.wgtGetProperty(e,"apxMediaSubFormat")&&(t=!0),{mdaSync:a.wgtGetProperty(e,"mdaSync")});function s(){o.mediaID&&a.setSubMediaToObject(e,o.mediaID,!1)}function l(){eduLib.edtInputApplyAll(a,i),a.wgtSetProperty(e,"URLs",n),a.wgtSetProperty(e,"mdaSync",p.mdaSync),t&&a.wgtSetProperty(e,"apxMediaSubFormat",!0),n[0]&&n[0].vURL?a.getObjectByID(e).resolveSnapshot(function(e,t){t&&(e.setMedia(t),o&&s(),a.draw())}):o&&s()}a.wgtGetProperty(e,"URLs")?(n=a.wgtGetProperty(e,"URLs"),o=a.wgtGetProperty(e,"apxPoster"),(i=a.dlgDoModal(800,520,l))&&(a.wgtGetProperty(e,"noMultiTrack")?(t?eduLib.edtInputAdd(a,i,{type:"table",value:n,options:{th:["Video URL","Alternative URL"]},td:[{type:"text",key:"vURL"},{type:"text",key:"subURL"}],join:!0}):eduLib.edtInputAdd(a,i,{type:"table",value:n,options:{th:["Video URL"]},td:[{type:"text",key:"vURL"}],join:!0}),o&&(eduLib.edtInputAdd(a,i,{type:"space"}),eduLib.edtInputAdd(a,i,{type:"title",title:apn.CExe.GL({ko:"포스터 이미지",en:"Poster image"})}),eduLib.edtInputAdd(a,i,{type:"image",title:apn.CExe.GL({ko:"이미지",en:"Image"}),value:a.getObjectByID(e).data.properties.attrs,key:"apxPoster",join:!0}))):eduLib.edtInputAdd(a,i,{type:"table",value:n,options:{th:["Video URL"],add:!0,remove:!0},td:[{type:"text",key:"vURL"}]}),eduLib.edtInputAdd(a,i,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(a,i,p))):(r=a.wgtGetProperty(e,"list")||[{video:{mediaID:void 0}}],(i=a.dlgDoModal(600,600,function(){eduLib.edtInputApplyAll(a,i),r[0]&&r[0].video.mediaID&&a.wgtSetProperty(e,"apxMediaID",r[0].video.mediaID),a.wgtSetProperty(e,"list",r),a.wgtSetProperty(e,"mdaSync",p.mdaSync)}))&&(eduLib.edtInputAdd(a,i,{type:"table",value:r,options:{th:["Video"],add:!0,remove:!0},td:[{type:"video",key:"video"}],join:!0}),eduLib.edtInputAdd(a,i,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(a,i,p)))},eduWgtVideoPlayer=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.roundRect"])).apdConfigReadOnly=!0,xa.apxTextPlainMulti=!0,xa.apxTextAlignJustify=!0,xa.editor=xa.editor||{},xa.editor.iconThumb="DB/EDU/imgs/wgts/thumbs/subtitle.png",xa.styles=xa.styles||{},xa.styles.textMultiLine=!0,xa.styles.lineWidth=0,xa.properties=xa.properties||{},xa.properties.attrs={apxMediaSubtitle:!0,v:"2",vJ:!0,subs:[{track:1,stime:"00:00:00",etime:"00:01:99",text:"",pOes:"N"}],cfg:{colorFocus:"#ff0000",vtt:{size:0,data:""},mode:"",modeClr:null,ptpClr:null,txt:"",idMedia:"",idTarget:"",yMrg:"1"}},xa.properties.state="r",xa.scriptInfo={wgtData:{subtitle:{help:{ko:"String\n자막파일 지정. WebVTT만 지원합니다. ('value'값에 의해서도 데이터 지정이 가능합니다.)",en:"String\nSet subtitle file. 'WebVTT' format is supported. (Also, this information can be set by 'value'.)"},value:"",type:"so"}},wgtRun:{play:{param:"{index:0-based|'next'|'prev'|'clear'|'reset', playSection:Boolean}",help:{en:"Play the media section by subtitle information",ko:"자막 구간을 Play합니다.\n'index'에 자막의 번호, 'next' 및 'prev'로 구간을 지정할 수 있습니다.\n'playSection'이 true이면 해당 구간으로 영역이 제한됩니다.\n'index'에서 'clear'값은 지정된 Section을 해제하는 기능입니다."}}}},xa.createAsCanvasObject=function(e,t,a,i,n){return n&&n.attrs&&"2a"==n.attrs.v?(n.attrs.URL="DB/EDU/imgs/wgts/edit/mediaAnnt.png",apn.IWidget.createCanvasObject(e,this,"apn.CImage",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n,void 0,apn.CEditorS.NO_RESIZE)):apn.widgets["apn.wgt.roundRect"].createAsCanvasObject.call(this,e,t,a,i,n)},xa.exeOnScreenRefresh=function(e,t,a){var i,n,o,r,d,p=e.wgtGetProperty(t,"cfg");p.ptp&&"N"!=p.ptp?2!=(p=e.wgtTag(t)).apnCur._apnWgtRectTV&&(n=!0,n=(!a||!a.font||a.font==e.wgtGetProperty(t,"apxFont",!0))&&n)&&e.wgtGetProperty(t,"apxText")&&p.textTag&&(n=!1,bx.DOM.isVisible(p)||(n=!0,o=p.style.display,p.style.display="block",p.style.visibility="hidden",i=p.parentNode,document.body.appendChild(p)),r=p.clientWidth-2*bx.$checkNaN(parseInt(p.style.padding)),d=p.clientHeight-2*bx.$checkNaN(parseInt(p.style.padding)),p.textTag.scrollWidth&&p.textTag.scrollWidth>r||p.textTag.scrollHeight&&p.textTag.scrollHeight>d?(void 0===p._apxTextBkPadding&&(p._apxTextBkPadding=p.style.padding),p.style.padding=Math.max(0,Math.floor(bx.$checkNaN(parseInt(p.style.padding))-Math.max(p.textTag.scrollWidth-r,p.textTag.scrollHeight-d)/2))+"px"):void 0!==p._apxTextBkPadding&&(p.style.padding=p._apxTextBkPadding),n)&&(p.style.visibility="visible",p.style.display=o,i.appendChild(p)):apn.widgets["apn.wgt.roundRect"].exeOnScreenRefresh.call(this,e,t,a)},xa.exeOnLoad=function(n,o){var r=n.wgtTag(o),d=n.wgtGetProperty(o,"subs"),p=n.wgtGetProperty(o,"cfg"),s=this;if("2a"==n.wgtGetProperty(o,"v")&&(r.style.display="none"),n.wgtGetProperty(o,"v")){if(!p.idMedia||!n.wgtTag(p.idMedia))return n.log(o,"Media widget is not set for this widget."),!1;r.ctx={},r.ctx.idMedia=p.idMedia}else{var e=n.getWidgetsByProperty("apxMediaControl"),t=n.getWidgetsByProperty("apxMediaControl");if(!e.length)return n.log(o,"No media widget is in this page."),!1;for(var a=apn.Project.findParentOf(n.screen,o,void 0,!0),i=0;i<t.length;i++)a&&a!=apn.Project.findParentOf(n.screen,t[i],void 0,!0)&&(t.splice(i,1),i--);r.ctx={},r.ctx.idMedia=this._closest(n,o,t)||this._closest(n,o,e)}r.ctx.curSub=-1,r.ctx.curTrack=1,r.ctx.curSection=void 0,n.wgtGetProperty(o,"v")?(r.ctx.curSub=void 0,n.wgtListenProperty(o,"play",function(e,t){var a;e==o&&t&&void 0!==t.index&&r.ctx.times.length&&(r.ctx.curSection=void 0,"clear"==t.index||"reset"==t.index?r.ctx&&r.ctx.idMedia&&(n.wgtSetProperty(r.ctx.idMedia,"playSection",void 0),"reset"==t.index)&&(r.ctx.curSub=-1):("next"==t.index?void 0===r.ctx.curSub?t.index=0:t.index=(r.ctx.curSub+1)%r.ctx.times.length:"prev"==t.index&&(void 0===r.ctx.curSub?t.index=0:t.index=(r.ctx.curSub-1+r.ctx.times.length)%r.ctx.times.length),r.ctx&&r.ctx.idMedia&&r.ctx.times[t.index]&&void 0!==r.ctx.times[t.index].stime&&(e=apn.Project.getWidgetModule(n.screen.objects[r.ctx.idMedia].create.data))&&e.exeMediaSeek&&(t.playSection&&(a={from:r.ctx.times[t.index].stime,to:r.ctx.times[t.index].etime},n.wgtSetProperty(r.ctx.idMedia,"playSection",a),r.ctx.curSection=a),e.exeMediaSeek(n.wgtTag(r.ctx.idMedia),r.ctx.times[t.index].stime,!0))))}),n.wgtListenProperty(o,"track",function(e,t){e==o&&t&&void 0!==t.index&&d[t.index]&&(!0===t.pauseOnStart?d[t.index].pOes="Y":!1===t.pauseOnStart&&(d[t.index].pOes="N"))}),n.wgtListenMedia(o,r.ctx.idMedia,function(e,t,a){"seeked"==e&&(r.ctx._seeked=!0)})):n.wgtListenMedia(o,r.ctx.idMedia,function(e,t,a){var i;"trackStart"==e?r.ctx.curTrack=a:"infoPlayTime"==e?(i=s._findkSub(n,o,t))==r.ctx.curSub?i=void 0:r.ctx.curSub=i:"trackEnd"==e&&(r.ctx.curSub=i=-1),-1==i?n.wgtSetProperty(o,"apxText",""):0<=i&&n.wgtSetProperty(o,"apxText","[[HTML]]"+(d[i].text||"").replace(/\[\[/g,'<span style="font-family:inherit;color:'+p.colorFocus+';">').replace(/\]\]/g,"</span>"))}),n.wgtGetProperty(o,"cfg").mode?this._setupSpaned(n,o,p,d):n.wgtSetProperty(o,"apxText",""),r.ctx.times=[];for(i=0;i<d.length;i++)r.ctx.times.push({track:d[i].track,stime:this._timeToSec(d[i].stime),etime:this._timeToSec(d[i].etime),text:d[i].text});n.wgtListenProperty(o,"subtitle",function(e,t){if(e==o&&t){var a=[],e={message:""};if(s._vttParse(t,a,e)){for(var i=0;i<a.length;i++)a[i].stime=s._timeToSec(a[i].stime),a[i].etime=s._timeToSec(a[i].etime);s.exeInputSet(n,r,a)}e.message&&n.log(o,"WebVTT format error: "+e.message)}})},xa.exeSetState=function(e,t,a,i){var n,o,r=e.wgtGetProperty(t.apnOID,"v"),d=e.wgtGetProperty(t.apnOID,"subs");function p(e){for(var t=0;t<d.length;t++)if(d[t].text==e)return t;return-1}"p"==a[0]&&(o={index:"clear"}),"pNxt"==a?n={index:"next"}:"pPrv"==a?n={index:"prev"}:0==a.indexOf("p_")?"2a"==r?0<=p(a.substring(2))&&(n={index:p(a.substring(2))}):n={index:parseInt(a.substring(2))-1}:"sNxt"==a?n={index:"next",playSection:!0}:"sPrv"==a?n={index:"prev",playSection:!0}:0==a.indexOf("s_")?"2a"==r?0<=p(a.substring(2))&&(n={index:p(a.substring(2)),playSection:!0}):n={index:parseInt(a.substring(2))-1,playSection:!0}:"sC"==a&&(n={index:"clear"}),n&&o&&e.wgtSetProperty(t.apnOID,"play",o),n&&e.wgtSetProperty(t.apnOID,"play",n)},xa._setupSpaned=function(e,a,i,t){var n=e.wgtTag(a),o="[[HTML]]"+this._buildText(e,a).replace(/\[\[/g,'<span style="font-family:inherit;color:'+i.colorFocus+';">').replace(/\]\]/g,"</span>");if(e.wgtGetProperty(a,"apxText")!=o&&e.wgtSetProperty(a,"apxText",o),i.ptp&&"N"!=i.ptp)for(var r,d=0;d<t.length;d++)(r=n.$$(d+"C"))&&(n.$$(d+"S")&&(n.$$(d+"S").style.cursor="apn.auto"==apn.Project.resolveStyle(e.project,"csr",e.wgtGetProperty(a,"apxCursor"))?"pointer":"inherit"),r.apxOnEventOver=function(e,t){t?(i.ptpClr&&(this.style.backgroundColor=i.ptpClr),"Y"==i.ptpBold&&(this.style.fontWeight="bold")):(i.ptpClr&&(this.style.backgroundColor="transparent"),"Y"==i.ptpBold&&(this.style.fontWeight="inherit"))},r.apxOnEvent=function(e,t){"tapStart"==t&&e.wgtSetProperty(a,"play",{index:parseInt(this.id),playSection:"R"==i.ptp})})},xa.exeOnStart=function(i,n){var e,o,t,r=i.wgtGetProperty(n,"cfg");r.idTarget&&i.wgtTag(r.idTarget)&&(i.wgtTag(r.idTarget).style.display="none"),this.apxTextPlainMulti&&(e=i.wgtTag(n),o=this,e.apnOnPostSetText=function(e,t){var a=o._buildTextPlain(i,n);i.wgtSetProperty(n,"apxTextPlainMulti",{txt:a,lnToTag:!0}),r.mode&&o._setupSpaned(i,n,r,i.wgtGetProperty(n,"subs"))},t=this._buildTextPlain(i,n))&&e.apnOnPostSetText(e,t)},xa.exeOnTick=function(o,r,e){var t,d=o.wgtTag(r),p=o.wgtGetProperty(r,"cfg"),s=this;function a(e){var t,a=o.wgtGetProperty(r,"subs");if(e==d.ctx.curSub?e=void 0:d.ctx.curSub=e,"2a"==o.wgtGetProperty(r,"v")){if(-1==e||0<=e&&!a[e].text)p.idTarget&&o.wgtTag(p.idTarget)&&(o.wgtTag(p.idTarget).style.display="none"),o.fireEvent("wgtEvent","[None]",r,!1,!0);else if(0<=e&&a[e].text){if(p.idTarget&&o.wgtTag(p.idTarget)){o.wgtTag(p.idTarget).style.display="block";var i=apn.Project.getStateByObjectID(o.project,o.getPageID(),p.idTarget);if(i)for(var n=0;n<i.length;n++)if(i[n].title==a[e].text){o.stateLayerActivate(p.idTarget,i[n].stateID),o.stateSetActive(p.idTarget,i[n].stateID);break}}o.fireEvent("wgtEvent",a[e].text,r,!1,!0),"Y"==a[e].pOes&&o.wgtControlMedia(d.ctx.idMedia,"pause")}}else{if(p.mode){if(void 0!==e)for(n=0;n<a.length;n++)(t=d.$$(n+"S"))&&(n==e?"s1"==p.mode?(p.modeClr&&(t.style.color=p.modeClr),"Y"==p.modeBold&&(t.style.fontWeight="bold")):p.modeClr&&(t.style.backgroundColor=p.modeClr):"s1"==p.mode?(t.style.color="inherit",t.style.fontWeight="inherit"):t.style.backgroundColor="transparent")}else-1==e?o.wgtSetProperty(r,"apxText",""):0<=e&&o.wgtSetProperty(r,"apxText","[[HTML]]"+s._convertLN(o,r,(a[e].text||"").replace(/\[\[/g,'<span style="font-family:inherit;color:'+p.colorFocus+';">').replace(/\]\]/g,"</span>")));-1==e?o.fireEvent("wgtEvent","[None]",r,!1,!0):0<=e&&o.fireEvent("wgtEvent",e+1+"",r,!1,!0)}}d.ctx&&d.ctx.idMedia&&("2a"==o.wgtGetProperty(r,"v")&&d.ctx._seeked&&-1!=d.ctx.curSub&&("Y"==p.v2aRS?(a(-1),d.ctx._curTime=void 0,d.ctx.curSection=void 0):!d.ctx.curSection||(t=o.wgtGetMediaInfo(d.ctx.idMedia,"currentTime"))>=d.ctx.curSection.from&&t<d.ctx.curSection.to||(d.ctx._curTime=void 0,d.ctx.curSection=void 0)),void 0===d.ctx._curTime&&(d.ctx._curTime=0),(!o.wgtGetMediaInfo(d.ctx.idMedia,"pause")&&!o.wgtGetMediaInfo(d.ctx.idMedia,"seeking")||d.ctx._seeked)&&o.wgtGetMediaInfo(d.ctx.idMedia,"currentTime")?(d.ctx._end=!1,t=o.wgtGetMediaInfo(d.ctx.idMedia,"currentTime"),(!d.ctx.curSection||t>=d.ctx.curSection.from&&t<d.ctx.curSection.to)&&(!bx.HCL.DV.isIOS()||t>d.ctx._curTime||t<d.ctx._curTime-.2)&&(a(this._findkSub(o,r,t)),d.ctx._curTime=t)):o.wgtGetMediaInfo(d.ctx.idMedia,"end")&&!d.ctx._end?(d.ctx._end=!0,a(-1),d.ctx._curTime=0):d.ctx._refresh&&(d.ctx._refresh=!1,a(-1),d.ctx._curTime=0),d.ctx._seeked=!1)},xa.exeInputGet=function(e,t){if(t.ctx&&t.ctx.times)return bx.$cloneObject([],t.ctx.times)},xa.exeInputSet=function(e,t,a){if(t.ctx&&t.ctx.times&&a){for(var i=t.ctx.times.length=0;i<a.length;i++)t.ctx.times.push(a[i]);this._refresh(e,t.apnOID)}},xa._refresh=function(e,t){var a,i=e.wgtTag(t),n=e.wgtGetProperty(t,"subs"),o=e.wgtGetProperty(t,"cfg"),r=e.wgtGetProperty(t,"v");if(i.ctx._refresh=!0,r&&"2"==r[0]){o.mode&&(o.txt="");for(var d=0;d<i.ctx.times.length;d++)n[d]=n[d]||{track:1,pOes:i.ctx.times[d].pOes||"N"},n[d].text=i.ctx.times[d].text,n[d].txtPos=o.txt.length,o.mode&&(a=!1,d==i.ctx.times.length-1&&(a=!0),i.ctx.times[d].text.length&&"\n"==i.ctx.times[d].text[i.ctx.times[d].text.length-1]&&(a=!0),o.txt+=i.ctx.times[d].text+(a?"":" "));n.length=i.ctx.times.length,o.mode&&this._setupSpaned(e,t,o,n)}},xa._convertLN=function(e,t,a){var e=e.wgtGetProperty(t,"cfg"),i="";if(e&&"2"==e.yMrg)for(var n=0;n<a.length;n++)0!=n&&"\n"==a[n-1]||"\n"!=a[n]?0<n&&"\n"==a[n-1]&&"\n"==a[n]?i+='<div style="cursor:inherit;line-height:1em;">&nbsp;</div>':i+=a[n]:i+="<br/>";else if(e&&"1"==e.yMrg)for(n=0;n<a.length;n++)"\n"==a[n]?i+="<br/>":i+=a[n];else for(n=0;n<a.length;n++)"\n"==a[n]&&"\n"!=a[n+1]?i+="<br/>":"\n"==a[n]&&"\n"==a[n+1]?i+='<div style="cursor:inherit;line-height:1em;">&nbsp;</div>':i+=a[n];return i},xa._findkSub=function(e,t,a){var i=e.wgtTag(t);e.wgtGetProperty(t,"subs");if(!(i.ctx&&i.ctx.idMedia&&e.wgtGetMediaInfo(i.ctx.idMedia,"end"))){for(var n=0;n<i.ctx.times.length;n++)if(i.ctx.curTrack==(i.ctx.times[n].track||1)&&i.ctx.times[n].stime<=parseFloat(a)&&parseFloat(a)<i.ctx.times[n].etime)return n;if("2a"==e.wgtGetProperty(t,"v"))for(n=0;n<i.ctx.times.length;n++)if(i.ctx.curTrack==(i.ctx.times[n].track||1)&&i.ctx.times[n].stime<=parseFloat(a)&&parseFloat(a)<i.ctx.times[n].etime+.1)return n}return-1},xa._buildTextPlain=function(e,t){for(var a,i="",n=e.wgtGetProperty(t,"subs"),o=0;o<n.length;o++)a=!1,o==n.length-1&&(a=!0),n[o].text.length&&"\n"==n[o].text[n[o].text.length-1]&&(a=!0),i+=n[o].text+(a?"":" ");return i},xa._buildText=function(e,t){for(var a,i="",n=e.wgtGetProperty(t,"subs"),o="justify"==e.wgtGetProperty(t,"apxTextAlign"),r=0;r<n.length;r++)a=!1,r==n.length-1&&(a=!0),n[r].text.length&&"\n"==n[r].text[n[r].text.length-1]&&(a=!0),e.wgtGetProperty(t,"vJ")?i+='<span id="'+r+'C" style="cursor:inherit;font-family:inherit;border-radius:3px;"><span id="'+r+'S" style="cursor:inherit;font-family:inherit;border-radius:3px;">'+function(e,t){var a=apn.IWidget.exeFormatText(e);if(t){for(var i="",n=0;n<a.length;n++)" "==a[n]&&" "==a[n+1]?i+="&nbsp;":i+=a[n];a=i}return a}(n[r].text||"",o)+"</span></span>"+(a?"":" "):i+='<span id="'+r+'C" style="cursor:inherit;font-family:inherit;border-radius:3px;"><span id="'+r+'S" style="cursor:inherit;font-family:inherit;border-radius:3px;">'+(n[r].text||"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")+"</span></span>"+(a?"":" ");return this._convertLN(e,t,i)},xa._timeToSec=function(e){e=(e||"").split(":"),e=60*bx.$checkNaN(parseInt(e[0]))+bx.$checkNaN(parseInt(e[1]))+bx.$checkNaN(parseInt(e[2]))/100;return Math.round(1e3*e)/1e3},xa._closest=function(e,t,a){for(var i,n=[],o=null,r=0;r<a.length;r++)(i=e.wgtIntersectWith(void 0,t,1,a[r]))&&i.length&&n.push(i[0]);return 1<n.length?a=n:1==n.length&&(o=n[0]),o=o||e.utlFindClosest(t,a)},xa._hhmmss999TOmmss99=function(e){function t(e){return 2==e.length?e:2<e.length?e.substring(0,2):e+"0"}e=e.split(/[:.]/g);return 4==e.length?60*bx.$checkNaN(parseInt(e[0]))+bx.$checkNaN(parseInt(e[1]))+":"+e[2]+":"+t(e[3]):3==e.length?e[0]+":"+e[1]+":"+t(e[2]):""},xa._vttParse=function(e,t,a){if(!e||!e.split)return!1;for(var i,n,o=e.split("\n"),r=0,d=-1,p=0;p<o.length;p++)o[p]=o[p].replace(/\s+$/g,""),0<o[p].indexOf(":")&&0<o[p].indexOf("--\x3e")?2<(n=o[p].split(" ")).length&&"--\x3e"==n[1]&&this._hhmmss999TOmmss99(n[0])&&this._hhmmss999TOmmss99(n[2])?(d++,t&&(t[d]={text:""},t[d].stime=this._hhmmss999TOmmss99(n[0]),t[d].etime=this._hhmmss999TOmmss99(n[2])),r=1):(a&&void 0!==a.message&&(a.message+="VTT parsing error in line "+(p+1)+".\n"),i=!0):0==o[p].indexOf("NOTE")?r=2:!o[p]||1!=r||parseInt(o[p])&&o[p+1]&&0<o[p+1].indexOf(":")&&0<o[p+1].indexOf("--\x3e")||t&&(t[d].text+=(t[d].text?"\n":"")+o[p]);return-1==d&&(a&&void 0!==a.message&&(a.message+="This file is empty.\n"),i=!0),!i},xa.edtOnConfig=function(i,a,e,t,n){var o;if(o=i.wgtGetProperty(a,"v")){var r=i.getScreenData(),d=[];for(s in r.objects)r.objects[s].create&&r.objects[s].create.data&&r.objects[s].create.data.properties&&r.objects[s].create.data.properties.attrs&&r.objects[s].create.data.properties.attrs.apxMediaControl&&d.push({value:s,title:i.itrGetObjectTitle(s)});if(d.push({value:"",title:apn.CExe.GL(apn.CExe.TXT_SETUP_NOSEL)}),"2a"==o){var p,s,l=[];for(s in r.objects)(p=apn.Project.getStateByObjectID(i.getData(),i.getPageID(),s))&&l.push({value:s,title:i.itrGetObjectTitle(s)+" with "+p.length+" state"+(1<p.length?"s":"")});l.push({value:"",title:apn.CExe.GL(apn.CExe.TXT_SETUP_NOSEL)})}var g,u,c,x,y=i.wgtGetProperty(a,"cfg"),m=i.wgtGetProperty(a,"subs"),h={tagSub1:!0,tagSub2:!0,tagSub3:!0},f=this;c="2a"==o?(u=apn.CExe.GL({ko:"구간 정보",en:"Track data"}),apn.CExe.GL({ko:"연동할 미디어 위젯",en:"Media widget to sync with"})):(u=apn.CExe.GL({ko:"자막",en:"Subtitle"}),apn.CExe.GL({ko:"연동할 미디어 위젯",en:"Media widget to subtitle"})),n&&n.readOnly&&(n.title=i.itrGetObjectTitle(a)),(g=i.dlgDoModal(860,Math.floor(.9*bx.UX.height),function(){if(!(n&&n.readOnly||(eduLib.edtInputApplyAll(i,g.tagSub1),eduLib.edtInputApplyAll(i,g.tagSub2),eduLib.edtInputApplyAll(i,g.tagSub3),i.wgtSetProperty(a,"cfg",y),i.wgtSetProperty(a,"subs",m),"2a"==o))){if(y.txt="",y.mode)for(var e,t=0;t<m.length;t++)e=!1,t==m.length-1&&(e=!0),m[t].text.length&&"\n"==m[t].text[m[t].text.length-1]&&(e=!0),m[t].txtPos=y.txt.length,y.txt+=m[t].text+(e?"":" ");i.wgtSetProperty(a,"apxText",y.txt)}},void 0,n))&&(g.style.padding="12px",g.style.boxSizing="border-box",x=apn.CExe.CSS_SETUP_PANE+"height:"+(g.clientHeight-40-24)+"px",g.tagTab=g.$TAG("div",{style:"position:relative;font-weight:bold;width:100%;height:26px;padding-bottom:14px;"}),g.tagTab.innerHTML='<span id="tagSub2" style="'+apn.CExe.CSS_SETUP_TAB+'">'+apn.CExe.GL({ko:"설정",en:"Setup"})+'</span><span id="tagSub1" style="'+apn.CExe.CSS_SETUP_TAB+'">'+u+'</span><span id="tagSub3" style="'+apn.CExe.CSS_SETUP_TAB+'">'+apn.CExe.GL({ko:"VTT파일에서 읽기",en:"Import from VTT"})+"</span>"+apn.CExe.CSS_SETUP_TAB_END,g.tagTab.$$("tagSub1").onclick=g.tagTab.$$("tagSub2").onclick=g.tagTab.$$("tagSub3").onclick=function(){for(var e in h)this.id==e?(g[e].style.display="block",g.tagTab.$$(e).style.borderStyle="solid solid none solid"):(g[e].style.display="none",g.tagTab.$$(e).style.borderStyle="none none solid none");eduWgtSubtitle._uiLastSetupTab2A=this.id},g.tagSub1=g.$TAG("div",{style:x}),g.tagSub2=g.$TAG("div",{style:x}),g.tagSub3=g.$TAG("div",{style:x}),n&&n.readOnly&&(eduLib.edtInputDisable(i,g.tagSub1),eduLib.edtInputDisable(i,g.tagSub2),eduLib.edtInputDisable(i,g.tagSub3),g.tagTab.$$("tagSub3").style.display="none",window.ResizeObserver)&&new ResizeObserver(function(){g.tagTab.$$("tagBlank").style.width=g.clientWidth-24-(g.tagTab.$$("tagSub1").offsetLeft+g.tagTab.$$("tagSub1").offsetWidth)-1+"px"}).observe(g),"2"==o?(eduLib.edtInputAdd(i,g.tagSub1,{type:"table",value:m,options:{th:[{title:apn.CExe.GL({ko:"시작 시간",en:"Start Time"})+"[?]",comment:"(MM:SS.99)"},{title:apn.CExe.GL({ko:"종료 시간",en:"End Time"})+"[?]",comment:"(MM:SS.99)"},apn.CExe.GL({ko:"자막 문구",en:"Subtitle"})],add:!0,remove:!0},td:[{type:"timeMMSS99",key:"stime",width:"180px"},{type:"timeMMSS99",key:"etime",width:"180px"},{type:"text",key:"text",multiline:!0}],join:!0}),eduLib.edtInputAdd(i,g.tagSub1,{type:"message",value:apn.CExe.GL({en:"※ To break the line, you can enter line-break from 'Subtitle' field.",ko:"※ 표시되는 문장의 줄을 바꾸기 위해서는, 'Subtile'에 항목에서 줄바꿈을 입력하면 됩니다."}),join:!0})):eduLib.edtInputAdd(i,g.tagSub1,{type:"table",value:m,options:{th:[{title:apn.CExe.GL({ko:"시작 시간",en:"Start Time"})+"[?]",comment:"(MM:SS.99)"},{title:apn.CExe.GL({ko:"종료 시간",en:"End Time"})+"[?]",comment:"(MM:SS.99)"},{title:apn.CExe.GL({ko:"구간 제목",en:"Title of Track"}),comment:apn.CExe.GL({ko:"(Event로 발생되거나 Layer 제목과 맵핑됨)",en:"(Use as Event title or mapped with Layer by title)"})},{title:apn.CExe.GL({ko:"이 구간에서 멈춤",en:"Pause on track[?]"}),comment:apn.CExe.GL({ko:"(이 구간이 시작될 때 미디어 멈춤)",en:"(Pause media on entering this track)"})}],add:!0,remove:!0},td:[{type:"timeMMSS99",key:"stime",width:"180px"},{type:"timeMMSS99",key:"etime",width:"180px"},{type:"text",key:"text",multiline:!0},{type:"select",key:"pOes",options:[{title:"Yes",value:"Y"},{title:"No",value:"N"}],width:"120px"}],join:!0}),d.length&&(eduLib.edtInputAdd(i,g.tagSub2,{type:"select",options:d,title:c,key:"idMedia",value:y,join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"space"})),"2"==o?(eduLib.edtInputAdd(i,g.tagSub2,{type:"title",title:apn.CExe.GL({ko:"자막 표시",en:"Display text track"}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"select",title:apn.CExe.GL({ko:"표시 방식",en:"Display"}),key:"mode",value:y,options:[{title:apn.CExe.GL({ko:"일반 자막",en:"Each text track"}),value:""},{title:apn.CExe.GL({ko:"자막을 문단으로 합치고, 활성자막 배경색 강조",en:"Merge as a sentence and highlight track background"}),value:"s0"},{title:apn.CExe.GL({ko:"자막을 문단으로 합치고, 활성자막 텍스트 강조",en:"Merge as a sentence and highlight track text"}),value:"s1"}],onchange:function(){"s1"==this.value?eduLib.edtInputShow(i,g.tagSub2,"mode_s1",!0):eduLib.edtInputShow(i,g.tagSub2,"mode_s1",!1),this.value&&"s"==this.value[0]?eduLib.edtInputShow(i,g.tagSub2,"mode",!0):eduLib.edtInputShow(i,g.tagSub2,"mode",!1)},join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"color",title:apn.CExe.GL({ko:"활성자막 색상",en:"Highlight color"}),key:"modeClr",value:y,askUse:!0,join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode_s1",type:"select",title:apn.CExe.GL({ko:"활성자막에 볼드체 표시",en:"Bold font"}),key:"modeBold",value:y,options:[{title:apn.CExe.GL({ko:"예",en:"Yes"}),value:"Y"},{title:apn.CExe.GL({ko:"아니오",en:"No"}),value:"N"}],join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"select",title:apn.CExe.GL({ko:"줄바꿈 표시 간격",en:"Line-break margin"}),key:"yMrg",value:y,options:[{title:apn.CExe.GL({ko:"기본 간격",en:"Normal"}),value:"1"},{title:apn.CExe.GL({ko:"좁게",en:"Narrower"}),value:"2"},{title:apn.CExe.GL({ko:"넓게",en:"Wider"}),value:""}],join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"space"}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"title",title:apn.CExe.GL({ko:"터치에 의한 구간 Play",en:"Section play by touch"}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"select",title:apn.CExe.GL({ko:"Play 방식",en:"Play by touch"}),key:"ptp",value:y,options:[{title:apn.CExe.GL({ko:"터치된 자막에서부터 Play",en:"Play from touched text"}),value:"S"},{title:apn.CExe.GL({ko:"터치된 자막만 구간 Play",en:"Play touched section only"}),value:"R"},{title:apn.CExe.GL({ko:"기능 사용 안함",en:"No"}),value:"N"}],join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"color",title:apn.CExe.GL({ko:"마우스 호버 색상",en:"Hover color"}),key:"ptpClr",value:y,askUse:!0,join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"select",title:apn.CExe.GL({ko:"마우스 호버에서 볼드체 표시",en:"Bold font on Hover"}),key:"ptpBold",value:y,options:[{title:apn.CExe.GL({ko:"예",en:"Yes"}),value:"Y"},{title:apn.CExe.GL({ko:"아니오",en:"No"}),value:"N"}],join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{id:"mode",type:"message",value:apn.CExe.GL({en:"※ In case of 'Play touched section only', to start or resume the media, you need to clear the play section by Scripting.",ko:"※ '구간 Play' 방식을 사용하는 경우, 터치에 의하여 지정된 구간을 해제하고 처음부터 Play하기 위해서는 Script로 구간을 해제하고 Play해야 합니다."}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"space"}),eduLib.edtInputAdd(i,g.tagSub2,{type:"title",title:apn.CExe.GL({ko:"키워드 강조",en:"Keyword highlight"}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"color",title:apn.CExe.GL({ko:"강조 색상",en:"Highlight color"}),key:"colorFocus",value:y,join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"message",value:apn.CExe.GL({ko:"※ 텍스트에서 [[  ]]로 표시한 부분이 강조됩니다.",en:"※  Embrace with [[  ]] to highlight words"}),join:!0})):(eduLib.edtInputAdd(i,g.tagSub2,{type:"title",title:apn.CExe.GL({ko:"컨테이너 위젯과 자동으로 연동",en:"Automatically sync with"}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"select",options:l,title:apn.CExe.GL({ko:"연동할 위젯",en:"Layer/scene container"}),key:"idTarget",value:y,join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"message",value:apn.CExe.GL({en:"※ Also, you can sync with more widgets using 'Widget Event' from this widget.",ko:"※ 또한, 'Widget Event'를 통하여 다수의 Widget과 Sync할 수 있습니다."}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"space"}),eduLib.edtInputAdd(i,g.tagSub2,{type:"title",title:apn.CExe.GL({ko:"추가 설정",en:"More options"}),join:!0}),eduLib.edtInputAdd(i,g.tagSub2,{type:"select",title:apn.CExe.GL({ko:"Seek이 실행되면 현재 구간 지정 해제",en:"Clear current track on seek"}),key:"v2aRS",value:y,options:[{title:apn.CExe.GL({ko:"예",en:"Yes"}),value:"Y"},{title:apn.CExe.GL({ko:"아니오",en:"No"}),value:""}],join:!0})),eduLib.edtInputAdd(i,g.tagSub3,{type:"file",accept:".vtt",title:apn.CExe.GL({ko:"VTT 파일",en:"VTT file"}),value:y,key:"vtt",oncheck:function(e,t){if(e){var a=[];if(f._vttParse(e,a,t))return m=a,eduLib.edtInputClear(i,g.tagSub1),eduLib.edtInputAdd(i,g.tagSub1,{type:"table",value:m,options:{th:[{title:"Start Time[?]",comment:"(MM:SS.99)"},{title:"End Time[?]",comment:"(MM:SS.99)"},"Subtitle"],add:!0,remove:!0},td:[{type:"timeMMSS99",key:"stime",width:"180px"},{type:"timeMMSS99",key:"etime",width:"180px"},{type:"text",key:"text",multiline:!0}]}),!0}return!1},join:!0}),eduLib.edtInputAdd(i,g.tagSub3,{type:"message",value:apn.CExe.GL({en:"※ For CJK(Chinese,Japanese,Korean), VTT file needs to be encoded in UTF-8. Also, VTT parser doesn't support CSS styling information.",ko:"※ 한국어, 중국어, 일본어(CJK)를 사용하는 경우, VTT 파일이 UTF-8으로 인코딩되어야 합니다. 그리고, 이 VTT 분석기는 VTT에 포함된 CSS 스타일을 인식하지 않습니다."}),join:!0}),(void 0!==eduWgtSubtitle._uiLastSetupTab2A&&g.tagTab.$$(eduWgtSubtitle._uiLastSetupTab2A)?g.tagTab.$$(eduWgtSubtitle._uiLastSetupTab2A):g.tagTab.$$("tagSub2")).onclick(),g.tagTab.$$("tagBlank").style.width=g.clientWidth-24-g.tagTab.$$("tagBlank").offsetLeft-1+"px")}else this._edtOnConfigV1(i,a,e,t,n)},xa.edtOnRemapObjectID=function(e,t,a){t&&t.properties&&t.properties.attrs&&t.properties.attrs.cfg&&((t=t.properties.attrs.cfg).idMedia&&(a[t.idMedia]?t.idMedia=a[t.idMedia]:e.getScreenData().objects[t.idMedia]||(t.idMedia="")),t.idTarget)&&(a[t.idTarget]?t.idTarget=a[t.idTarget]:e.getScreenData().objects[t.idTarget]||(t.idTarget=""))},xa.edtOnBuildEvent=function(e,t,a,i,n){var o=e.pages[a].objects[t].create.data.properties.attrs.v;if(o&&"2"==o[0]){var r=e.pages[a].objects[t].create.data.properties.attrs.subs;if(i.wgtEvent={value:"wgtEvent",title:apn.P.eventTitle.wgtEvent,param:{}},r.length)for(var d=0;d<r.length;d++)"2a"==o?r[d].text&&(i.wgtEvent.param[r[d].text]=r[d].text):i.wgtEvent.param[d+1]=d+1+"";var p=apn.Project.findITRs(e,a,t);if(p&&p.length)for(var s,d=0;d<p.length;d++)!(s=apn.P.resolveCompositeSysEV(p[d].event))||!s.param||"wgtEvent"!=s.ev||i.wgtEvent&&i.wgtEvent.param[s.param]||(i.wgtEvent=i.wgtEvent||{value:"wgtEvent",title:apn.P.eventTitle.wgtEvent,param:{}},i.wgtEvent.param[s.param]=s.param);i.wgtEvent.param["[None]"]="[None]"}},xa.edtOnBuildState=function(e,t,a,i){var n=e.pages[a].objects[t].create.data.properties.attrs.v;if(n&&"2"==n[0]){i.r="Ready";var o=e.pages[a].objects[t].create.data.properties.attrs.subs;i.pNxt="Play Next",i.pPrv="Play Prev";for(var r=0;r<o.length;r++)"2a"==n?o[r].text&&(i["p_"+o[r].text]="Play "+o[r].text):i["p_"+(r+1)]="Play "+(r+1);for(i.sNxt="PlaySection Next",i.sPrv="PlaySection Prev",i.sC="ClearSection",r=0;r<o.length;r++)"2a"==n?o[r].text&&(i["s_"+o[r].text]="PlaySection "+o[r].text):i["s_"+(r+1)]="PlaySection "+(r+1)}},xa._edtOnConfigV1=function(e,t,a,i,n){var o,r=e.wgtGetProperty(t,"cfg"),d=e.wgtGetProperty(t,"subs");n&&n.readOnly&&(n.title=e.itrGetObjectTitle(t)),(o=e.dlgDoModal(800,600,function(){n&&n.readOnly||(e.getObjectByID(t).data.styles.textMultiLine=!0,eduLib.edtInputApplyAll(e,o),e.wgtSetProperty(t,"cfg",r),e.wgtSetProperty(t,"subs",d))},void 0,n))&&(n&&n.readOnly&&eduLib.edtInputDisable(e,o),e.wgtGetProperty(t,"noMultiTrack")?eduLib.edtInputAdd(e,o,{type:"table",value:d,options:{th:[{title:"Start Time[?]",comment:"(MM:SS.99)"},{title:"End Time[?]",comment:"(MM:SS:99)"},"Subtitle"],add:!0,remove:!0},td:[{type:"timeMMSS99",key:"stime",width:"180px"},{type:"timeMMSS99",key:"etime",width:"180px"},{type:"text",key:"text",multiline:!0}]}):eduLib.edtInputAdd(e,o,{type:"table",value:d,options:{th:["Track#",{title:"Start Time[?]",comment:"(MM:SS.99)"},{title:"End Time[?]",comment:"(MM:SS:99)"},"Subtitle"],add:!0,remove:!0},td:[{type:"text",key:"track",width:"50px"},{type:"timeMMSS99",key:"stime",width:"180px"},{type:"timeMMSS99",key:"etime",width:"180px"},{type:"text",key:"text",multiline:!0}]}),eduLib.edtInputAdd(e,o,{type:"space"}),eduLib.edtInputAdd(e,o,{type:"title",title:"More options"}),eduLib.edtInputAdd(e,o,{type:"color",title:"Highlight Color",key:"colorFocus",value:r,comment:"(Embrace with [[   ]] to highlight words)"}))},xa.pubOnGetText=function(e,t,a){var i,t=e.pages[t].objects[a].create.data,n=(t.styles&&t.styles.font&&(i=t.styles.font),i=apn.Project.resolveStyle(e,"font",i),t.properties.attrs),o="";if(!n.v||"2"==n.v)for(var r=0;r<n.subs.length;r++)o+=n.subs[r].text||"";return[{font:i,str:o}]},xa.pubOnGetFontList=function(e,t,a){e=this.pubOnGetText(e,t,a);return e[0].font&&e[0].str?[e[0].font]:null},eduWgtSubtitle=xa,(xa=apn.inheritWidget(eduWgtSubtitle)).styleMap={title:!0},xa.APX_NO_POINTER_EV=!0,xa.exeItrNoResize=!0,xa.exeItrNoZoom=!0,xa.exeItrNoMove=!0,xa.apdConfigReadOnly=!0,xa.properties.attrs.v="2a",xa.properties.attrs.noMultiTrack=!0,xa.apnCImage={url:"DB/EDU/imgs/wgts/edit/mediaAnnt.png"},xa.createAsCanvasObject=function(e,t,a,i,n){return apn.IWidget.createCanvasObject(e,this,"apn.CImage",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n,void 0,apn.CEditorS.NO_RESIZE)},xa._setupSpaned=eduWgtSubtitle._setupSpaned,xa._refresh=eduWgtSubtitle._refresh,xa._convertLN=eduWgtSubtitle._convertLN,xa._findkSub=eduWgtSubtitle._findkSub,xa._buildTextPlain=eduWgtSubtitle._buildTextPlain,xa._buildText=eduWgtSubtitle._buildText,xa._timeToSec=eduWgtSubtitle._timeToSec,xa._closest=eduWgtSubtitle._closest,xa._hhmmss999TOmmss99=eduWgtSubtitle._hhmmss999TOmmss99,xa._vttParse=eduWgtSubtitle._vttParse,eduWgtMediaAntn=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.rect"])).styleMap={title:!0,visibility:!0,alpha:!0},xa.editor=xa.editor||{},xa.editor.iconThumb="DB/ux/imgs/wgts/thumbs/dotIndicator.png",xa.properties=xa.properties||{},xa.properties.attrs={type:"Slide Widget",v:2,cfg:{imageOn:{mediaID:void 0},imageOff:{mediaID:void 0},margin:8,otb:"",xpg:[{i:""}]}},xa.onEdit=void 0,xa.edtOnConfig=function(e,t){var a=e.wgtGetProperty(t,"cfg"),i=e.wgtGetProperty(t,"v");if(void 0!==a.idWgt){var n,o=e.getScreenData(),r=[];for(n in o.objects)o.objects[n].create&&o.objects[n].create.data&&o.objects[n].create.data.properties&&o.objects[n].create.data.properties.attrs&&o.objects[n].create.data.properties.attrs.apxStep&&r.push({value:n,title:e.itrGetObjectTitle(n)});eduLib.utilSortObjectsByTitle(e,r),r.push({title:apn.CExe.GL(apn.CExe.TXT_SETUP_NOSEL),value:""})}var d,p={type:e.wgtGetProperty(t,"type")||a.type};function s(){r&&eduLib.edtInputShow(e,d,"ver2","Slide Widget"==this.value),eduLib.edtInputShow(e,d,"v2page","F2"==this.value)}var l,g=apn.dbUI&&apn.dbUI.system&&apn.dbUI.system.page?apn.dbUI.system.page:apn.CExe.GL({ko:"페이지",en:"Page"});(d=e.dlgDoModal(640,Math.ceil(.8*bx.UX.height),function(){eduLib.edtInputApplyAll(e,d),e.wgtSetProperty(t,"cfg",a),e.wgtSetProperty(t,"type",p.type)}))&&(eduLib.edtSetTitleWidth(e,d,.52),e.wgtGetProperty(t,"noPageMode")||(2==i?"apn.COverlayPage"==e.getScreenData().module?(eduLib.edtInputAdd(e,d,{type:"select",title:apn.CExe.GL({ko:"연동 대상 모듈",en:"Interact with"})+" (m)",options:[{title:g+" "+apn.CExe.GL({ko:"관리자",en:"manager of this file"}),value:"F2"},{title:apn.CExe.GL({ko:"스텝 연동 위젯",en:"Step interface widget in this "+g}),value:"Slide Widget"}],key:"type",value:p,onchange:s,join:!0}),l=!0):a.type="Slide Widget":eduLib.edtInputAdd(e,d,{type:"select",title:apn.CExe.GL({ko:"연동 대상 모듈",en:"Interact with"})+" (m)",options:[{title:g+" "+apn.CExe.GL({ko:"관리자",en:"manager of this file"}),value:"File"},{title:"'Slide Area' "+apn.CExe.GL({ko:"위젯",en:"widget in this "+g}),value:"Slide Widget"}],key:"type",value:p,onchange:s,join:!0}),r&&r.length&&eduLib.edtInputAdd(e,d,{id:"ver2",type:"select",options:r,title:apn.CExe.GL({ko:"연동 스텝 위젯",en:"Step widget to interface width"})+" (m)",key:"idWgt",value:a,join:!0}),eduLib.edtInputAdd(e,d,{type:"select",title:apn.CExe.GL({ko:"점을 클릭하면 연결 대상으로 전환",en:"Switch to the connected target on tap of a dot"}),value:a,key:"otb",options:[{title:apn.CExe.GL({ko:"예",en:"Yes"}),value:"Y"},{title:apn.CExe.GL({ko:"아니오",en:"No"}),value:""}],join:!0}),eduLib.edtInputAdd(e,d,{type:"space"})),eduLib.edtInputAdd(e,d,{type:"title",title:apn.CExe.GL({ko:"점 이미지",en:"Images for dot"})}),eduLib.edtInputAdd(e,d,{type:"image",title:apn.CExe.GL({ko:"선택",en:"On"})+" (m)",key:"imageOn",value:a,join:!0}),eduLib.edtInputAdd(e,d,{type:"image",title:apn.CExe.GL({ko:"미선택",en:"Off"})+" (m)",key:"imageOff",value:a,join:!0}),eduLib.edtInputAdd(e,d,{type:"space"}),eduLib.edtInputAdd(e,d,{type:"title",title:apn.CExe.GL(apn.CExe.TXT_SETUP_OPTS)}),eduLib.edtInputAdd(e,d,{type:"number",title:apn.CExe.GL({ko:"점간 여백",en:"Margin between dots"})+"[px]",key:"margin",value:a,join:!0}),l)&&(eduLib.edtInputAdd(e,d,{id:"v2page",type:"space"}),eduLib.edtInputAdd(e,d,{id:"v2page",type:"title",title:apn.CExe.GL({ko:"제외할",en:"Excluded"})+" "+g}),(i=apn.CExeBook.IStub_pageSelectionList(e.getData())).push({title:apn.CExe.GL(apn.CExe.TXT_SETUP_NOSEL),value:""}),eduLib.edtInputAdd(e,d,{id:"v2page",type:"table",value:a.xpg,options:{th:[g],add:!0,remove:!0,noNumber:!0},td:[{type:"select",key:"i",options:i}],join:!0}))},xa.edtOnRemapObjectID=function(e,t,a){t&&t.properties&&t.properties.attrs&&t.properties.attrs.cfg&&(t=t.properties.attrs.cfg).idWgt&&(a[t.idWgt]?t.idWgt=a[t.idWgt]:e.getScreenData().objects[t.idWgt]||(t.idWgt=""))},xa.edtOnCheckEdited=function(e,t){e.getObjectByID(t);e=e.wgtGetProperty(t,"cfg");return!(!e.imageOn.mediaID||!e.imageOff.mediaID)},xa._imgW=function(e){return parseInt(e.style.width)?parseInt(e.style.width):e.width||e.naturalWidth||0},xa._imgH=function(e){return parseInt(e.style.height)?parseInt(e.style.height):e.height||e.naturalHeight||0},xa.setupDots=function(d,p,s,l){var g,u,c,x,y=d.wgtGetProperty(p,"cfg"),m=d.wgtTag(p);function e(){if(2==++g){m.ctx.tagDotOn=u,m.ctx.tagDotOffs=[],m.ctx.tagDotOffs.push(c),m.ctx.marginX=bx.$checkNaN(parseInt(y.margin)),m.ctx.count=s,m.ctx.cur=-1,1==d.getZoomX()&&1==d.getZoomY()||(e=x._imgW(m.ctx.tagDotOffs[0]),t=x._imgH(m.ctx.tagDotOffs[0]),a=x._imgW(m.ctx.tagDotOn),i=x._imgH(m.ctx.tagDotOn),m.ctx.tagDotOffs[0].style.width=Math.round(1/d.getZoomX()*e)+"px",m.ctx.tagDotOffs[0].style.height=Math.round(1/d.getZoomY()*t)+"px",m.ctx.tagDotOn.style.width=Math.round(1/d.getZoomX()*a)+"px",m.ctx.tagDotOn.style.height=Math.round(1/d.getZoomY()*i)+"px");var e,t,a,i,n=s-(m.ctx.tagDotOffs.length+1);if(0<n)for(var o=0;o<n;o++){var r=m.ctx.tagDotOffs[0].cloneNode(!0);m.ctx.tagDotOffs[0].parentNode.appendChild(r),m.ctx.tagDotOffs.push(r)}if("Y"==y.otb)for(o=0;o<m.ctx.tagDotOffs.length;o++)m.ctx.tagDotOffs[o].style.cursor="pointer",m.ctx.tagDotOffs[o].apxOnEvent=function(e,t){if("click"==t)return"F2"==(t=e.wgtGetProperty(p,"type"))&&m.ctx.pages&&m.ctx.pages[this._dotIdx]?e.runITR({action:"LTP",to:{pageID:m.ctx.pages[this._dotIdx],type:1}}):"Slide Widget"==t&&y.idWgt&&e.wgtTag(y.idWgt)&&e.wgtSetProperty(y.idWgt,"apxStepRun",this._dotIdx),!0};m.ctx.ready=!0,void 0!==m.ctx._delayed&&(uxWgtDotIndicator.showDots(d,p,m.ctx._delayed.count,m.ctx._delayed.current),m.ctx._delayed=void 0),l&&l()}}m.ctx&&(m.ctx.setupCalled||m.ctx.ready)||(m.ctx.setupCalled=!0,g=0,(u=m.$TAG("img",{style:"position:absolute;",alt:""})).onload=e,u.src=d.mediaURL(y.imageOn.mediaID),(c=m.$TAG("img",{style:"position:absolute;",alt:""})).onload=e,c.src=d.mediaURL(y.imageOff.mediaID),m.style.display="none",x=this)},xa.showDots=function(e,t,a,n){var o=e.wgtTag(t);if(o&&o.ctx&&(o.ctx.cur=n,o.ctx.countUpdated=a,o.ctx.ready)){o.style.display="block";var e=this._imgW(o.ctx.tagDotOffs[0])*(a-1)+this._imgW(o.ctx.tagDotOn)+o.ctx.marginX*(a-1),t=Math.max(this._imgH(o.ctx.tagDotOffs[0]),this._imgH(o.ctx.tagDotOn)),r=0,d=(parseInt(o.style.width)-e)/2,p=(parseInt(o.style.height)-t)/2+t/2;for(o.ctx.tagDotOn.style.display="none",i=0;i<o.ctx.tagDotOffs.length;i++)o.ctx.tagDotOffs[i].style.display="none";if(!(n<0||1==a))for(i=0;i<a;i++)i==n?(o.ctx.tagDotOn.style.display="block",o.ctx.tagDotOn.style.left=d+"px",o.ctx.tagDotOn.style.top=p-this._imgH(o.ctx.tagDotOn)/2+"px",d+=this._imgW(o.ctx.tagDotOn)+o.ctx.marginX):(o.ctx.tagDotOffs[r].style.display="block",o.ctx.tagDotOffs[r].style.left=d+"px",o.ctx.tagDotOffs[r].style.top=p-this._imgH(o.ctx.tagDotOffs[r])/2+"px",o.ctx.tagDotOffs[r]._dotIdx=i,d+=this._imgW(o.ctx.tagDotOffs[r])+o.ctx.marginX,r++)}},xa.exeOnLoad=function(i,n){var e=i.wgtGetProperty(n,"type"),t=i.wgtGetProperty(n,"cfg"),a=i.wgtTag(n);if(t.imageOn.mediaID&&t.imageOff.mediaID)if(a.firstChild&&"DIV"==a.firstChild.tagName&&(a.firstChild.style.display="none"),a.ctx={},"File"==e){var o=i.utlGetIndexInFlow(n,{key:"type",value:"File"},!0);if(o.count<=1)i.log(n,"Only 1 slide includes this widget. So, this widget will be disabled.");else{{function r(){uxWgtDotIndicator.showDots(i,n,o.count,o.index)}uxWgtDotIndicator.setupDots(i,n,o.count,r)}i.wgtSetProperty(n,"apxFixOverPage",!0)}}else if("F2"==e){var d=apn.Project.getPages(i.viewer.project,!0);if(t.xpg&&t.xpg.length)for(var p,s=0;s<t.xpg.length;s++)for(p=0;p<d.length;p++)d[p]==t.xpg[s].i&&(d.splice(p,1),p--);{function r(){i.viewer.getCurPageID()&&uxWgtDotIndicator.exeOnPageRun(i,n,i.viewer.getCurPageID())}d.length<=1?i.log(n,"Only 1 page is included in the flow of this file. This widget will be disabled."):(a.ctx.pages=d,uxWgtDotIndicator.setupDots(i,n,d.length,r))}}else if("Video/Audio"==e||"Video/Audio Widget"==e){var l=i.getWidgetsByProperty("apxMediaControl"),g=i.getWidgetsByProperty("apxMediaControl");if(l.length){for(var u,c=apn.Project.findParentOf(i.screen,n,void 0,!0),s=0;s<g.length;s++)c&&c!=apn.Project.findParentOf(i.screen,g[s],void 0,!0)&&(g.splice(s,1),s--);(u=uxWgtDotIndicator._closest(i,n,g)||uxWgtDotIndicator._closest(i,n,l))&&i.wgtListenMedia(n,u,function(e,t,a){switch(e){case"listSet":uxWgtDotIndicator.setupDots(i,n,t,x);break;case"trackEnd":uxWgtDotIndicator._onTrackOn(i,n,t,a)}})}else i.log(n,"Cannot find any kind of Media Widget in this page. So, this widget will be disabled.");function x(){uxWgtDotIndicator._onTrackOn(i,n,a.ctx.count,-1==a.ctx.cur?0:a.ctx.cur)}}else if("Slide"==e||"Slide Widget"==e){if(t.idWgt)u=t.idWgt;else{var l=i.getWidgetsByProperty("apxStep"),y=i.getWidgetsByProperty("apxStep");if(!l.length)return void i.log(n,"Cannot find any kind of Step Widget in this page. So, this widget will be disabled.");for(c=apn.Project.findParentOf(i.screen,n,void 0,!0),s=0;s<y.length;s++)c&&c!=apn.Project.findParentOf(i.screen,y[s],void 0,!0)&&(y.splice(s,1),s--);u=uxWgtDotIndicator._closest(i,n,y)||uxWgtDotIndicator._closest(i,n,l)}u&&i.wgtListenProperty(n,"apxStep",function(e,t){e==u&&uxWgtDotIndicator._onStep(i,n,t)})}},xa.exeOnPageRun=function(e,t,a){var i=e.wgtTag(t);if(i.ctx&&i.ctx.pages&&1<i.ctx.pages.length){for(var n=0;n<i.ctx.pages.length;n++)if(i.ctx.pages[n]==a)return void this.showDots(e,t,i.ctx.pages.length,n);"none"==i.style.display&&this.showDots(e,t,i.ctx.pages.length,0)}},xa._closest=function(e,t,a){for(var i,n=[],o=null,r=0;r<a.length;r++)(i=e.wgtIntersectWith(void 0,t,1,a[r]))&&i.length&&n.push(i[0]);return 1<n.length?a=n:1==n.length&&(o=n[0]),o=o||e.utlFindClosest(t,a)},xa._onTrackOn=function(e,t,a,i){var n=e.wgtTag(t);a<=1?uxWgtDotIndicator.showDots(e,t,1,-1):a<(i=i==a?0:i)||a>n.ctx.tagDotOffs.length+1?(uxWgtDotIndicator.showDots(e,t,1,-1),e.devError(t,"Invalid track information; trackCount="+a+", trackCur="+i)):uxWgtDotIndicator.showDots(e,t,a,i)},xa._onStep=function(e,t,a){var i=e.wgtTag(t);a.count&&!(a.count<=1)&&a.current<a.count?i.ctx.setupCalled?i.ctx.ready?uxWgtDotIndicator.showDots(e,t,a.count,a.current):i.ctx._delayed=a:uxWgtDotIndicator.setupDots(e,t,a.count,function(){void 0!==i.ctx._delayed?(uxWgtDotIndicator.showDots(e,t,i.ctx._delayed.count,i.ctx._delayed.current),i.ctx._delayed=void 0):uxWgtDotIndicator.showDots(e,t,i.ctx.countUpdated||i.ctx.count,-1==i.ctx.cur?0:i.ctx.cur)}):(uxWgtDotIndicator.showDots(e,t,1,-1),e.devError(t,"Invalid step information; stepCount="+a.count+", stepCur="+a.current))},uxWgtDotIndicator=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.image2"])).exeFireStateEvent=!0,xa.styleMap={title:!0,visibility:!0,strokeStyle:!0,lineWidth:!0,lineDash:!0,font:!0,fontSize:!0,fontStyle:!0,fontItalic:!0,fontBold:!0,textMultiLine:!0,fontUnderlined:!0,text:!0,textAlign:!0,textValign:!0,textPadding:!0,fontStrokeStyle:!0,fontStrokeWidth:!0,borderRadiusTopLeft:!0,borderRadiusTopRight:!0,borderRadiusBottomLeft:!0,borderRadiusBottomRight:!0,alpha:!0,angle:!0,mediaID:!0,dragX:!0,dragY:!0,dragInParent:!0,dragContainParent:!0,csr:!0},xa.editor={},xa.editor.iconThumb="DB/ux/imgs/wgts/thumbs/imageButton.png",xa._txtSpt1={ko:"기본 상태 이미지 ID",en:"Image asset ID for normal state"},xa._txtSpt2={ko:"선택 상태 이미지 ID",en:"Image asset ID for selected state"},xa.scriptInfo={wgtDataByParam:"selectType",wgtData:{"":{image:{help:"{normal:ID|undefined, pressed:ID|undefined, hover:ID|undefined}\n"+apn.CExe.GL(xa._txtSpt1),type:"so",value:{}},imageDisabled:{help:"{normal:ID|undefined}\n"+apn.CExe.GL({ko:"비활성 상태 이미지 ID",en:"Image asset ID for disabled state"}),type:"so",value:{}}},tab:{image:{help:"{normal:ID|undefined, hover:ID|undefined}\n"+apn.CExe.GL(xa._txtSpt1),type:"so",value:{}},imageSelected:{help:"{normal:ID|undefined}\n"+apn.CExe.GL(xa._txtSpt2),type:"so",value:{}}},check:{image:{help:"{normal:ID|undefined, hover:ID|undefined}\n"+apn.CExe.GL({ko:"미선택 상태 이미지 ID",en:"Image asset ID for unchecked state"}),type:"so",value:{}},imageChecked:{help:"{normal:ID|undefined, hover:ID|undefined}\n"+apn.CExe.GL(xa._txtSpt2).replace("selected","checked"),type:"so",value:{}}}}},xa.properties.state="normal",xa.properties.attrs=xa.properties.attrs||{},xa.properties.attrs.selectType="",xa.properties.attrs.btnV=2,xa.properties.attrs.autoKeepSize=!1,xa.properties.attrs.cfg={images:{normal:{mediaID:void 0},down:{mediaID:void 0},hover:{mediaID:void 0},disabled:{mediaID:void 0},disabledDown:{mediaID:void 0},disabledHover:{mediaID:void 0},checked:{mediaID:void 0},checkedD:{mediaID:void 0},checkedH:{mediaID:void 0}},clr:{disabled:null,down:null,hover:null},ttip:"",hvrSync:""},xa.onEdit=apn.widgets["apn.wgt.rect"].onEdit,xa.exeCreateTag=function(e,t,a,i,n,o){e=apn.widgets["apn.wgt.rect"].exeCreateTag.call(this,e,t,a,i,n,o);return e.apnTapCsr=!0,e},xa.exeAssetPreload=function(e,t,i){var a,n=e.wgtGetProperty(t,"cfg"),o={},r=0;for(a in n.images)n.images[a].mediaID&&(o[a]={url:e.mediaURL(n.images[a].mediaID)},r++);r?(new apn.CRscLoader).load(e.project,o,function(e,t,a){i()}):i()},xa.exeOnLoad=function(t,r){var a=this,n=t.wgtTag(r);function i(){if(t.wgtTag(r)){var e="hover";if("toggle"==u)"disabled"==t.wgtGetProperty(r,"apxState")&&(e="disabledHover");else if("check"==u)"checked"==t.wgtGetProperty(r,"apxState")&&(e="checkedH");else if("disabled"==t.wgtGetProperty(r,"apxState"))return;n._images[e].mediaID&&a.exeAssetLoad(t,n,n._images[e].mediaID),uxWgtBtnImage.setTextColor(t,r,e),a.I_exeOnStateChange&&a.I_exeOnStateChange(t,r,e)}}function o(){var e;t.wgtTag(r)&&(e=n._down?"check"==u?"checkedD":"down":t.wgtGetProperty(r,"apxState"),n._images[e].mediaID&&a.exeAssetLoad(t,n,n._images[e].mediaID),uxWgtBtnImage.setTextColor(t,r,e),a.I_exeOnStateChange)&&a.I_exeOnStateChange(t,r,e)}function d(){if(t.wgtTag(r)){var e="down";if("toggle"==u)"disabled"==t.wgtGetProperty(r,"apxState")&&(e="disabledDown");else if("check"!=u&&"disabled"==t.wgtGetProperty(r,"apxState"))return;n._images[e].mediaID&&a.exeAssetLoad(t,n,n._images[e].mediaID),uxWgtBtnImage.setTextColor(t,r,e),a.I_exeOnStateChange&&a.I_exeOnStateChange(t,r,e)}}function p(){var e=t.wgtGetProperty(r,"apxState");n._images[e]||(e="normal"),n._images[e].mediaID&&a.exeAssetLoad(t,n,n._images[e].mediaID),uxWgtBtnImage.setTextColor(t,r,e),a.I_exeOnStateChange&&a.I_exeOnStateChange(t,r,e)}var s,l,g=t.wgtGetProperty(r,"cfg"),u=t.wgtGetProperty(r,"selectType");function c(e){e?n.btnOnDown&&n.btnOnDown(n):n._down&&(n._down=!1,n.btnOnState&&n.btnOnState(n),g.hvrSync)&&t.ctxSet("uxWgtBtnImage_"+g.hvrSync,{oId:r,state:3})}function x(e,t){e.apnBlockPointerEvent||(t==bx.CGesture.POINTER_START?c(!0):t==bx.CGesture.POINTER_END&&c(!1))}function y(e){e&&t.log(r,"Image can be set only to replace existing image. Currently, '"+e+"' image is unset for this widget.")}g.ttip&&(n.title=g.ttip),g.images.disabledDown||(g.images.disabledDown={mediaID:void 0}),g.images.disabledHover||(g.images.disabledHover={mediaID:void 0}),g.clr||(g.clr={disabled:null,down:null,hover:null}),this.I_exeOnLoad_check&&!this.I_exeOnLoad_check(t,r)||(n._images=bx.$cloneObject({},g.images),n._down=!1,"tab"==u||"toggle"==u?("tab"==u&&(n._images.down=n._images.disabled,n._images.hover.mediaID||(n._images.hover=n._images.disabled)),n.apxOnEvent=function(e,t,a,i){if("click"==t)return"toggle"==u?"normal"==e.wgtGetProperty(r,"apxState")?e.wgtSetProperty(r,"apxState","disabled"):e.wgtSetProperty(r,"apxState","normal"):"normal"==e.wgtGetProperty(r,"apxState")&&e.wgtSetProperty(r,"apxState","disabled"),!0}):"check"==u&&(n.apxOnEvent=function(e,t,a,i,n,n,o){if("click"==t)return"normal"==e.wgtGetProperty(r,"apxState")?e.wgtSetProperty(r,"apxState","checked"):e.wgtSetProperty(r,"apxState","normal"),!0}),(n._images.down.mediaID||g.clr&&g.clr.down||n._images.disabledDown.mediaID||g.clr&&g.clr.disabledDown)&&(l=!0,n.btnOnDown=function(e){"toggle"!=u&&"check"!=u&&"disabled"==t.wgtGetProperty(r,"apxState")||n._down||(n._down=!0,d(),g.hvrSync&&t.ctxSet("uxWgtBtnImage_"+g.hvrSync,{oId:r,state:2}))}),n.btnOnState=function(e){p()},(n._images.hover.mediaID||g.clr&&g.clr.hover||n._images.disabledHover.mediaID||g.clr&&g.clr.disabledHover||g.clr&&g.clr.checkedH)&&(s=!0,bx.HCL.DV.hasTouchEvent()||(n.onmousemove=function(e){return!n.apnPassPointerEvent&&!n.apnBlockPointerEvent&&void(n._down||(i(),!g.hvrSync)||n._btnHover||(n._btnHover=!0,t.ctxSet("uxWgtBtnImage_"+g.hvrSync,{oId:r,state:1})))},n.onmouseout=function(e){return!n.apnPassPointerEvent&&!n.apnBlockPointerEvent&&(o(),void(g.hvrSync&&n._btnHover&&(n._btnHover=!1,n._down||t.ctxSet("uxWgtBtnImage_"+g.hvrSync,{oId:r,state:0}))))})),t.viewer.o.verGestureDispatch&&(n.apxOnGesture=function(e,t){x(this,t)}),new bx.CGesture(n,x,{noDelayedEvent:!0,noLongholdEvent:!0}),n.btnOnState&&n.btnOnState(n),g.hvrSync&&t.wgtListenContext(r,"uxWgtBtnImage_"+g.hvrSync,function(e){e&&e.oId!=r&&(s&&0==e.state?o():s&&1==e.state?i():l&&2==e.state?d():3==e.state&&p())},!0),t.wgtListenProperty(r,"image",function(e,t){var a,i;e==r&&t&&(t.normal&&(n._images.normal.mediaID?(n._images.normal.mediaID=t.normal,i=!0):a="Normal"),t.pressed&&(n._images.down.mediaID?(n._images.down.mediaID=t.pressed,i=!0):a="Pressed"),t.hover&&(n._images.hover.mediaID?(n._images.hover.mediaID=t.hover,i=!0):a="Hover"),i&&n.btnOnState&&n.btnOnState(n),y(a))}),t.wgtListenProperty(r,"imageDisabled",function(e,t){var a,i;e==r&&t&&(t.normal&&(n._images.disabled.mediaID?(n._images.disabled.mediaID=t.normal,i=!0):a="Disabled"),i&&n.btnOnState&&n.btnOnState(n),y(a))}),t.wgtListenProperty(r,"imageChecked",function(e,t){var a,i;e==r&&t&&(t.normal&&(n._images.checked.mediaID?(n._images.checked.mediaID=t.normal,i=!0):a="Checked"),t.hover&&(n._images.checkedH.mediaID?(n._images.checkedH.mediaID=t.hover,i=!0):a="Checked.hover"),i&&n.btnOnState&&n.btnOnState(n),y(a))}),t.wgtListenProperty(r,"imageSelected",function(e,t){var a,i;e==r&&t&&(t.normal&&(n._images.disabled.mediaID?(n._images.disabled.mediaID=t.normal,i=!0):a="Selected"),i&&n.btnOnState&&n.btnOnState(n),y(a))}),this.I_exeOnLoad_post&&this.I_exeOnLoad_post(t,r))},xa.exeSetState=function(t,e,a,i){i==a||("toggle"!=(i=t.wgtGetProperty(t.wgtId(e),"selectType"))&&"check"!=i&&setTimeout(function(){"normal"==a?"Block"!=t.wgtGetProperty(e.apnOID,"apxVisibility")&&2!=t.wgtGetProperty(e.apnOID,"apxVisibility")&&(t.tagBlockPointerEvent(e,!1),apn.IWidget.exeSetCursor(e,t.wgtGetProperty(e.apnOID,"apxCursor",!0))):(t.tagBlockPointerEvent(e,!0),apn.IWidget.exeSetCursor(e,"inherit"))},0),e.btnOnState&&e.btnOnState(e),i=t.wgtId(e),!t.wgtGetProperty(i,"uxToggleGroup"))||"disabled"!=a&&"checked"!=a||t.utlIterateInGroup(i,"uxToggleGroup",function(e){"on"==t.wgtGetProperty(e,"apxState")?t.wgtSetProperty(e,"apxState","off"):"disabled"==t.wgtGetProperty(e,"apxState")||"checked"==t.wgtGetProperty(e,"apxState")?t.wgtSetProperty(e,"apxState","normal"):"2"==t.stateGetActive(e,!0)&&(t.stateLayerActivate(e,"1"),t.stateSetActive(e,"1"))})},xa.exeOnScreenRefresh=apn.widgets["apn.wgt.rect"].exeOnScreenRefresh,xa.setTextColor=function(e,t,a){var i,n=e.wgtTag(t),o=e.wgtGetProperty(t,"cfg"),r=e.wgtGetProperty(t,"btnV");(i=!!e.wgtGetProperty(t,"apxText")?n.textTag||n:i)&&o.clr&&("normal"==a?(i.style.color=n==i?apn.Project.resolveStyle(e.project,"fontStyle",e.wgtGetProperty(t,"apxTextColor")):"inherit",2==r&&(n.style.borderColor=apn.Project.resolveStyle(e.project,"strokeStyle",e.wgtGetProperty(t,"apxStrokeStyle")))):o.clr[a]&&(i.style.color=o.clr[a],2==r)&&(n.style.borderColor=o.clr[a]))},xa.createAsCanvasObject=function(e,t,a,i,n){return apn.IWidget.createCanvasObject(e,this,"apn.CImage",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n)},xa.edtOnConfig=function(e,t){var a,i=e.wgtGetProperty(t,"cfg"),n=e.wgtGetProperty(t,"local"),o=e.wgtGetProperty(t,"selectType"),r=(i.images.disabledDown||(i.images.disabledDown={mediaID:void 0}),i.images.disabledHover||(i.images.disabledHover={mediaID:void 0}),i.clr||(i.clr={disabled:null,down:null,hover:null}),this);(a=e.dlgDoModal(700,Math.ceil(.8*bx.UX.height),function(){eduLib.edtInputApplyAll(e,a.tagSub),eduLib.edtInputApplyAll(e,a.tagOrg),r.edtOnSetState(e,t,e.wgtGetProperty(t,"apxState")),e.wgtSetProperty(t,"cfg",i),n&&(e.wgtSetProperty(t,"local",n),r.I_edtOnConfig_save)&&r.I_edtOnConfig_save(e,t,n,a,a.tagSub,a.tagOrg),a._tmpSelectType&&e.wgtSetProperty(t,"selectType",a._tmpSelectType)}))&&(a.tagSub=a.$TAG("div"),a.tagOrg=a.$TAG("div"),this.I_edtOnConfig&&this.I_edtOnConfig(e,t,n,a,a.tagSub,a.tagOrg),uxWgtBtnImage.I_edtOnConfigBuild.call(this,e,t,a,a.tagOrg,o))},xa.I_edtOnConfigBuild=function(e,t,a,i,n){var o,r=e.wgtGetProperty(t,"cfg"),d=(a._tmpSelectType=n,apn.CExe.GL({ko:"비활성 상태",en:"Disabled"})),p=apn.CExe.GL({ko:"기본 상태",en:"Normal"}),s=apn.CExe.GL({ko:"버튼 상태 표시를 위한 이미지",en:"Image for each states"}),l=p,g=d,a=(o=2==e.wgtGetProperty(t,"btnV")?apn.CExe.GL({ko:"버튼 상태 표시를 위한 텍스트/테두리 색상",en:"Text/border color for each states"}):apn.CExe.GL({ko:"버튼 상태 표시를 위한 텍스트 색상",en:"Text color for each states"}),this.I_edtOnConfig_title&&this.I_edtOnConfig_title(e,t,a,"normal")&&(l=this.I_edtOnConfig_title(e,t,a,"normal")),this.I_edtOnConfig_title&&this.I_edtOnConfig_title(e,t,a,"disabled")&&(g=this.I_edtOnConfig_title(e,t,a,"disabled")),i.eduLib&&delete i.eduLib,i.innerHTML="","text"==e.wgtGetProperty(t,"btnType")),t=!!e.wgtGetProperty(t,"apxText");"tab"==n?(l==p&&(l=apn.CExe.GL({ko:"미선택 상태",en:"Unselected"})),g==d&&(g=apn.CExe.GL({ko:"선택 상태",en:"Selected"})),a||(eduLib.edtInputAdd(e,i,{type:"title",title:s}),eduLib.edtInputAdd(e,i,{type:"image",title:l+"",value:r.images,key:"normal",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Hover",value:r.images,key:"hover",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:g+"",value:r.images,key:"disabled",join:!0})),r.clr&&(t||a)&&(r.clr.down&&(r.clr.down=null),eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:o}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:g,value:r.clr,key:"disabled",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Hover",value:r.clr,key:"hover",join:!0}))):"toggle"==n?(g==d&&(g="Selected"),a||(eduLib.edtInputAdd(e,i,{type:"title",title:s}),eduLib.edtInputAdd(e,i,{type:"image",title:g+"",value:r.images,key:"disabled",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:g+" Hover",value:r.images,key:"disabledHover",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:g+" Pressed",value:r.images,key:"disabledDown",join:!0}),eduLib.edtInputAdd(e,i,{type:"space",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+"",value:r.images,key:"normal",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Hover",value:r.images,key:"hover",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Pressed",value:r.images,key:"down",join:!0})),r.clr&&(t||a)&&(eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:o}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:g,value:r.clr,key:"disabled",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:g+" Hover",value:r.clr,key:"disabledHover",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:g+" Pressed",value:r.clr,key:"disabledDown",join:!0}),eduLib.edtInputAdd(e,i,{type:"space",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Hover",value:r.clr,key:"hover",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Pressed",value:r.clr,key:"down",join:!0}))):"check"==n?(l=apn.CExe.GL({ko:"미선택 상태",en:"Unchecked"}),p=apn.CExe.GL({ko:"선택 상태",en:"Checked"}),a||(eduLib.edtInputAdd(e,i,{type:"title",title:s}),eduLib.edtInputAdd(e,i,{type:"image",title:p+"",value:r.images,key:"checked",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:p+" Hover",value:r.images,key:"checkedH",join:!0}),eduLib.edtInputAdd(e,i,{type:"space",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+"",value:r.images,key:"normal",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Hover",value:r.images,key:"hover",join:!0})),r.clr&&(t||a)&&(eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:o}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:p,value:r.clr,key:"checked",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:p+" Hover",value:r.clr,key:"checkedH",join:!0}),eduLib.edtInputAdd(e,i,{type:"space",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Hover",value:r.clr,key:"hover",join:!0}))):(a||(eduLib.edtInputAdd(e,i,{type:"title",title:s}),eduLib.edtInputAdd(e,i,{type:"image",title:l+"",value:r.images,key:"normal",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Hover",value:r.images,key:"hover",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:l+" Pressed",value:r.images,key:"down",join:!0}),"simple"!=n&&(eduLib.edtInputAdd(e,i,{type:"space",join:!0}),eduLib.edtInputAdd(e,i,{type:"image",title:g,value:r.images,key:"disabled",join:!0}))),r.clr&&(t||a)&&(eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:o}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Hover",value:r.clr,key:"hover",join:!0}),eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:l+" Pressed",value:r.clr,key:"down",join:!0}),"simple"!=n)&&eduLib.edtInputAdd(e,i,{type:"color",askUse:!0,title:g,value:r.clr,key:"disabled",join:!0}),eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:apn.CExe.GL({ko:"버튼간 Hover/Pressed 상태 동기화",en:"Synchronize Hover/Pressed status with buttons"})}),eduLib.edtInputAdd(e,i,{type:"text",title:apn.CExe.GL({ko:"그룹 지정",en:"Group"}),value:r,key:"hvrSync",comment:apn.CExe.GL({ko:"(편집자가 할당한 그룹ID)",en:"(Unique group ID assigned by user(editor))"}),join:!0})),eduLib.edtInputAdd(e,i,{type:"space"}),eduLib.edtInputAdd(e,i,{type:"title",title:apn.CExe.GL({ko:"도움말(툴팁)",en:"Tooltip"})}),eduLib.edtInputAdd(e,i,{type:"text",title:apn.CExe.GL({ko:"메시지",en:"Message"}),value:r,key:"ttip",join:!0})},xa.edtOnSetState=function(e,t,a){var i=e.wgtGetProperty(t,"cfg");i.images[a].mediaID?e.wgtSetProperty(t,"apxMediaID",i.images[a].mediaID,e.wgtGetProperty(t,"autoKeepSize")):e.wgtSetProperty(t,"apxMediaID",null)},xa.edtOnBuildState=function(e,t,a,i){var n,e=e.pages[a].objects[t].create.data;"tab"==(n=e&&e.properties&&e.properties.attrs?e.properties.attrs.selectType:n)||"toggle"==n?(i.disabled="Selected",i.normal="Unselected"):"check"==n?(i.checked="Checked",i.normal="Unchecked"):(i.normal="Normal",i.disabled="Disabled")},xa.pubOnGetHTML=function(e,t,a,i){var n=apn.IWidget.htmlRender(this,e,t,a),o="<div",r=(n.css+="overflow:hidden;",n.style.mediaID&&(n.css+="background-size:100% 100%;background-repeat:no-repeat;background-image: url("+apn.Project.mediaResolve(e,n.style.mediaID,!1,!0)+");"),""),e=e.pages[t].objects[a].create.data.properties.attrs;return e.ttip&&(r+=' title="'+apn.IWidget.exeFormatText(e.ttip,{xml:!0,noTag:!0})+'"'),o=(o+=' style="'+n.css+'"'+r)+(' class="apxWgt1'+(i&&i.addCls?" "+i.addCls:"")+'"'),i&&i.noId?o+=">":o+=' data-apx-id="'+a+'">',o+="</div>"},uxWgtBtnImage=xa,window.bx=window.bx||{},bx.YT={_loaded:!1,_trying:!1,_playerIndex:0,_onLoads:[]},bx.YT.init=function(t){var e,a;bx.YT._loaded||(bx.YT._trying?bx.YT._onLoads.push(t):(window.onYouTubeIframeAPIReady=function(){if(bx.YT._trying=!1,bx.YT._loaded=!0,t&&t(),bx.YT._onLoads.length){for(var e=0;e<bx.YT._onLoads.length;e++)bx.YT._onLoads[e]();bx.YT._onLoads=[]}},(e=document.createElement("script")).src="https://www.youtube.com/iframe_api",(a=document.getElementsByTagName("script")[0]).parentNode.insertBefore(e,a),bx.YT._trying=!0))},bx.YT.isReady=function(){return bx.YT._loaded},bx.YT.CVideo=function(){this.player=null,this.tag=null,this.src=null,this._loaded=!1,this._playReqed=null,this._cueReqed=null,this._playing=null,this._pauseReqed=null,this._seekReqed=null},bx.YT.CVideo.prototype.create=function(e,t,a,i){var n=this;var o=!1;var r="bxYT$"+bx.YT._playerIndex++,d=document.createElement("DIV");d.id=r,(e||document.body).appendChild(d),(i=i||{}).controls=i.controls||0,i.info=i.info||0,i.fullscreen=i.fullscreen||0,i.loop=i.loop||0,i.annotation=i.annotation||1,this.player=new YT.Player(r,{height:a,width:t,playerVars:{autohide:1,controls:i.controls,showinfo:i.info,modestbranding:1,disablekb:1,fs:i.fullscreen,loop:i.loop,iv_load_policy:i.annotation,rel:0},events:{onReady:function(e){if(!n.__destroyed){var t;n._loaded=!0,n._playReqed?(n.player.loadVideoById(n._playReqed),n.src=n._playReqed,n._cueReqed&&n._cueReqed==n._playReqed&&(n._cueReqed=null),n._playReqed=null):n._cueReqed&&(n.player.cueVideoById(n._cueReqed),n.src=n._cueReqed,n._cueReqed=null);try{t=n.tag.contentWindow.document.getElementsByTagName("a")}catch(e){}if(t)for(var a,i=0;i<t.length;i++)(a=t[i].getAttribute("class"))&&-1!=a.indexOf("ytp-watermark")&&(t[i].style.display="none")}},onStateChange:function(e){n.__destroyed?n.pause():-1==e.data?(o=!0,n._playing=null):e.data==YT.PlayerState.PLAYING?(o&&(n.onloadedmetadata&&n.onloadedmetadata(),o=!1),n.onplay&&n.onplay(),n._playing=n.src,n._pauseReqed?(n.pause(),n._pauseReqed=null):null!==n._seekReqed&&n.duration()&&("string"==typeof n._seekReqed&&(n._seekReqed=bx.$checkNaN(parseFloat(n._seekReqed))/100*n.duration()),n.player.seekTo(n._seekReqed),n._seekReqed=null)):e.data!=YT.PlayerState.ENDED&&e.data!=YT.PlayerState.PAUSED||(e.data==YT.PlayerState.ENDED&&(o=!0,n._playing=null,n.onended)&&n.onended(),e.data==YT.PlayerState.PAUSED&&n.onpause&&n.onpause())},onError:function(e){n.onerror&&n.onerror(e.data)}}}),this.tag=document.getElementById(r)},bx.YT.CVideo.prototype.load=function(e){this._pauseReqed=null,this._seekReqed=null,this._loaded?(this.player.loadVideoById(e),this.src=e):this._cueReqed=e},bx.YT.CVideo.prototype.destroy=function(){this.player&&(this.pause(),this.__destroyed=!0)},bx.YT.CVideo.prototype.cue=function(e){this._pauseReqed=null,this._seekReqed=null,this._loaded?this.player.cueVideoById(e):this._cueReqed=e},bx.YT.CVideo.prototype.play=function(e,t,a){this._pauseReqed=null,this._seekReqed=null,(e=e||this.src||this._cueReqed)?this._loaded?t||e!=this.src?a?this.player.loadVideoById(e,a):this.player.loadVideoById(e):this.player.playVideo():this._playReqed=e:bx.Trace.log("BLUX","warning","Invalid YouTube ID="+e,"YT.play")},bx.YT.CVideo.prototype.pause=function(){this._loaded?(this.player.pauseVideo(),this._pauseReqed=null):this._pauseReqed=!0},bx.YT.CVideo.prototype.paused=function(e){return!(!this.player||!this.player.getPlayerState)&&(e?-1==this.player.getPlayerState()||0==this.player.getPlayerState()||2==this.player.getPlayerState()||5==this.player.getPlayerState():2==this.player.getPlayerState())},bx.YT.CVideo.prototype.seeking=function(){return!(!this.player||!this.player.getPlayerState||this.player.getPlayerState()!=YT.PlayerState.BUFFERING)},bx.YT.CVideo.prototype.duration=function(){if(this.player&&this.player.getDuration&&this._loaded){var e=this.player.getDuration();if(void 0!==e)return e}},bx.YT.CVideo.prototype.currentTime=function(){if(this.player&&this.player.getCurrentTime&&this._loaded){var e=this.player.getCurrentTime();if(void 0!==e)return e}},bx.YT.CVideo.prototype.setCurrentTimeDelayed=function(e){this._seekReqed=e},bx.YT.CVideo.prototype.setCurrentTime=function(e){return!!(this.player&&this.player.seekTo&&this._loaded)&&(this.player.getPlayerState()!=YT.PlayerState.PLAYING?this._seekReqed=e:this.player.seekTo(e),!0)},bx.YT.CVideo.prototype.mute=function(e){if(e){if(this.player&&this.player.mute)return this.player.mute(),!0}else if(this.player&&this.player.unMute)return this.player.unMute(),!0;return!1},bx.YT.CVideo.prototype.muted=function(){if(this.player&&this.player.isMuted)return this.player.isMuted()},bx.YT.CVideo.prototype.setVolume=function(e){return!(!this.player||!this.player.setVolume||(this.player.setVolume(100*e),0))},bx.YT.CVideo.prototype.volume=function(){if(this.player&&this.player.getVolume){var e=this.player.getVolume();if(void 0!==e)return e/100}},(xa={APX_NO_POINTER_EV:!0,styleMap:{title:!0,visibility:!0,alpha:!0,angle:!0},scriptInfo:{wgtData:{YouTubeURL:{help:{ko:"String\nYouTube 비디오 URL 또는 ID",en:"String\nURL or ID of YouTube video"},value:"String",type:"so"}}},editor:{iconThumb:"imgs/wgts/thumbs/video.png",properties:{Control:["Show","Hide"],"YouTube Info":{title:"Information",input:["Show","Hide"]},ytAnn:{title:"Annotation",input:["Show","Hide"]}},runtimeProperties:{YouTubeURL:{title:"YouTube URL",input:""}},states:{play:"Play",stop:"Stop",resume:"Resume",pause:"Pause"}},properties:{state:"stop",attrs:{apxMediaControl:2,Control:"Hide",Loop:"Off","YouTube Info":"Hide",ytAnn:"Hide",ids:[{id:""}],noMultiTrack:!0}},CMedia:{btnPlay:"DB/ux/imgs/wgts/youtube_play_btn.png",bgColor:"#000000",control:{Show:{btnPlay:!0,systemControl:!0},Hide:{btnPlay:!0}}}}).exeCreateTag=apn.widgets["apn.wgt.rect"].exeCreateTag,xa.exeRenderTag=apn.widgets["apn.wgt.rect"].exeRenderTag,xa.createAsCanvasObject=apn.widgets["apn.wgt.audio"].createAsCanvasObject,xa.exeSetState=function(e,t,a,i,n){if(a){if(bx.HCL.DV.isAndroid())return null;"play"!=a||t.mediaTag||(t._delayedAutoPlay=!0),e.wgtControlMedia(e.wgtId(t),a)}},xa.exeOnLoad=function(a,i){var n=a.wgtTag(i);function e(){a.wgtTag(i)&&(uxWgtYT._createPlayer(a,i),n._delayedAutoPlay&&(a.wgtControlMedia(i,"play"),delete n._delayedAutoPlay),n._tagBlock=n.$TAG("div",{style:"position:absolute;left:0px;top:0px;width:100%;height:100%;z-index:1;display:none;"}))}n.style.backgroundColor="#000000",bx.YT&&(bx.YT.isReady()?e():bx.YT.init(e)),a.wgtListenProperty(i,"YouTubeURL",function(e,t){e==i&&uxWgtYT.exeAssetLoad(a,n,[uxWgtYT._convert(t)])});var t,o=this;(t=a.wgtGetProperty(i,"mdaSync"))&&a.wgtListenContext(i,"apxMediaToggle_"+t,function(e){!a.wgtTag(i)||e&&e.oId!=i&&!n.mediaTag.paused()&&o.exeMediaPause(n)},!0),a.wgtListenProperty(i,"playSection",function(e,t){e==i&&t&&(void 0!==t.from&&void 0!==t.to?n._apnPlaySectionStart=t.from:(n._apnPlaySectionStart=0,a.wgtSetProperty(i,"playSection",void 0,!0)))})},xa.exeOnScreenDrag=function(e,t,a){e=e.wgtTag(t);a?e._tagBlock&&(e._tagBlock.style.display="block"):e._tagBlock&&(e._tagBlock.style.display="none")},xa.exeOnPause=function(e,t){e.wgtTag(t).mediaTag&&e.wgtTag(t).mediaTag.pause()},xa.exeOnDestroy=function(e,t){e=e.wgtTag(t);e.mediaTag&&e.mediaTag.destroy()},xa.exeOnScreenVisibility=function(e,t,a){t=e.wgtTag(t);if(t.mediaTag){var i=apn.Project.getLayout(e.project).property.CExe,n="P";if(!i||"P"!=i.mediaOnHidden)if(i&&"S"==i.mediaOnHidden)n="S";else{if(i&&"B"==i.mediaOnHidden)return;if(t.apxBackgroundOnSystemHidden)return;if(e.viewer.constructor.IStub_getConfiguration&&e.viewer.constructor.IStub_getConfiguration(e.project)&&e.viewer.constructor.IStub_getConfiguration(e.project).apxBackgroundOnSystemHidden)return}"visible"==(t.__apxLastScreenVisibility=a)?t.mediaTag.paused()&&t.__apxPausedByScreenVisibility&&(this.exeMediaPlay(t),t.__apxPausedByScreenVisibility=!1):"hidden"!=a||t.mediaTag.paused()||("S"==n?this.exeMediaStop(t):(this.exeMediaPause(t),t.__apxPausedByScreenVisibility=!0))}},xa.exeAssetLoad=function(e,t,a){t.mediaTag&&(t.mediaTag.apnPlayList=a,t.mediaTag.apnPlayList.apnCurrent=-1,t.mediaTag.apnPlayList.length)&&(t.mediaTag.load(t.mediaTag.apnPlayList[0]),t.mediaTag.apnPlayList.apnCurrent=0,t.exeOnMediaEvent)&&t.exeOnMediaEvent("listSet",t.mediaTag.apnPlayList.length)},xa.exeOnTick=function(e,t){var a,i,n,o,t=e.wgtTag(t);t.mediaTag&&(n=t.mediaTag.muted(),o=t.mediaTag.volume(),void 0!==n&&void 0!==o&&(void 0!==t.mediaTag.prvMute&&t.mediaTag.prvMute==n||(t.mediaTag.prvMute=n,a=!0),void 0!==t.mediaTag.prvVol&&t.mediaTag.prvVol==o||(t.mediaTag.prvVol=o,a=!0),a)&&t.exeOnMediaEvent&&t.exeOnMediaEvent("volumeChange",o,n),a=t.mediaTag.currentTime(),o=t.mediaTag.duration(),void 0!==a)&&void 0!==o&&(void 0!==t.mediaTag.prvTimeCur&&t.mediaTag.prvTimeCur==a||(t.mediaTag.prvTimeCur=a,i=!0),void 0!==t.mediaTag.prvTimeDur&&t.mediaTag.prvTimeDur==o||(t.mediaTag.prvTimeDur=o,i=!0),i)&&(e.wgtGetProperty(t.apnOID,"playSection")&&!this.exeMediaInfo(t,"pause")&&(n=e.wgtGetProperty(t.apnOID,"playSection"),(i=this.exeMediaInfo(t,"currentTime"))<n.from-(bx.HCL.DV.isIOS()?.2:0)?this.exeMediaSeek(t,n.from,!0):i>=n.to&&(this.exeMediaSeek(t,n.from,!0),this.exeMediaPause(t))),t.exeOnMediaEvent)&&t.exeOnMediaEvent("infoPlayTime",a,o)},xa.exeMediaPlay=function(e,t,a){if(e.mediaTag){var i,n=0;t&&void 0!==a&&a-1<e.mediaTag.apnPlayList.length&&(n=a-1),t&&(e.mediaTag.apnPlayEnded=!1,e.mediaTag.apnPlayList.apnCurrent=n,e.mediaTag.load(e.mediaTag.apnPlayList[n]),e._apnPlaySectionStart)&&(i=e._apnPlaySectionStart);try{e.mediaTag.play(void 0,t,i)}catch(e){console.error("Exception in play video",e)}}},xa.exeMediaPause=function(e){e._delayedAutoPlay=!1,e.mediaTag&&e.mediaTag.src&&e.mediaTag.pause()},xa.exeMediaStop=function(e,t){e._delayedAutoPlay=!1,e.mediaTag&&e.mediaTag.src&&(e.mediaTag.paused()?(t&&!e.mediaTag.apnPlayEnded&&t.fireEvent("media","End",e.apnOID),e.mediaTag.apnPlayEnded=!0):(e.mediaTag.apnPlayEnded=!0,e.mediaTag.pause()),e.mediaTag.apnPlayList.apnCurrent=0,e.mediaTag.cue(e.mediaTag.src))},xa.exeMediaSeek=function(e,t,a,i){if(e.mediaTag&&e.mediaTag.src){var n=0;if(e.mediaTag.duration()){var o,r,n="string"==typeof t?bx.$checkNaN(parseFloat(t))/100*e.mediaTag.duration():t;if(n=Math.min(n,e.mediaTag.duration()),i&&(i instanceof Object?(o=i.rangeCheck,r=i.seekOnly):o=!0),o){if(void 0!==e.__lastSeeked&&Math.abs(e.__lastSeeked-n)<1)return;e.__lastSeeked=n}r?e.mediaTag.setCurrentTime(n):(a||this.exeMediaInfo(e,"pause")||e.mediaTag.pause(),a&&(this.exeMediaInfo(e,"pause")&&this.exeMediaPlay(e),e.mediaTag.setCurrentTime(n)))}else r||(a||this.exeMediaInfo(e,"pause")||e.mediaTag.pause(),a&&(this.exeMediaInfo(e,"pause")&&this.exeMediaPlay(e),e.mediaTag.setCurrentTimeDelayed(t)));e.mediaTag.apnOnSeek&&e.mediaTag.apnOnSeek(n),r&&(e.apnPlayEnded=!1,e.mediaTag.apnPlayEnded=!1)}},xa.exeMediaCheck=function(e){switch(e){case"mute":case"volume":case"pause":case"currentTime":case"end":case"seeking":return!0}return!1},xa.exeMediaControl=function(e,t,a){if(e.mediaTag){if("mute"==t)return e.mediaTag.mute(a);if("volume"==t)return e.mediaTag.setVolume(a)}return!1},xa.exeMediaInfo=function(e,t){if(e.mediaTag)return"mute"==t?e.mediaTag.muted():"volume"==t?e.mediaTag.volume():"pause"==t?e.mediaTag.paused(!0):"currentTime"==t?e.mediaTag.currentTime()||0:"seeking"==t?e.mediaTag.seeking():"end"==t?e.mediaTag.apnPlayEnded:void 0},xa.mediaHandler=function(a,i,e){a.mediaTag.onloadedmetadata=function(){a.exeOnMediaEvent&&(0==this.apnPlayList.apnCurrent&&a.exeOnMediaEvent("listStart"),this.duration()&&a.exeOnMediaEvent("infoDuration",0,this.duration()),a.exeOnMediaEvent("trackStart",this.apnPlayList&&1<this.apnPlayList.length?this.apnPlayList.length:1,this.apnPlayList.apnCurrent+1)),0==this.apnPlayList.apnCurrent&&i.fireEvent("media","Start",a.apnOID)},a.mediaTag.onplay=function(){var e;a.mediaTag.apnPlayEnded=!1,a.mediaTag.currentTime()&&(i.fireEvent("media","Resume",a.apnOID),a.exeOnMediaEvent)&&a.exeOnMediaEvent("trackResume",this.apnPlayList&&1<this.apnPlayList.length?this.apnPlayList.length:1,this.apnPlayList.apnCurrent+1),(e=i.wgtGetProperty(a.apnOID,"mdaSync"))&&i.ctxSet("apxMediaToggle_"+e,{oId:a.apnOID})},a.mediaTag.onpause=function(){1==a.mediaTag.apnPlayEnded?(i.fireEvent("media","End",a.apnOID),a.exeOnMediaEvent&&a.exeOnMediaEvent("trackEnd")):(i.fireEvent("media","Pause",a.apnOID),a.exeOnMediaEvent&&a.exeOnMediaEvent("trackPause"))},a.mediaTag.onended=function(){var e=!1,t=this.apnPlayList&&1<this.apnPlayList.length?this.apnPlayList.apnCurrent+1:1,e=(this.apnPlayList&&1<this.apnPlayList.length&&(this.apnPlayList.apnCurrent<this.apnPlayList.length-1&&(this.apnPlayList.apnCurrent++,e=!0),e)&&this.play(this.apnPlayList[this.apnPlayList.apnCurrent]),e||(this.apnPlayEnded=!0,this.apnPlayList.apnCurrent=0,this.cue(this.apnPlayList[0])),this.apnPlayList&&1<this.apnPlayList.length?this.apnPlayList.length:1);a.exeOnMediaEvent&&a.exeOnMediaEvent("trackEnd",e,t),e==t&&i.fireEvent("media","End",a.apnOID)},a.mediaTag.onerror=function(e){bx.Trace.log("APN","warning","Cannot play YouTube Video ID="+this.src+", YouTube Code="+e,"APN.YT")}},xa._createPlayer=function(e,t){for(var a=e.wgtTag(t),i={controls:"Show"==e.wgtGetProperty(t,"Control")?1:0,info:"Show"==e.wgtGetProperty(t,"YouTube Info")?1:0},n=(e.viewer.isResizeSafe&&e.viewer.isResizeSafe()&&(i.fullscreen=1),"On"==e.wgtGetProperty(t,"Loop")&&(i.loop=1),"Hide"==e.wgtGetProperty(t,"ytAnn")&&(i.annotation=3),a.mediaTag=new bx.YT.CVideo,a.mediaTag.create(a,parseInt(a.style.width),parseInt(a.style.height),i),uxWgtYT.mediaHandler(a,e),[]),o=0;o<e.wgtGetProperty(t,"ids").length;o++)e.wgtGetProperty(t,"ids")[o].id&&n.push(e.wgtGetProperty(t,"ids")[o].id);uxWgtYT.exeAssetLoad(e,a,n)},xa._convert=function(e){if(-1!=(e||"").indexOf("v=")){if(bx.$getParamFromURL(e,"v"))return bx.$getParamFromURL(e,"v")}else{var t=(e||"").split("/");if(0<t.length&&t[t.length-1])return t[t.length-1]}return e},xa.edtOnConfig=function(t,a){var i,n=t.wgtGetProperty(a,"ids"),o={mdaSync:t.wgtGetProperty(a,"mdaSync")};(i=t.dlgDoModal(640,340,function(){eduLib.edtInputApplyAll(t,i);for(var e=0;e<n.length;e++)n[e].id=uxWgtYT._convert(n[e].id);t.wgtSetProperty(a,"ids",n),t.wgtSetProperty(a,"mdaSync",o.mdaSync)}))&&(t.wgtGetProperty(a,"noMultiTrack")?eduLib.edtInputAdd(t,i,{type:"table",value:n,options:{th:["YouTube URL/ID"]},td:[{type:"text",key:"id"}],join:!0}):eduLib.edtInputAdd(t,i,{type:"table",value:n,options:{th:["YouTube URL/ID"],add:!0,remove:!0},td:[{type:"text",key:"id"}],join:!0}),eduLib.edtInputAdd(t,i,{type:"space"}),apn.widgets["apn.wgt.video"]._edtOnConfigMdaSync(t,i,o))},xa.edtOnCheckEdited=function(e,t){var a=e.getObjectByID(t);if(a.data&&a.data.properties&&a.data.properties.attrs&&a.data.properties.attrs.ids)for(var i=0;i<a.data.properties.attrs.ids.length;i++)if(a.data.properties.attrs.ids[i]&&a.data.properties.attrs.ids[i].id)return!0;return!1},uxWgtYT=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.rect"])).APX_NO_POINTER_EV=!0,xa.styleMap={title:!0,visibility:!0,alpha:!0,angle:!0},xa.editor={iconThumb:"DB/ux/imgs/wgts/thumbs/tag.png"},xa.properties={attrs:{URL:"http://",Scrollbar:"Auto",cfg:{pW:"",pWn:"width",pH:"",pHn:"height"}}},xa.scriptInfo={wgtData:{message:{help:"Send or receive data with IFRAME TAG. To receive, get this value on 'ReceiveMessage' Widget event."}}},xa.onEdit=void 0,xa.exeCreateTag=function(e,t,a,i,n){var o=!1,a=(a.create.data.properties&&a.create.data.properties.attrs&&a.create.data.properties.attrs.Scrollbar&&"Auto"==a.create.data.properties.attrs.Scrollbar&&(o=!0),document.body.$TAG("div",{style:"position:absolute;overflow:hidden;"}));return a.$CSS({boxSizing:"border-box"}),a.apnCur={},a._tagIFrame=a.$TAG("iframe",{scrolling:o?"auto":"no",style:"position:absolute;left:0px;top:0px;width:100%;height:100%;border:none;overflow:hidden;"}),a._tagBlock=a.$TAG("div",{style:"position:absolute;left:0px;top:0px;width:100%;height:100%;z-index:1;display:none;"}),a},xa._htmlSet=function(e,t,a){t._tagIFrame.sandbox="allow-same-origin allow-modals",t._tagIFrame.src="",t._dlydHtml=a},xa.exeOnLoad=function(i,n){var o=i.wgtTag(n),a=this;setTimeout(function(){var e,t=i.wgtGetProperty(n,"URL"),a=i.wgtGetProperty(n,"cfg");"http://"!=t&&(a&&(a.pW&&a.pWn||a.pH&&a.pHn)&&(e=!0,-1==t.indexOf("?")&&(t+="?",e=!1),a.pW&&a.pWn&&(t+=(e?"&":"")+a.pWn+"="+parseInt(o.style.width),e=!0),a.pH)&&a.pHn&&(t+=(e?"&":"")+a.pHn+"="+parseInt(o.style.height)),o._tagIFrame.src=t)},0),o._tagIFrame.addEventListener("load",function(){if(o._dlydHtml){try{o._tagIFrame.contentWindow.document.documentElement.innerHTML=o._dlydHtml}catch(e){i.log(n,"'IFRAME tag handling'"+apn.CExe.MSG_SECURITY_1)}delete o._dlydHtml,a._syncHTML(i,o)}i.fireEvent("wgtEvent","load",n)},!1),i.wgtListenProperty(n,"URL",function(e,t){e==n&&(o._tagIFrame.src=t||"")}),i.wgtListenProperty(n,"HTML",function(e,t){e==n&&a._htmlSet(i,o,t)}),i.wgtListenProperty(n,"syncHTML",function(e,t){e==n&&a._syncHTML(i,o)}),i.wgtListenProperty(n,"print",function(e,t){if(e==n)try{var a=o._tagIFrame.contentWindow||o._tagIFrame;bx.HCL.DV.isIE()&&a.focus(),a.print()}catch(e){i.log(n,"'IFRAME tag printing'"+apn.CExe.MSG_SECURITY_1)}}),i.wgtListenProperty(n,"save",function(e,t){e==n&&(e="frame.html",t&&t.fileName&&(e=t.fileName),a._syncHTML(i,o),i.viewer.IDevice_saveAs(i.wgtGetProperty(n,"HTML"),e))}),i.wgtListenProperty(n,"copy",function(e,t){if(e==n)try{var a=o._tagIFrame.contentWindow||o._tagIFrame;a.document&&a.document.execCommand&&(t&&t.all&&a.document.execCommand("selectAll"),a.document.execCommand("copy"))}catch(e){}}),i.wgtListenProperty(n,"message",function(e,t){e==n&&(o._tagIFrame.contentWindow||o._tagIFrame).postMessage({apxID:n,value:t},"*")})},xa._syncHTML=function(t,a){try{a._tagIFrame.contentWindow.document&&a._tagIFrame.contentWindow.document.documentElement&&t.wgtSetProperty(a.apnOID,"HTML",a._tagIFrame.contentWindow.document.documentElement.outerHTML,!0)}catch(e){t.log(a.apnOID,"'IFRAME tag handling'"+apn.CExe.MSG_SECURITY_1)}},xa.exeOnScreenDrag=function(e,t,a){e=e.wgtTag(t);a?e._tagBlock&&(e._tagBlock.style.display="block"):e._tagBlock&&(e._tagBlock.style.display="none")},xa.exeOnReceiveMessage=function(e,t,a){e.wgtSetProperty(t,"message",a,!0),e.fireEvent("wgtEvent","receiveMessage",t)},xa.edtOnBuildEvent=function(e,t,a,i){i.wgtEvent={value:"wgtEvent",title:apn.P.eventTitle.wgtEvent,param:{}},i.wgtEvent.param.load="Load",i.wgtEvent.param.receiveMessage="ReceiveMessage"},xa.edtOnBuildRuntimeProperty=function(e,t,a){return{URL:{title:"URL",input:"http://"}}},xa.edtOnBuildProperty=function(e,t,a,i){return{URL:{title:"URL",input:"http://"},Scrollbar:{title:"Scrollbar",input:["Auto","None"]}}},uxWgtIFRAME=xa,(xa={APX_NO_POINTER_EV:!0,styleMap:{title:!0},exeItrNoResize:!0,exeItrNoZoom:!0,exeItrNoMove:!0,editor:{}}).editor.states={on:"On",off:"Off"},xa.editor.properties={Interval:{title:"Interval[ms]",input:null,type:"number"},Offset:{title:"Offset[±ms]",input:null,type:"number"},noST:{title:"FireOnStart",input:[{title:"Yes",value:""},{title:"No",value:"Y"}]},apxBackgroundTick:{title:"Daemon",input:[{title:"On",value:"Y"},{title:"Off",value:""}]},apxAllowBubble:{title:"Bubbling",input:[{title:"Yes",value:"Y"},{title:"No",value:""}]}},xa.apnCImage={url:"DB/ux/imgs/wgts/edit/timer_on.png"},xa.properties={},xa.properties.state="off",xa.properties.attrs={Interval:1e3,Offset:0,apxBackgroundTick:"",noST:"",apxAllowBubble:""},xa.MIN=25,xa.createAsCanvasObject=function(e,t,a,i,n){return apn.IWidget.createCanvasObject(e,this,"apn.CImage",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n,void 0,apn.CEditorS.NO_RESIZE)},xa.exeCreateTag=function(e,t,a,i,n,o){var r=document.body.$TAG("div",{style:"position:absolute;overflow:hidden;"});return r.apnCur={},o&&t.wgtHide&&t.wgtHide(o),r},xa.exeRenderTag=function(e,t,a,i,n,o){return a},xa.exeOnLoad=function(e,t){var a=bx.$checkNaN(parseInt(e.wgtGetProperty(t,"Offset"))),i=bx.$checkNaN(parseInt(e.wgtGetProperty(t,"Interval"))),e=(i<uxWgtTimer.MIN&&(i=uxWgtTimer.MIN),e.wgtTag(t));e._interval=i,e._offset=a},xa.exeOnStart=xa.exeOnResume=function(e,t){var a=e.wgtTag(t);a.__state="on"==e.wgtGetProperty(t,"apxState"),a._tm=0},xa.exeOnTick=function(e,t,a){var i=e.wgtTag(t);i.__state&&(0===i._tm&&"Y"==e.wgtGetProperty(t,"noST")?i._tm=a+i._interval:(0===i._tm||i._tm<=a)&&(e.fireEvent("timer",void 0,t,"Y"==e.wgtGetProperty(t,"apxBackgroundTick")),i._tm=a+Math.max(uxWgtTimer.MIN,i._interval+Math.floor(i._offset*(Math.random()-.5)*2))))},xa.exeSetState=function(e,t,a){t.__state="on"==a,t._tm=0},xa.edtOnSetState=function(e,t,a){var i=e.wgtGetProperty(t,"Interval");bx.$checkNaN(parseInt(i))<uxWgtTimer.MIN&&(i=uxWgtTimer.MIN,e.wgtSetProperty(t,"Interval",i)),e.wgtSetProperty(t,"URL","DB/ux/imgs/wgts/edit/timer_"+a+".png"),e.setMediaToObject(t,"DB/ux/imgs/wgts/edit/timer_"+a+".png")},xa.edtOnBuildEvent=function(e,t,a,i){i.timer={value:"timer",title:apn.P.eventTitle.timer}},uxWgtTimer=xa,(xa=apn.inheritWidget(apn.widgets["apn.wgt.singleText"])).styleMap={title:!0,visibility:!0,strokeStyle:!0,lineWidth:!0,lineDash:!0,fillStyle:!0,font:!0,fontSize:!0,fontStyle:!0,fontItalic:!0,fontBold:!0,fontUnderlined:!0,text:!0,textPadding:!0,fontStrokeStyle:!0,fontStrokeWidth:!0,alpha:!0,angle:!0,dragX:!0,dragY:!0,dragInParent:!0,dragContainParent:!0},xa.editor=xa.editor||{},xa.editor.states={ready:"Ready",increase:"Increase",decrease:"Decrease"},xa.editor.statesFire={True:"True",False:"False"},xa.editor.properties={InitialValue:{title:apn.CExe.GL({ko:"시작값",en:"Initial Value"}),input:"",type:"number"},TargetValue:{title:apn.CExe.GL({ko:"목표값",en:"Trigger Value"}),input:"",type:"number"}},xa.properties=xa.properties||{},xa.properties.state="ready",xa.properties.attrs={InitialValue:0,TargetValue:1},xa.exeOnLoad=function(e,t){var a=e.wgtTag(t);a.ctx={},a.ctx.value=bx.$checkNaN(parseInt(e.wgtGetProperty(t,"InitialValue"))),a.ctx.target=bx.$checkNaN(parseInt(e.wgtGetProperty(t,"TargetValue")))},xa.exeInputGet=function(e,t){return t.ctx.value},xa.exeInputSet=function(e,t,a){var i=t.ctx.value;return t.ctx.value=bx.$checkNaN(parseInt(a)),uxWgtCounter.check(e,t.apnOID),i!=t.ctx.value&&e.fireEvent("inputSet",void 0,t.apnOID),t.ctx.value},xa.edtOnInputGet=function(e,t,a){return(e=e.pages[t].objects[a].create.data)&&e.properties&&e.properties.attrs&&e.properties.attrs.InitialValue||0},xa.exeSetState=function(e,t,a,i,n){"increase"==a?(t.ctx.value++,uxWgtCounter.check(e,e.wgtId(t))):"decrease"==a&&(t.ctx.value--,uxWgtCounter.check(e,e.wgtId(t))),n&&uxWgtCounter.check(e,e.wgtId(t))},xa.check=function(e,t){var a=e.wgtTag(t);a.ctx.value==a.ctx.target?e.fireEvent("stateChange","$APXTrue",t):e.fireEvent("stateChange","$APXFalse",t),e.wgtSetProperty(t,"apxText",a.ctx.value+""),e.wgtSetProperty(t,"apxState","ready")},xa.edtOnSetProperty=function(e,t,a,i){"InitialValue"==a&&e.wgtSetProperty(t,"apxText",i)},xa.onEdit=void 0,xa.edtOnBuildProperty=void 0,uxWgtCounter=xa,(xa={APX_NO_POINTER_EV:!0,styleMap:{title:!0},exeItrNoResize:!0,exeItrNoZoom:!0,exeItrNoMove:!0,editor:{}}).editor.states={ready:"Ready",on:"Use",off:"Clear"},xa.properties={},xa.properties.state="ready",xa.properties.attrs={},xa.properties.attrs.cfg={imgPng:{mediaID:void 0},cX:0,cY:0},xa.createAsCanvasObject=function(e,t,a,i,n){return apn.IWidget.createCanvasObject(e,this,"apn.CImage",bx.CCanvasWnd.SHAPE_RECT,t,a,i,n,void 0,apn.CEditorS.NO_RESIZE)},xa.exeCreateTag=function(e,t,a,i,n){var o=document.body.$TAG("div",{style:"position:absolute;overflow:hidden;diplay:none;"});return o.apnCur={},o},xa.exeRenderTag=function(e,t,a,i,n,o){return a},xa.exeSetState=function(e,t,a){"on"==a?(t=e.wgtGetProperty(e.wgtId(t),"cfg")).imgPng.mediaID&&e.setCursor(e.mediaURL(t.imgPng.mediaID),t.cX,t.cY):"off"==a&&e.clearCursor()},xa.edtOnConfig=function(e,t){var a,i=e.wgtGetProperty(t,"cfg");(a=e.dlgDoModal(600,400,function(){eduLib.edtInputApplyAll(e,a),i.cX=bx.$checkNaN(parseInt(i.cX)),i.cY=bx.$checkNaN(parseInt(i.cY)),i.imgPng.mediaID&&e.wgtSetProperty(t,"apxMediaID",i.imgPng.mediaID),e.wgtSetProperty(t,"cfg",i)}))&&(eduLib.edtInputAdd(e,a,{type:"image",title:apn.CExe.GL({ko:"커서용 이미지",en:"Image for cursor"}),value:i,key:"imgPng",join:!0}),eduLib.edtInputAdd(e,a,{type:"number",title:apn.CExe.GL({ko:"클릭점 - X",en:"Hotspot - X"})+"[px]",value:i,key:"cX",join:!0}),eduLib.edtInputAdd(e,a,{type:"number",title:apn.CExe.GL({ko:"클릭점 - Y",en:"Hotspot - Y"})+"[px]",value:i,key:"cY",join:!0}))},uxWgtCursor=xa;
function onBxRun(){apxExeRun()}function apxExeRun(){if(window.apnExeFile){var e=apn.Project.getExeModule(apnExeFile),n=new e(null,(void 0),(void 0),{standAlone:!0,pathFont:bx._apnExeBootFontPath}).create();if(window.apnExe=n,n.init(!0),window.apxExeRunOnPostInit&&apxExeRunOnPostInit(n),n.load(apnExeFile),bx.$getParamFromURL(location.href,"APXPGTTL")){var o=decodeURIComponent(bx.$getParamFromURL(location.href,"APXPGTTL"));n.runByTitle(o)}else if(bx.$getParamFromURL(location.href,"APXPGIDX")){var o=decodeURIComponent(bx.$getParamFromURL(location.href,"APXPGIDX"));n.runByIndex(bx.$checkNaN(parseInt(o)))}else n.run(bx._apnExeEpubStartPgIdx)}else window.console&&console.error("[Aspen Error] Cannot find an Aspen data file.")}function apxLoad(e){document.body.clientWidth?(window.apxLoad_wait&&clearInterval(window.apxLoad_wait),apxExeLoad(e)):window.apxLoad_wait||(window.apxLoad_wait=setInterval(function(){apxLoad(e)},15))}function apxExeLoad(e){function n(){var n={resize:"resize"};e&&"plain"==e.mode&&(n={type:bx.UX.SYS_CONTEXT_MENU|bx.UX.SYS_SELECTABLE|bx.UX.SYS_NO_VIEWPORT},e.noSelectable&&(document.body.style.userSelect="none",document.body.style.msUserSelect="none",document.body.style.mozUserSelect="none",document.body.style.webkitUserSelect="none"),bx.HCL.hideScrollBar=function(){}),e&&"/*${PAGE_INDEX}*/"!==e.pgIdx&&(bx._apnExeEpubStartPgIdx=parseInt(e.pgIdx)),e&&e.pathFont&&(bx._apnExeBootFontPath=e.pathFont),bx.Loader.load({UXoptions:n})}if(window.apn&&(apn.widgetMap&&apn.widgetMap(),window.apnExeFile&&apn.CExeSpt2&&(!e||!e.immediately)&&window.apx&&apx.spt2evPB&&apx.spt2evPB.length)){apn.Project.docDcmpr(window.apnExeFile);for(var o,a=0,t=0;t<apx.spt2evPB.length;t++)o=new apn.CExeSpt2(window.apnExeFile),apx.spt2evPB[t].onEvent.call(o,function(){a++,a==apx.spt2evPB.length&&(e=e||{},e.immediately=!0,apxExeLoad(e))},o)}else{var d;window.apnExeFile&&(d=apnExeFile.layouts[1].property)&&d.CExe&&d.CExe.splash&&(d.CExe.splash.bgClr||d.CExe.splash.img.mediaID)?(d.CExe.splash.bgClr&&(document.body.style.backgroundColor=d.CExe.splash.bgClr,apnExeSplashApplied),d.CExe.splash.img.mediaID&&(document.body.style.backgroundImage="url("+d.CExe.splash.img.mediaID+")",document.body.style.backgroundPosition="center center",document.body.style.backgroundRepeat="no-repeat",document.body.style.backgroundSize=(d.CExe.splash.w||40)+"% auto",document.body.style.backgroundAttachment="fixed"),!window.navigator||navigator.userAgent.toLowerCase().indexOf("msie")==-1&&navigator.userAgent.toLowerCase().indexOf("trident")==-1?setTimeout(n,0):setTimeout(n,150)):n()}}window.apnExeSplashApplied=!1;
!function(a){"object"==typeof exports?module.exports=a():"function"==typeof define&&define.amd?define(a):"undefined"!=typeof window?window.io=a():"undefined"!=typeof global?global.io=a():"undefined"!=typeof self&&(self.io=a())}(function(){var d,b,a;return(function c(f,k,h){function g(n,l){if(!k[n]){if(!f[n]){var i=typeof require=="function"&&require;if(!l&&i){return i(n,!0)}if(e){return e(n,!0)}throw new Error("Cannot find module '"+n+"'")}var m=k[n]={exports:{}};f[n][0].call(m.exports,function(o){var p=f[n][1][o];return g(p?p:o)},m,m.exports,c,f,k,h)}return k[n].exports}var e=typeof require=="function"&&require;for(var j=0;j<h.length;j++){g(h[j])}return g})({1:[function(f,g,e){g.exports=f("./lib/")},{"./lib/":2}],2:[function(l,j,m){var h=l("./url");var g=l("socket.io-parser");var e=l("./manager");var i=l("debug")("socket.io-client");j.exports=m=k;var f=m.managers={};function k(p,o){if(typeof p=="object"){o=p;p=undefined}o=o||{};var n=h(p);var q=n.source;var s=n.id;var r;if(o.forceNew||false===o.multiplex){i("ignoring socket cache for %s",q);r=e(q,o)}else{if(!f[s]){i("new io instance for %s",q);f[s]=e(q,o)}r=f[s]}return r.socket(n.path)}m.protocol=g.protocol;m.connect=k;m.Manager=l("./manager");m.Socket=l("./socket")},{"./manager":3,"./socket":5,"./url":6,debug:8,"socket.io-parser":39}],3:[function(k,j,m){var h=k("./url");var o=k("engine.io-client");var i=k("./socket");var q=k("emitter");var g=k("socket.io-parser");var n=k("./on");var p=k("bind");var l=k("object-component");var f=k("debug")("socket.io-client:manager");j.exports=e;function e(s,r){if(!(this instanceof e)){return new e(s,r)}if("object"==typeof s){r=s;s=undefined}r=r||{};r.path=r.path||"/socket.io";this.nsps={};this.subs=[];this.opts=r;this.reconnection(r.reconnection!==false);this.reconnectionAttempts(r.reconnectionAttempts||Infinity);this.reconnectionDelay(r.reconnectionDelay||1000);this.reconnectionDelayMax(r.reconnectionDelayMax||5000);this.timeout(null==r.timeout?20000:r.timeout);this.readyState="closed";this.uri=s;this.connected=0;this.attempts=0;this.encoding=false;this.packetBuffer=[];this.encoder=new g.Encoder();this.decoder=new g.Decoder();this.open()}q(e.prototype);e.prototype.reconnection=function(r){if(!arguments.length){return this._reconnection}this._reconnection=!!r;return this};e.prototype.reconnectionAttempts=function(r){if(!arguments.length){return this._reconnectionAttempts}this._reconnectionAttempts=r;return this};e.prototype.reconnectionDelay=function(r){if(!arguments.length){return this._reconnectionDelay}this._reconnectionDelay=r;return this};e.prototype.reconnectionDelayMax=function(r){if(!arguments.length){return this._reconnectionDelayMax}this._reconnectionDelayMax=r;return this};e.prototype.timeout=function(r){if(!arguments.length){return this._timeout}this._timeout=r;return this};e.prototype.maybeReconnectOnOpen=function(){if(!this.openReconnect&&!this.reconnecting&&this._reconnection){this.openReconnect=true;this.reconnect()}};e.prototype.open=e.prototype.connect=function(u){f("readyState %s",this.readyState);if(~this.readyState.indexOf("open")){return this}f("opening %s",this.uri);this.engine=o(this.uri,this.opts);var r=this.engine;var t=this;this.readyState="opening";var w=n(r,"open",function(){t.onopen();u&&u()});var s=n(r,"error",function(z){f("connect_error");t.cleanup();t.readyState="closed";t.emit("connect_error",z);if(u){var y=new Error("Connection error");y.data=z;u(y)}t.maybeReconnectOnOpen()});if(false!==this._timeout){var v=this._timeout;f("connect attempt will timeout after %d",v);var x=setTimeout(function(){f("connect attempt timed out after %d",v);w.destroy();r.close();r.emit("error","timeout");t.emit("connect_timeout",v)},v);this.subs.push({destroy:function(){clearTimeout(x)}})}this.subs.push(w);this.subs.push(s);return this};e.prototype.onopen=function(){f("open");this.cleanup();this.readyState="open";this.emit("open");var r=this.engine;this.subs.push(n(r,"data",p(this,"ondata")));this.subs.push(n(this.decoder,"decoded",p(this,"ondecoded")));this.subs.push(n(r,"error",p(this,"onerror")));this.subs.push(n(r,"close",p(this,"onclose")))};e.prototype.ondata=function(r){this.decoder.add(r)};e.prototype.ondecoded=function(r){this.emit("packet",r)};e.prototype.onerror=function(r){f("error",r);this.emit("error",r)};e.prototype.socket=function(t){var r=this.nsps[t];if(!r){r=new i(this,t);this.nsps[t]=r;var s=this;r.on("connect",function(){s.connected++})}return r};e.prototype.destroy=function(r){--this.connected||this.close()};e.prototype.packet=function(s){f("writing packet %j",s);var r=this;if(!r.encoding){r.encoding=true;this.encoder.encode(s,function(u){for(var t=0;t<u.length;t++){r.engine.write(u[t])}r.encoding=false;r.processPacketQueue()})}else{r.packetBuffer.push(s)}};e.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var r=this.packetBuffer.shift();this.packet(r)}};e.prototype.cleanup=function(){var r;while(r=this.subs.shift()){r.destroy()}this.packetBuffer=[];this.encoding=false;this.decoder.destroy()};e.prototype.close=e.prototype.disconnect=function(){this.skipReconnect=true;this.engine.close()};e.prototype.onclose=function(r){f("close");this.cleanup();this.readyState="closed";this.emit("close",r);if(this._reconnection&&!this.skipReconnect){this.reconnect()}};e.prototype.reconnect=function(){if(this.reconnecting){return this}var r=this;this.attempts++;if(this.attempts>this._reconnectionAttempts){f("reconnect failed");this.emit("reconnect_failed");this.reconnecting=false}else{var s=this.attempts*this.reconnectionDelay();s=Math.min(s,this.reconnectionDelayMax());f("will wait %dms before reconnect attempt",s);this.reconnecting=true;var t=setTimeout(function(){f("attempting reconnect");r.emit("reconnect_attempt");r.open(function(u){if(u){f("reconnect attempt error");r.reconnecting=false;r.reconnect();r.emit("reconnect_error",u.data)}else{f("reconnect success");r.onreconnect()}})},s);this.subs.push({destroy:function(){clearTimeout(t)}})}};e.prototype.onreconnect=function(){var r=this.attempts;this.attempts=0;this.reconnecting=false;this.emit("reconnect",r)}},{"./on":4,"./socket":5,"./url":6,bind:7,debug:8,emitter:9,"engine.io-client":10,"object-component":36,"socket.io-parser":39}],4:[function(g,h,f){h.exports=e;function e(k,j,i){k.on(j,i);return{destroy:function(){k.removeListener(j,i)}}}},{}],5:[function(i,h,k){var f=i("socket.io-parser");var p=i("emitter");var j=i("to-array");var m=i("./on");var n=i("bind");var e=i("debug")("socket.io-client:socket");var l=i("has-binary-data");var o=i("indexof");h.exports=k=g;var r={connect:1,disconnect:1,error:1};var q=p.prototype.emit;function g(t,s){this.io=t;this.nsp=s;this.json=this;this.ids=0;this.acks={};this.open();this.buffer=[];this.connected=false;this.disconnected=true}p(g.prototype);g.prototype.open=g.prototype.connect=function(){if(this.connected){return this}var s=this.io;s.open();this.subs=[m(s,"open",n(this,"onopen")),m(s,"error",n(this,"onerror")),m(s,"packet",n(this,"onpacket")),m(s,"close",n(this,"onclose"))];if("open"==this.io.readyState){this.onopen()}return this};g.prototype.send=function(){var s=j(arguments);s.unshift("message");this.emit.apply(this,s);return this};g.prototype.emit=function(u){if(r.hasOwnProperty(u)){q.apply(this,arguments);return this}var t=j(arguments);var s=f.EVENT;if(l(t)){s=f.BINARY_EVENT}var v={type:s,data:t};if("function"==typeof t[t.length-1]){e("emitting packet with ack id %d",this.ids);this.acks[this.ids]=t.pop();v.id=this.ids++}this.packet(v);return this};g.prototype.packet=function(s){s.nsp=this.nsp;this.io.packet(s)};g.prototype.onerror=function(s){this.emit("error",s)};g.prototype.onopen=function(){e("transport is open - connecting");if("/"!=this.nsp){this.packet({type:f.CONNECT})}};g.prototype.onclose=function(s){e("close (%s)",s);this.connected=false;this.disconnected=true;this.emit("disconnect",s)};g.prototype.onpacket=function(s){if(s.nsp!=this.nsp){return}switch(s.type){case f.CONNECT:this.onconnect();break;case f.EVENT:this.onevent(s);break;case f.BINARY_EVENT:this.onevent(s);break;case f.ACK:this.onack(s);break;case f.BINARY_ACK:this.onack(s);break;case f.DISCONNECT:this.ondisconnect();break;case f.ERROR:this.emit("error",s.data);break}};g.prototype.onevent=function(t){var s=t.data||[];e("emitting event %j",s);if(null!=t.id){e("attaching ack callback to event");s.push(this.ack(t.id))}if(this.connected){q.apply(this,s)}else{this.buffer.push(s)}};g.prototype.ack=function(u){var s=this;var t=false;return function(){if(t){return}t=true;var v=j(arguments);e("sending ack %j",v);var w=l(v)?f.BINARY_ACK:f.ACK;s.packet({type:w,id:u,data:v})}};g.prototype.onack=function(t){e("calling ack %s with %j",t.id,t.data);var s=this.acks[t.id];if(s){s.apply(this,t.data)}delete this.acks[t.id]};g.prototype.onconnect=function(){this.connected=true;this.disconnected=false;this.emit("connect");this.emitBuffered()};g.prototype.emitBuffered=function(){for(var s=0;s<this.buffer.length;s++){q.apply(this,this.buffer[s])}this.buffer=[]};g.prototype.ondisconnect=function(){e("server disconnect (%s)",this.nsp);this.destroy();this.onclose("io server disconnect")};g.prototype.destroy=function(){for(var s=0;s<this.subs.length;s++){this.subs[s].destroy()}this.io.destroy(this)};g.prototype.close=g.prototype.disconnect=function(){if(!this.connected){return this}e("performing disconnect (%s)",this.nsp);this.packet({type:f.DISCONNECT});this.destroy();this.onclose("io client disconnect");return this}},{"./on":4,bind:7,debug:8,emitter:9,"has-binary-data":31,indexof:35,"socket.io-parser":39,"to-array":42}],6:[function(h,i,f){var j=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var k=h("parseuri");var e=h("debug")("socket.io-client:url");i.exports=g;function g(l,n){var m=l;var n=n||j.location;if(null==l){l=n.protocol+"//"+n.hostname}if("string"==typeof l){if("/"==l.charAt(0)){if("undefined"!=typeof n){l=n.hostname+l}}if(!/^(https?|wss?):\/\//.test(l)){e("protocol-less url %s",l);if("undefined"!=typeof n){l=n.protocol+"//"+l}else{l="https://"+l}}e("parse %s",l);m=k(l)}if((/(http|ws)/.test(m.protocol)&&80==m.port)||(/(http|ws)s/.test(m.protocol)&&443==m.port)){delete m.port}m.path=m.path||"/";m.id=m.protocol+m.host+(m.port?(":"+m.port):"");m.href=m.protocol+"://"+m.host+(m.port?(":"+m.port):"");return m}},{debug:8,parseuri:37}],7:[function(f,g,e){var h=[].slice;g.exports=function(k,j){if("string"==typeof j){j=k[j]}if("function"!=typeof j){throw new Error("bind() requires a function")}var i=[].slice.call(arguments,2);return function(){return j.apply(k,i.concat(h.call(arguments)))}}},{}],8:[function(h,i,g){i.exports=f;function f(e){if(!f.enabled(e)){return function(){}}return function(l){l=j(l);var n=new Date;var m=n-(f[e]||n);f[e]=n;l=e+" "+l+" +"+f.humanize(m);window.console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}}f.names=[];f.skips=[];f.enable=function(m){try{localStorage.debug=m}catch(p){}var o=(m||"").split(/[\s,]+/),l=o.length;for(var n=0;n<l;n++){m=o[n].replace("*",".*?");if(m[0]==="-"){f.skips.push(new RegExp("^"+m.substr(1)+"$"))}else{f.names.push(new RegExp("^"+m+"$"))}}};f.disable=function(){f.enable("")};f.humanize=function(l){var n=1000,m=60*1000,e=60*m;if(l>=e){return(l/e).toFixed(1)+"h"}if(l>=m){return(l/m).toFixed(1)+"m"}if(l>=n){return(l/n|0)+"s"}return l+"ms"};f.enabled=function(l){for(var m=0,e=f.skips.length;m<e;m++){if(f.skips[m].test(l)){return false}}for(var m=0,e=f.names.length;m<e;m++){if(f.names[m].test(l)){return true}}return false};function j(e){if(e instanceof Error){return e.stack||e.message}return e}try{if(window.localStorage){f.enable(localStorage.debug)}}catch(k){}},{}],9:[function(h,i,f){var g=h("indexof");i.exports=j;function j(k){if(k){return e(k)}}function e(l){for(var k in j.prototype){l[k]=j.prototype[k]}return l}j.prototype.on=function(l,k){this._callbacks=this._callbacks||{};(this._callbacks[l]=this._callbacks[l]||[]).push(k);return this};j.prototype.once=function(n,m){var l=this;this._callbacks=this._callbacks||{};function k(){l.off(n,k);m.apply(this,arguments)}m._off=k;this.on(n,k);return this};j.prototype.off=j.prototype.removeListener=j.prototype.removeAllListeners=function(n,l){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this}var m=this._callbacks[n];if(!m){return this}if(1==arguments.length){delete this._callbacks[n];return this}var k=g(m,l._off||l);if(~k){m.splice(k,1)}return this};j.prototype.emit=function(o){this._callbacks=this._callbacks||{};var l=[].slice.call(arguments,1),n=this._callbacks[o];if(n){n=n.slice(0);for(var m=0,k=n.length;m<k;++m){n[m].apply(this,l)}}return this};j.prototype.listeners=function(k){this._callbacks=this._callbacks||{};return this._callbacks[k]||[]};j.prototype.hasListeners=function(k){return !!this.listeners(k).length}},{indexof:35}],10:[function(f,g,e){g.exports=f("./lib/")},{"./lib/":11}],11:[function(f,g,e){g.exports=f("./socket");g.exports.parser=f("engine.io-parser")},{"./socket":12,"engine.io-parser":20}],12:[function(k,i,n){var h=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var m=k("./transports");var r=k("emitter");var f=k("debug")("engine.io-client:socket");var p=k("indexof");var e=k("engine.io-parser");var l=k("parseuri");var o=k("parsejson");var j=k("parseqs");i.exports=g;function s(){}function g(v,u){if(!(this instanceof g)){return new g(v,u)}u=u||{};if(v&&"object"==typeof v){u=v;v=null}if(v){v=l(v);u.host=v.host;u.secure=v.protocol=="https"||v.protocol=="wss";u.port=v.port;if(v.query){u.query=v.query}}this.secure=null!=u.secure?u.secure:(h.location&&"https:"==location.protocol);if(u.host){var t=u.host.split(":");u.hostname=t.shift();if(t.length){u.port=t.pop()}}this.agent=u.agent||false;this.hostname=u.hostname||(h.location?location.hostname:"localhost");this.port=u.port||(h.location&&location.port?location.port:(this.secure?443:80));this.query=u.query||{};if("string"==typeof this.query){this.query=j.decode(this.query)}this.upgrade=false!==u.upgrade;this.path=(u.path||"/engine.io").replace(/\/$/,"")+"/";this.forceJSONP=!!u.forceJSONP;this.forceBase64=!!u.forceBase64;this.timestampParam=u.timestampParam||"t";this.timestampRequests=u.timestampRequests;this.transports=u.transports||["polling","websocket"];this.readyState="";this.writeBuffer=[];this.callbackBuffer=[];this.policyPort=u.policyPort||843;this.rememberUpgrade=u.rememberUpgrade||false;this.open();this.binaryType=null;this.onlyBinaryUpgrades=u.onlyBinaryUpgrades}g.priorWebsocketSuccess=false;r(g.prototype);g.protocol=e.protocol;g.Socket=g;g.Transport=k("./transport");g.transports=k("./transports");g.parser=k("engine.io-parser");g.prototype.createTransport=function(t){f('creating transport "%s"',t);var u=q(this.query);u.EIO=e.protocol;u.transport=t;if(this.id){u.sid=this.id}var v=new m[t]({agent:this.agent,hostname:this.hostname,port:this.port,secure:this.secure,path:this.path,query:u,forceJSONP:this.forceJSONP,forceBase64:this.forceBase64,timestampRequests:this.timestampRequests,timestampParam:this.timestampParam,policyPort:this.policyPort,socket:this});return v};function q(u){var v={};for(var t in u){if(u.hasOwnProperty(t)){v[t]=u[t]}}return v}g.prototype.open=function(){var t;if(this.rememberUpgrade&&g.priorWebsocketSuccess&&this.transports.indexOf("websocket")!=-1){t="websocket"}else{t=this.transports[0]}this.readyState="opening";var t=this.createTransport(t);t.open();this.setTransport(t)};g.prototype.setTransport=function(u){f("setting transport %s",u.name);var t=this;if(this.transport){f("clearing existing transport %s",this.transport.name);this.transport.removeAllListeners()}this.transport=u;u.on("drain",function(){t.onDrain()}).on("packet",function(v){t.onPacket(v)}).on("error",function(v){t.onError(v)}).on("close",function(){t.onClose("transport close")})};g.prototype.probe=function(t){f('probing transport "%s"',t);var w=this.createTransport(t,{probe:1}),y=false,C=this;g.priorWebsocketSuccess=false;function x(){if(C.onlyBinaryUpgrades){var E=!this.supportsBinary&&C.transport.supportsBinary;y=y||E}if(y){return}f('probe transport "%s" opened',t);w.send([{type:"ping",data:"probe"}]);w.once("packet",function(G){if(y){return}if("pong"==G.type&&"probe"==G.data){f('probe transport "%s" pong',t);C.upgrading=true;C.emit("upgrading",w);g.priorWebsocketSuccess="websocket"==w.name;f('pausing current transport "%s"',C.transport.name);C.transport.pause(function(){if(y){return}if("closed"==C.readyState||"closing"==C.readyState){return}f("changing transport and sending upgrade packet");u();C.setTransport(w);w.send([{type:"upgrade"}]);C.emit("upgrade",w);w=null;C.upgrading=false;C.flush()})}else{f('probe transport "%s" failed',t);var F=new Error("probe error");F.transport=w.name;C.emit("upgradeError",F)}})}function A(){if(y){return}y=true;u();w.close();w=null}function z(F){var E=new Error("probe error: "+F);E.transport=w.name;A();f('probe transport "%s" failed because of error: %s',t,F);C.emit("upgradeError",E)}function D(){z("transport closed")}function B(){z("socket closed")}function v(E){if(w&&E.name!=w.name){f('"%s" works - aborting "%s"',E.name,w.name);A()}}function u(){w.removeListener("open",x);w.removeListener("error",z);w.removeListener("close",D);C.removeListener("close",B);C.removeListener("upgrading",v)}w.once("open",x);w.once("error",z);w.once("close",D);this.once("close",B);this.once("upgrading",v);w.open()};g.prototype.onOpen=function(){f("socket open");this.readyState="open";g.priorWebsocketSuccess="websocket"==this.transport.name;this.emit("open");this.flush();if("open"==this.readyState&&this.upgrade&&this.transport.pause){f("starting upgrade probes");for(var u=0,t=this.upgrades.length;u<t;u++){this.probe(this.upgrades[u])}}};g.prototype.onPacket=function(u){if("opening"==this.readyState||"open"==this.readyState){f('socket receive: type "%s", data "%s"',u.type,u.data);this.emit("packet",u);this.emit("heartbeat");switch(u.type){case"open":this.onHandshake(o(u.data));break;case"pong":this.setPing();break;case"error":var t=new Error("server error");t.code=u.data;this.emit("error",t);break;case"message":this.emit("data",u.data);this.emit("message",u.data);break}}else{f('packet received with socket readyState "%s"',this.readyState)}};g.prototype.onHandshake=function(t){this.emit("handshake",t);this.id=t.sid;this.transport.query.sid=t.sid;this.upgrades=this.filterUpgrades(t.upgrades);this.pingInterval=t.pingInterval;this.pingTimeout=t.pingTimeout;this.onOpen();if("closed"==this.readyState){return}this.setPing();this.removeListener("heartbeat",this.onHeartbeat);this.on("heartbeat",this.onHeartbeat)};g.prototype.onHeartbeat=function(u){clearTimeout(this.pingTimeoutTimer);var t=this;t.pingTimeoutTimer=setTimeout(function(){if("closed"==t.readyState){return}t.onClose("ping timeout")},u||(t.pingInterval+t.pingTimeout))};g.prototype.setPing=function(){var t=this;clearTimeout(t.pingIntervalTimer);t.pingIntervalTimer=setTimeout(function(){f("writing ping packet - expecting pong within %sms",t.pingTimeout);t.ping();t.onHeartbeat(t.pingTimeout)},t.pingInterval)};g.prototype.ping=function(){this.sendPacket("ping")};g.prototype.onDrain=function(){for(var t=0;t<this.prevBufferLen;t++){if(this.callbackBuffer[t]){this.callbackBuffer[t]()}}this.writeBuffer.splice(0,this.prevBufferLen);this.callbackBuffer.splice(0,this.prevBufferLen);this.prevBufferLen=0;if(this.writeBuffer.length==0){this.emit("drain")}else{this.flush()}};g.prototype.flush=function(){if("closed"!=this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){f("flushing %d packets in socket",this.writeBuffer.length);this.transport.send(this.writeBuffer);this.prevBufferLen=this.writeBuffer.length;this.emit("flush")}};g.prototype.write=g.prototype.send=function(u,t){this.sendPacket("message",u,t);return this};g.prototype.sendPacket=function(u,v,t){var w={type:u,data:v};this.emit("packetCreate",w);this.writeBuffer.push(w);this.callbackBuffer.push(t);this.flush()};g.prototype.close=function(){if("opening"==this.readyState||"open"==this.readyState){this.onClose("forced close");f("socket closing - telling transport to close");this.transport.close()}return this};g.prototype.onError=function(t){f("socket error %j",t);g.priorWebsocketSuccess=false;this.emit("error",t);this.onClose("transport error",t)};g.prototype.onClose=function(u,v){if("opening"==this.readyState||"open"==this.readyState){f('socket close with reason: "%s"',u);var t=this;clearTimeout(this.pingIntervalTimer);clearTimeout(this.pingTimeoutTimer);setTimeout(function(){t.writeBuffer=[];t.callbackBuffer=[];t.prevBufferLen=0},0);this.transport.removeAllListeners("close");this.transport.close();this.transport.removeAllListeners();this.readyState="closed";this.id=null;this.emit("close",u,v)}};g.prototype.filterUpgrades=function(v){var w=[];for(var u=0,t=v.length;u<t;u++){if(~p(this.transports,v[u])){w.push(v[u])}}return w}},{"./transport":13,"./transports":14,debug:8,emitter:9,"engine.io-parser":20,indexof:35,parsejson:28,parseqs:29,parseuri:37}],13:[function(f,g,e){var j=f("engine.io-parser");var h=f("emitter");g.exports=i;function i(k){this.path=k.path;this.hostname=k.hostname;this.port=k.port;this.secure=k.secure;this.query=k.query;this.timestampParam=k.timestampParam;this.timestampRequests=k.timestampRequests;this.readyState="";this.agent=k.agent||false;this.socket=k.socket}h(i.prototype);i.timestamps=0;i.prototype.onError=function(m,l){var k=new Error(m);k.type="TransportError";k.description=l;this.emit("error",k);return this};i.prototype.open=function(){if("closed"==this.readyState||""==this.readyState){this.readyState="opening";this.doOpen()}return this};i.prototype.close=function(){if("opening"==this.readyState||"open"==this.readyState){this.doClose();this.onClose()}return this};i.prototype.send=function(k){if("open"==this.readyState){this.write(k)}else{throw new Error("Transport not open")}};i.prototype.onOpen=function(){this.readyState="open";this.writable=true;this.emit("open")};i.prototype.onData=function(k){this.onPacket(j.decodePacket(k,this.socket.binaryType))};i.prototype.onPacket=function(k){this.emit("packet",k)};i.prototype.onClose=function(){this.readyState="closed";this.emit("close")}},{emitter:9,"engine.io-parser":20}],14:[function(h,f,j){var e=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var m=h("xmlhttprequest");var l=h("./polling-xhr");var k=h("./polling-jsonp");var i=h("./websocket");j.polling=g;j.websocket=i;function g(o){var r;var p=false;if(e.location){var q="https:"==location.protocol;var n=location.port;if(!n){n=q?443:80}p=o.hostname!=location.hostname||n!=o.port}o.xdomain=p;r=new m(o);if("open" in r&&!o.forceJSONP){return new l(o)}else{return new k(o)}}},{"./polling-jsonp":15,"./polling-xhr":16,"./websocket":18,xmlhttprequest:19}],15:[function(g,f,i){var e=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var p=g("./polling");var j=g("inherits");f.exports=l;var n=/\n/g;var h=/\\n/g;var o;var m=0;function k(){}function l(r){p.call(this,r);this.query=this.query||{};if(!o){if(!e.___eio){e.___eio=[]}o=e.___eio}this.index=o.length;var q=this;o.push(function(s){q.onData(s)});this.query.j=this.index;if(e.document&&e.addEventListener){e.addEventListener("beforeunload",function(){if(q.script){q.script.onerror=k}})}}j(l,p);l.prototype.supportsBinary=false;l.prototype.doClose=function(){if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}if(this.form){this.form.parentNode.removeChild(this.form);this.form=null}p.prototype.doClose.call(this)};l.prototype.doPoll=function(){var r=this;var q=document.createElement("script");if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}q.async=true;q.src=this.uri();q.onerror=function(u){r.onError("jsonp poll error",u)};var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(q,t);this.script=q;var s="undefined"!=typeof navigator&&/gecko/i.test(navigator.userAgent);if(s){setTimeout(function(){var u=document.createElement("iframe");document.body.appendChild(u);document.body.removeChild(u)},100)}};l.prototype.doWrite=function(w,y){var z=this;if(!this.form){var r=document.createElement("form");var s=document.createElement("textarea");var q=this.iframeId="eio_iframe_"+this.index;var v;r.className="socketio";r.style.position="absolute";r.style.top="-1000px";r.style.left="-1000px";r.target=q;r.method="POST";r.setAttribute("accept-charset","utf-8");s.name="d";r.appendChild(s);document.body.appendChild(r);this.form=r;this.area=s}this.form.action=this.uri();function t(){u();y()}function u(){if(z.iframe){try{z.form.removeChild(z.iframe)}catch(B){z.onError("jsonp polling iframe removal error",B)}}try{var A='<iframe src="javascript:0" name="'+z.iframeId+'">';v=document.createElement(A)}catch(B){v=document.createElement("iframe");v.name=z.iframeId;v.src="javascript:0"}v.id=z.iframeId;z.form.appendChild(v);z.iframe=v}u();w=w.replace(h,"\\\n");this.area.value=w.replace(n,"\\n");try{this.form.submit()}catch(x){}if(this.iframe.attachEvent){this.iframe.onreadystatechange=function(){if(z.iframe.readyState=="complete"){t()}}}else{this.iframe.onload=t}}},{"./polling":17,inherits:27}],16:[function(i,h,j){var g=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var o=i("xmlhttprequest");var p=i("./polling");var n=i("emitter");var f=i("debug")("engine.io-client:polling-xhr");var k=i("inherits");h.exports=l;h.exports.Request=e;function m(){}function l(s){p.call(this,s);if(g.location){var t="https:"==location.protocol;var r=location.port;if(!r){r=t?443:80}this.xd=s.hostname!=g.location.hostname||r!=s.port}}k(l,p);l.prototype.supportsBinary=true;l.prototype.request=function(r){r=r||{};r.uri=this.uri();r.xd=this.xd;r.agent=this.agent||false;r.supportsBinary=this.supportsBinary;return new e(r)};l.prototype.doWrite=function(v,s){var u=typeof v!=="string"&&v!==undefined;var t=this.request({method:"POST",data:v,isBinary:u});var r=this;t.on("success",s);t.on("error",function(w){r.onError("xhr post error",w)});this.sendXhr=t};l.prototype.doPoll=function(){f("xhr poll");var s=this.request();var r=this;s.on("data",function(t){r.onData(t)});s.on("error",function(t){r.onError("xhr poll error",t)});this.pollXhr=s};function e(r){this.method=r.method||"GET";this.uri=r.uri;this.xd=!!r.xd;this.async=false!==r.async;this.data=undefined!=r.data?r.data:null;this.agent=r.agent;this.create(r.isBinary,r.supportsBinary)}n(e.prototype);e.prototype.create=function(s,v){var u=this.xhr=new o({agent:this.agent,xdomain:this.xd});var r=this;try{f("xhr open %s: %s",this.method,this.uri);u.open(this.method,this.uri,this.async);if(v){u.responseType="arraybuffer"}if("POST"==this.method){try{if(s){u.setRequestHeader("Content-type","application/octet-stream")}else{u.setRequestHeader("Content-type","text/plain;charset=UTF-8")}}catch(t){}}if("withCredentials" in u){u.withCredentials=true}u.onreadystatechange=function(){var w;try{if(4!=u.readyState){return}if(200==u.status||1223==u.status){var y=u.getResponseHeader("Content-Type");if(y==="application/octet-stream"){w=u.response}else{if(!v){w=u.responseText}else{w="ok"}}}else{setTimeout(function(){r.onError(u.status)},0)}}catch(x){r.onError(x)}if(null!=w){r.onData(w)}};f("xhr data %s",this.data);u.send(this.data)}catch(t){setTimeout(function(){r.onError(t)},0);return}if(g.document){this.index=e.requestsCount++;e.requests[this.index]=this}};e.prototype.onSuccess=function(){this.emit("success");this.cleanup()};e.prototype.onData=function(r){this.emit("data",r);this.onSuccess()};e.prototype.onError=function(r){this.emit("error",r);this.cleanup()};e.prototype.cleanup=function(){if("undefined"==typeof this.xhr||null===this.xhr){return}this.xhr.onreadystatechange=m;try{this.xhr.abort()}catch(r){}if(g.document){delete e.requests[this.index]}this.xhr=null};e.prototype.abort=function(){this.cleanup()};if(g.document){e.requestsCount=0;e.requests={};if(g.attachEvent){g.attachEvent("onunload",q)}else{if(g.addEventListener){g.addEventListener("beforeunload",q)}}}function q(){for(var r in e.requests){if(e.requests.hasOwnProperty(r)){e.requests[r].abort()}}}},{"./polling":17,debug:8,emitter:9,inherits:27,xmlhttprequest:19}],17:[function(j,g,k){var m=j("../transport");var i=j("parseqs");var e=j("engine.io-parser");var f=j("debug")("engine.io-client:polling");var l=j("inherits");g.exports=n;var h=(function(){var o=j("xmlhttprequest");var p=new o({agent:this.agent,xdomain:false});return null!=p.responseType})();function n(p){var o=(p&&p.forceBase64);if(!h||o){this.supportsBinary=false}m.call(this,p)}l(n,m);n.prototype.name="polling";n.prototype.doOpen=function(){this.poll()};n.prototype.pause=function(o){var s=0;var p=this;this.readyState="pausing";function r(){f("paused");p.readyState="paused";o()}if(this.polling||!this.writable){var q=0;if(this.polling){f("we are currently polling - waiting to pause");q++;this.once("pollComplete",function(){f("pre-pause polling complete");--q||r()})}if(!this.writable){f("we are currently writing - waiting to pause");q++;this.once("drain",function(){f("pre-pause writing complete");--q||r()})}}else{r()}};n.prototype.poll=function(){f("polling");this.polling=true;this.doPoll();this.emit("poll")};n.prototype.onData=function(p){var o=this;f("polling got data %s",p);var q=function(t,r,s){if("opening"==o.readyState){o.onOpen()}if("close"==t.type){o.onClose();return false}o.onPacket(t)};e.decodePayload(p,this.socket.binaryType,q);if("closed"!=this.readyState){this.polling=false;this.emit("pollComplete");if("open"==this.readyState){this.poll()}else{f('ignoring poll - transport state "%s"',this.readyState)}}};n.prototype.doClose=function(){var o=this;function p(){f("writing close packet");o.write([{type:"close"}])}if("open"==this.readyState){f("transport open - closing");p()}else{f("transport not open - deferring close");this.once("open",p)}};n.prototype.write=function(q){var p=this;this.writable=false;var o=function(){p.writable=true;p.emit("drain")};var p=this;e.encodePayload(q,this.supportsBinary,function(r){p.doWrite(r,o)})};n.prototype.uri=function(){var q=this.query||{};var p=this.secure?"https":"http";var o="";if(false!==this.timestampRequests){q[this.timestampParam]=+new Date+"-"+m.timestamps++}if(!this.supportsBinary&&!q.sid){q.b64=1}q=i.encode(q);if(this.port&&(("https"==p&&this.port!=443)||("http"==p&&this.port!=80))){o=":"+this.port}if(q.length){q="?"+q}return p+"://"+this.hostname+o+this.path+q}},{"../transport":13,debug:8,"engine.io-parser":20,inherits:27,parseqs:29,xmlhttprequest:19}],18:[function(j,h,k){var m=j("../transport");var e=j("engine.io-parser");var i=j("parseqs");var f=j("debug")("engine.io-client:websocket");var l=j("inherits");var n=j("ws");h.exports=g;function g(p){var o=(p&&p.forceBase64);if(o){this.supportsBinary=false}m.call(this,p)}l(g,m);g.prototype.name="websocket";g.prototype.supportsBinary=true;g.prototype.doOpen=function(){if(!this.check()){return}var o=this;var r=this.uri();var q=void (0);var p={agent:this.agent};this.ws=new n(r,q,p);if(this.ws.binaryType===undefined){this.supportsBinary=false}this.ws.binaryType="arraybuffer";this.addEventListeners()};g.prototype.addEventListeners=function(){var o=this;this.ws.onopen=function(){o.onOpen()};this.ws.onclose=function(){o.onClose()};this.ws.onmessage=function(p){o.onData(p.data)};this.ws.onerror=function(p){o.onError("websocket error",p)}};if("undefined"!=typeof navigator&&/iPad|iPhone|iPod/i.test(navigator.userAgent)){g.prototype.onData=function(p){var o=this;setTimeout(function(){m.prototype.onData.call(o,p)},0)}}g.prototype.write=function(r){var p=this;this.writable=false;for(var q=0,o=r.length;q<o;q++){e.encodePacket(r[q],this.supportsBinary,function(t){try{p.ws.send(t)}catch(u){f("websocket closed before onclose event")}})}function s(){p.writable=true;p.emit("drain")}setTimeout(s,0)};g.prototype.onClose=function(){m.prototype.onClose.call(this)};g.prototype.doClose=function(){if(typeof this.ws!=="undefined"){this.ws.close()}};g.prototype.uri=function(){var q=this.query||{};var p=this.secure?"wss":"ws";var o="";if(this.port&&(("wss"==p&&this.port!=443)||("ws"==p&&this.port!=80))){o=":"+this.port}if(this.timestampRequests){q[this.timestampParam]=+new Date}if(!this.supportsBinary){q.b64=1}q=i.encode(q);if(q.length){q="?"+q}return p+"://"+this.hostname+o+this.path+q};g.prototype.check=function(){return !!n&&!("__initialize" in n&&this.name===g.prototype.name)}},{"../transport":13,debug:8,"engine.io-parser":20,inherits:27,parseqs:29,ws:30}],19:[function(g,h,f){var e=g("has-cors");h.exports=function(j){var i=j.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!i||e)){return new XMLHttpRequest()}}catch(k){}if(!i){try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(k){}}}},{"has-cors":33}],20:[function(m,e,v){var p=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var n=m("./keys");var l=m("arraybuffer.slice");var q=m("base64-arraybuffer");var h=m("after");var f=m("utf8");var t=navigator.userAgent.match(/Android/i);v.protocol=2;var o=v.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6};var i=n(o);var j={type:"error",data:"parser error"};var k=m("blob");v.encodePacket=function(y,A,z){if(typeof A=="function"){z=A;A=false}var w=(y.data===undefined)?undefined:y.data.buffer||y.data;if(p.ArrayBuffer&&w instanceof ArrayBuffer){return g(y,A,z)}else{if(k&&w instanceof p.Blob){return r(y,A,z)}}var x=o[y.type];if(undefined!==y.data){x+=f.encode(String(y.data))}return z(""+x)};function g(A,C,B){if(!C){return v.encodeBase64Packet(A,B)}var z=A.data;var y=new Uint8Array(z);var x=new Uint8Array(1+z.byteLength);x[0]=o[A.type];for(var w=0;w<y.length;w++){x[w+1]=y[w]}return B(x.buffer)}function s(x,z,y){if(!z){return v.encodeBase64Packet(x,y)}var w=new FileReader();w.onload=function(){x.data=w.result;v.encodePacket(x,z,y)};return w.readAsArrayBuffer(x.data)}function r(y,A,z){if(!A){return v.encodeBase64Packet(y,z)}if(t){return s(y,A,z)}var x=new Uint8Array(1);x[0]=o[y.type];var w=new k([x.buffer,y.data]);return z(w)}v.encodeBase64Packet=function(w,D){var E="b"+v.packets[w.type];if(k&&w.data instanceof k){var A=new FileReader();A.onload=function(){var F=A.result.split(",")[1];D(E+F)};return A.readAsDataURL(w.data)}var C;try{C=String.fromCharCode.apply(null,new Uint8Array(w.data))}catch(B){var x=new Uint8Array(w.data);var y=new Array(x.length);for(var z=0;z<x.length;z++){y[z]=x[z]}C=String.fromCharCode.apply(null,y)}E+=p.btoa(C);return D(E)};v.decodePacket=function(z,A){if(typeof z=="string"||z===undefined){if(z.charAt(0)=="b"){return v.decodeBase64Packet(z.substr(1),A)}z=f.decode(z);var y=z.charAt(0);if(Number(y)!=y||!i[y]){return j}if(z.length>1){return{type:i[y],data:z.substring(1)}}else{return{type:i[y]}}}var w=new Uint8Array(z);var y=w[0];var x=l(z,1);if(k&&A==="blob"){x=new k([x])}return{type:i[y],data:x}};v.decodeBase64Packet=function(y,z){var w=i[y.charAt(0)];if(!p.ArrayBuffer){return{type:w,data:{base64:true,data:y.substr(1)}}}var x=q.decode(y.substr(1));if(z==="blob"&&k){x=new k([x])}return{type:w,data:x}};v.encodePayload=function(y,A,z){if(typeof A=="function"){z=A;A=null}if(A){if(k&&!t){return v.encodePayloadAsBlob(y,z)}return v.encodePayloadAsArrayBuffer(y,z)}if(!y.length){return z("0:")}function w(B){return B.length+":"+B}function x(C,B){v.encodePacket(C,A,function(D){B(null,w(D))})}u(y,x,function(C,B){return z(B.join(""))})};function u(A,C,x){var w=new Array(A.length);var B=h(A.length,x);var y=function(E,F,D){C(F,function(G,H){w[E]=H;D(G,w)})};for(var z=0;z<A.length;z++){y(z,A[z],B)}}v.decodePayload=function(D,w,G){if(typeof D!="string"){return v.decodePayloadAsBinary(D,w,G)}if(typeof w==="function"){G=w;w=null}var x;if(D==""){return G(j,0,1)}var y="",z,A;for(var E=0,B=D.length;E<B;E++){var C=D.charAt(E);if(":"!=C){y+=C}else{if(""==y||(y!=(z=Number(y)))){return G(j,0,1)}A=D.substr(E+1,z);if(y!=A.length){return G(j,0,1)}if(A.length){x=v.decodePacket(A,w);if(j.type==x.type&&j.data==x.data){return G(j,0,1)}var F=G(x,E+z,B);if(false===F){return}}E+=z;y=""}}if(y!=""){return G(j,0,1)}};v.encodePayloadAsArrayBuffer=function(x,y){if(!x.length){return y(new ArrayBuffer(0))}function w(A,z){v.encodePacket(A,true,function(B){return z(null,B)})}u(x,w,function(A,C){var D=C.reduce(function(F,G){var E;if(typeof G==="string"){E=G.length}else{E=G.byteLength}return F+E.toString().length+E+2},0);var B=new Uint8Array(D);var z=0;C.forEach(function(I){var E=typeof I==="string";var H=I;if(E){var F=new Uint8Array(I.length);for(var G=0;G<I.length;G++){F[G]=I.charCodeAt(G)}H=F.buffer}if(E){B[z++]=0}else{B[z++]=1}var J=H.byteLength.toString();for(var G=0;G<J.length;G++){B[z++]=parseInt(J[G])}B[z++]=255;var F=new Uint8Array(H);for(var G=0;G<F.length;G++){B[z++]=F[G]}});return y(B.buffer)})};v.encodePayloadAsBlob=function(x,y){function w(A,z){v.encodePacket(A,true,function(H){var F=new Uint8Array(1);F[0]=1;if(typeof H==="string"){var C=new Uint8Array(H.length);for(var E=0;E<H.length;E++){C[E]=H.charCodeAt(E)}H=C.buffer;F[0]=0}var B=(H instanceof ArrayBuffer)?H.byteLength:H.size;var I=B.toString();var G=new Uint8Array(I.length+1);for(var E=0;E<I.length;E++){G[E]=parseInt(I[E])}G[I.length]=255;if(k){var D=new k([F.buffer,G.buffer,H]);z(null,D)}})}u(x,w,function(A,z){return y(new k(z))})};v.decodePayloadAsBinary=function(C,w,H){if(typeof w==="function"){H=w;w=null}var G=C;var I=[];while(G.byteLength>0){var x=new Uint8Array(G);var y=x[0]===0;var F="";for(var B=1;;B++){if(x[B]==255){break}F+=x[B]}G=l(G,2+F.length);F=parseInt(F);var A=l(G,0,F);if(y){try{A=String.fromCharCode.apply(null,new Uint8Array(A))}catch(D){var z=new Uint8Array(A);A="";for(var B=0;B<z.length;B++){A+=String.fromCharCode(z[B])}}}I.push(A);G=l(G,F)}var E=I.length;I.forEach(function(J,K){H(v.decodePacket(J,w),K,E)})}},{"./keys":21,after:22,"arraybuffer.slice":23,"base64-arraybuffer":24,blob:25,utf8:26}],21:[function(f,g,e){g.exports=Object.keys||function h(m){var j=[];var k=Object.prototype.hasOwnProperty;for(var l in m){if(k.call(m,l)){j.push(l)}}return j}},{}],22:[function(f,g,e){g.exports=i;function i(m,n,l){var j=false;l=l||h;k.count=m;return(m===0)?n():k;function k(p,o){if(k.count<=0){throw new Error("after called too many times")}--k.count;if(p){j=true;n(p);n=l}else{if(k.count===0&&!j){n(null,o)}}}}function h(){}},{}],23:[function(f,g,e){g.exports=function(n,p,k){var j=n.byteLength;p=p||0;k=k||j;if(n.slice){return n.slice(p,k)}if(p<0){p+=j}if(k<0){k+=j}if(k>j){k=j}if(p>=j||p>=k||j===0){return new ArrayBuffer(0)}var o=new Uint8Array(n);var h=new Uint8Array(k-p);for(var l=p,m=0;l<k;l++,m++){h[m]=o[l]}return h.buffer}},{}],24:[function(f,g,e){(function(h){e.encode=function(n){var l=new Uint8Array(n),m,j=l.length,k="";for(m=0;m<j;m+=3){k+=h[l[m]>>2];k+=h[((l[m]&3)<<4)|(l[m+1]>>4)];k+=h[((l[m+1]&15)<<2)|(l[m+2]>>6)];k+=h[l[m+2]&63]}if((j%3)===2){k=k.substring(0,k.length-1)+"="}else{if(j%3===1){k=k.substring(0,k.length-2)+"=="}}return k};e.decode=function(r){var k=r.length*0.75,s=r.length,q,m=0,n,l,j,u;if(r[r.length-1]==="="){k--;if(r[r.length-2]==="="){k--}}var o=new ArrayBuffer(k),t=new Uint8Array(o);for(q=0;q<s;q+=4){n=h.indexOf(r[q]);l=h.indexOf(r[q+1]);j=h.indexOf(r[q+2]);u=h.indexOf(r[q+3]);t[m++]=(n<<2)|(l>>4);t[m++]=((l&15)<<4)|(j>>2);t[m++]=((j&3)<<6)|(u&63)}return o}})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")},{}],25:[function(f,i,e){var l=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var k=l.BlobBuilder||l.WebKitBlobBuilder||l.MSBlobBuilder||l.MozBlobBuilder;var h=(function(){try{var m=new Blob(["hi"]);return m.size==2}catch(n){return false}})();var j=k&&k.prototype.append&&k.prototype.getBlob;function g(o,m){m=m||{};var p=new k();for(var n=0;n<o.length;n++){p.append(o[n])}return(m.type)?p.getBlob(m.type):p.getBlob()}i.exports=(function(){if(h){return l.Blob}else{if(j){return g}else{return undefined}}})()},{}],26:[function(f,g,e){var h=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};
/* http://mths.be/utf8js v2.0.0 by @mathias */
(function(v){var o=typeof e=="object"&&e;var B=typeof g=="object"&&g&&g.exports==o&&g;var u=typeof h=="object"&&h;if(u.global===u||u.window===u){v=u}var t=String.fromCharCode;function n(F){var E=[];var D=0;var G=F.length;var H;var C;while(D<G){H=F.charCodeAt(D++);if(H>=55296&&H<=56319&&D<G){C=F.charCodeAt(D++);if((C&64512)==56320){E.push(((H&1023)<<10)+(C&1023)+65536)}else{E.push(H);D--}}else{E.push(H)}}return E}function y(G){var E=G.length;var D=-1;var F;var C="";while(++D<E){F=G[D];if(F>65535){F-=65536;C+=t(F>>>10&1023|55296);F=56320|F&1023}C+=t(F)}return C}function m(D,C){return t(((D>>C)&63)|128)}function x(C){if((C&4294967168)==0){return t(C)}var D="";if((C&4294965248)==0){D=t(((C>>6)&31)|192)}else{if((C&4294901760)==0){D=t(((C>>12)&15)|224);D+=m(C,6)}else{if((C&4292870144)==0){D=t(((C>>18)&7)|240);D+=m(C,12);D+=m(C,6)}}}D+=t((C&63)|128);return D}function w(F){var E=n(F);var G=E.length;var D=-1;var C;var H="";while(++D<G){C=E[D];H+=x(C)}return H}function i(){if(r>=q){throw Error("Invalid byte index")}var C=s[r]&255;r++;if((C&192)==128){return C&63}throw Error("Invalid continuation byte")}function k(){var D;var C;var G;var F;var E;if(r>q){throw Error("Invalid byte index")}if(r==q){return false}D=s[r]&255;r++;if((D&128)==0){return D}if((D&224)==192){var C=i();E=((D&31)<<6)|C;if(E>=128){return E}else{throw Error("Invalid continuation byte")}}if((D&240)==224){C=i();G=i();E=((D&15)<<12)|(C<<6)|G;if(E>=2048){return E}else{throw Error("Invalid continuation byte")}}if((D&248)==240){C=i();G=i();F=i();E=((D&15)<<18)|(C<<12)|(G<<6)|F;if(E>=65536&&E<=1114111){return E}}throw Error("Invalid UTF-8 detected")}var s;var q;var r;function j(E){s=n(E);q=s.length;r=0;var C=[];var D;while((D=k())!==false){C.push(D)}return y(C)}var l={version:"2.0.0",encode:w,decode:j};if(typeof d=="function"&&typeof d.amd=="object"&&d.amd){d(function(){return l})}else{if(o&&!o.nodeType){if(B){B.exports=l}else{var z={};var p=z.hasOwnProperty;for(var A in l){p.call(l,A)&&(o[A]=l[A])}}}else{v.utf8=l}}}(this))},{}],27:[function(f,g,e){if(typeof Object.create==="function"){g.exports=function h(j,i){j.super_=i;j.prototype=Object.create(i.prototype,{constructor:{value:j,enumerable:false,writable:true,configurable:true}})}}else{g.exports=function h(j,i){j.super_=i;var k=function(){};k.prototype=i.prototype;j.prototype=new k();j.prototype.constructor=j}}},{}],28:[function(g,f,i){var e=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var k=/^[\],:{}\s]*$/;var o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;var n=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;var h=/(?:^|:|,)(?:\s*\[)+/g;var l=/^\s+/;var m=/\s+$/;f.exports=function j(p){if("string"!=typeof p||!p){return null}p=p.replace(l,"").replace(m,"");if(e.JSON&&JSON.parse){return JSON.parse(p)}if(k.test(p.replace(o,"@").replace(n,"]").replace(h,""))){return(new Function("return "+p))()}}},{}],29:[function(f,g,e){e.encode=function(j){var k="";for(var h in j){if(j.hasOwnProperty(h)){if(k.length){k+="&"}k+=encodeURIComponent(h)+"="+encodeURIComponent(j[h])}}return k};e.decode=function(h){var m={};var n=h.split("&");for(var k=0,j=n.length;k<j;k++){var o=n[k].split("=");m[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return m}},{}],30:[function(h,i,f){var j=(function(){return this})();var g=j.WebSocket||j.MozWebSocket;i.exports=g?e:null;function e(n,m,l){var k;if(m){k=new g(n,m)}else{k=new g(n)}return k}if(g){e.prototype=g.prototype}},{}],31:[function(g,h,f){var j=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var e=g("isarray");h.exports=i;function i(l){function k(o){if(!o){return false}if((j.Buffer&&Buffer.isBuffer(o))||(j.ArrayBuffer&&o instanceof ArrayBuffer)||(j.Blob&&o instanceof Blob)||(j.File&&o instanceof File)){return true}if(e(o)){for(var n=0;n<o.length;n++){if(k(o[n])){return true}}}else{if(o&&"object"==typeof o){if(o.toJSON){o=o.toJSON()}for(var m in o){if(k(o[m])){return true}}}}return false}return k(l)}},{isarray:32}],32:[function(f,g,e){g.exports=Array.isArray||function(h){return Object.prototype.toString.call(h)=="[object Array]"}},{}],33:[function(f,g,e){var i=f("global");try{g.exports="XMLHttpRequest" in i&&"withCredentials" in new i.XMLHttpRequest()}catch(h){g.exports=false}},{global:34}],34:[function(f,g,e){g.exports=(function(){return this})()},{}],35:[function(f,g,e){var h=[].indexOf;g.exports=function(j,l){if(h){return j.indexOf(l)}for(var k=0;k<j.length;++k){if(j[k]===l){return k}}return -1}},{}],36:[function(g,h,e){var f=Object.prototype.hasOwnProperty;e.keys=Object.keys||function(k){var j=[];for(var i in k){if(f.call(k,i)){j.push(i)}}return j};e.values=function(k){var j=[];for(var i in k){if(f.call(k,i)){j.push(k[i])}}return j};e.merge=function(j,i){for(var k in i){if(f.call(i,k)){j[k]=i[k]}}return j};e.length=function(i){return e.keys(i).length};e.isEmpty=function(i){return 0==e.length(i)}},{}],37:[function(f,g,e){var h=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;var j=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];g.exports=function i(o){var k=h.exec(o||""),n={},l=14;while(l--){n[j[l]]=k[l]||""}return n}},{}],38:[function(g,h,f){var i=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var e=g("isarray");f.deconstructPacket=function(o){var m=[];var l=o.data;function k(s){if(!s){return s}if((i.Buffer&&Buffer.isBuffer(s))||(i.ArrayBuffer&&s instanceof ArrayBuffer)){var t={_placeholder:true,num:m.length};m.push(s);return t}else{if(e(s)){var r=new Array(s.length);for(var q=0;q<s.length;q++){r[q]=k(s[q])}return r}else{if("object"==typeof s&&!(s instanceof Date)){var r={};for(var p in s){r[p]=k(s[p])}return r}}}return s}var n=o;n.data=k(l);n.attachments=m.length;return{packet:n,buffers:m}};f.reconstructPacket=function(m,l){var k=0;function n(r){if(r&&r._placeholder){var o=l[r.num];return o}else{if(e(r)){for(var q=0;q<r.length;q++){r[q]=n(r[q])}return r}else{if(r&&"object"==typeof r){for(var p in r){r[p]=n(r[p])}return r}}}return r}m.data=n(m.data);m.attachments=undefined;return m};f.removeBlobs=function(n,o){function k(t,u,q){if(!t){return t}if((i.Blob&&t instanceof Blob)||(i.File&&t instanceof File)){l++;var p=new FileReader();p.onload=function(){if(q){q[u]=this.result}else{m=this.result}if(!--l){o(m)}};p.readAsArrayBuffer(t)}if(e(t)){for(var s=0;s<t.length;s++){k(t[s],s,t)}}else{if(t&&"object"==typeof t&&!j(t)){for(var r in t){k(t[r],r,t)}}}}var l=0;var m=n;k(m);if(!l){o(m)}};function j(k){return(i.Buffer&&Buffer.isBuffer(k))||(i.ArrayBuffer&&k instanceof ArrayBuffer)}},{isarray:40}],39:[function(i,g,l){var f=typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var e=i("debug")("socket.io-parser");var t=i("json3");var o=i("isarray");var q=i("emitter");var n=i("./binary");l.protocol=3;l.types=["CONNECT","DISCONNECT","EVENT","BINARY_EVENT","ACK","BINARY_ACK","ERROR"];l.CONNECT=0;l.DISCONNECT=1;l.EVENT=2;l.ACK=3;l.ERROR=4;l.BINARY_EVENT=5;l.BINARY_ACK=6;l.Encoder=k;function k(){}k.prototype.encode=function(v,w){e("encoding packet %j",v);if(l.BINARY_EVENT==v.type||l.BINARY_ACK==v.type){h(v,w)}else{var u=j(v);w([u])}};function j(v){var w="";var u=false;w+=v.type;if(l.BINARY_EVENT==v.type||l.BINARY_ACK==v.type){w+=v.attachments;w+="-"}if(v.nsp&&"/"!=v.nsp){u=true;w+=v.nsp}if(null!=v.id){if(u){w+=",";u=false}w+=v.id}if(null!=v.data){if(u){w+=","}w+=t.stringify(v.data)}e("encoded %j as %s",v,w);return w}function h(v,w){function u(A){var y=n.deconstructPacket(A);var z=j(y.packet);var x=y.buffers;x.unshift(z);w(x)}n.removeBlobs(v,u)}l.Decoder=s;function s(){this.reconstructor=null}q(s.prototype);s.prototype.add=function(v){var u;if("string"==typeof v){u=m(v);if(l.BINARY_EVENT==u.type||l.BINARY_ACK==u.type){this.reconstructor=new r(u);if(this.reconstructor.reconPack.attachments==0){this.emit("decoded",u)}}else{this.emit("decoded",u)}}else{if((f.Buffer&&Buffer.isBuffer(v))||(f.ArrayBuffer&&v instanceof ArrayBuffer)||v.base64){if(!this.reconstructor){throw new Error("got binary data when not reconstructing a packet")}else{u=this.reconstructor.takeBinaryData(v);if(u){this.reconstructor=null;this.emit("decoded",u)}}}else{throw new Error("Unknown type: "+v)}}};function m(y){var x={};var u=0;x.type=Number(y.charAt(0));if(null==l.types[x.type]){return p()}if(l.BINARY_EVENT==x.type||l.BINARY_ACK==x.type){x.attachments="";while(y.charAt(++u)!="-"){x.attachments+=y.charAt(u)}x.attachments=Number(x.attachments)}if("/"==y.charAt(u+1)){x.nsp="";while(++u){var z=y.charAt(u);if(","==z){break}x.nsp+=z;if(u+1==y.length){break}}}else{x.nsp="/"}var v=y.charAt(u+1);if(""!=v&&Number(v)==v){x.id="";while(++u){var z=y.charAt(u);if(null==z||Number(z)!=z){--u;break}x.id+=y.charAt(u);if(u+1==y.length){break}}x.id=Number(x.id)}if(y.charAt(++u)){try{x.data=t.parse(y.substr(u))}catch(w){return p()}}e("decoded %s as %j",y,x);return x}s.prototype.destroy=function(){if(this.reconstructor){this.reconstructor.finishedReconstruction()}};function r(u){this.reconPack=u;this.buffers=[]}r.prototype.takeBinaryData=function(u){this.buffers.push(u);if(this.buffers.length==this.reconPack.attachments){var v=n.reconstructPacket(this.reconPack,this.buffers);this.finishedReconstruction();return v}return null};r.prototype.finishedReconstruction=function(){this.reconPack=null;this.buffers=[]};function p(u){return{type:l.ERROR,data:"parser error"}}},{"./binary":38,debug:8,emitter:9,isarray:40,json3:41}],40:[function(f,g,e){g.exports=f(32)},{}],41:[function(f,g,e){
/* JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */
(function(M){var q={}.toString,m,h,F;var D=typeof d==="function"&&d.amd;var R=typeof JSON=="object"&&JSON;var L=typeof e=="object"&&e&&!e.nodeType&&e;if(L&&R){L.stringify=R.stringify;L.parse=R.parse}else{L=M.JSON=R||{}}var w=new Date(-3509827334573292);try{w=w.getUTCFullYear()==-109252&&w.getUTCMonth()===0&&w.getUTCDate()===1&&w.getUTCHours()==10&&w.getUTCMinutes()==37&&w.getUTCSeconds()==6&&w.getUTCMilliseconds()==708}catch(r){}function j(T){if(j[T]!==F){return j[T]}var U;if(T=="bug-string-char-index"){U="a"[0]!="a"}else{if(T=="json"){U=j("json-stringify")&&j("json-parse")}else{var ab,Y='{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';if(T=="json-stringify"){var Z=L.stringify,aa=typeof Z=="function"&&w;if(aa){(ab=function(){return 1}).toJSON=ab;try{aa=Z(0)==="0"&&Z(new Number())==="0"&&Z(new String())=='""'&&Z(q)===F&&Z(F)===F&&Z()===F&&Z(ab)==="1"&&Z([ab])=="[1]"&&Z([F])=="[null]"&&Z(null)=="null"&&Z([F,q,null])=="[null,null,null]"&&Z({a:[ab,true,false,null,"\x00\b\n\f\r\t"]})==Y&&Z(null,ab)==="1"&&Z([1,2],null,1)=="[\n 1,\n 2\n]"&&Z(new Date(-8640000000000000))=='"-271821-04-20T00:00:00.000Z"'&&Z(new Date(8640000000000000))=='"+275760-09-13T00:00:00.000Z"'&&Z(new Date(-62198755200000))=='"-000001-01-01T00:00:00.000Z"'&&Z(new Date(-1))=='"1969-12-31T23:59:59.999Z"'}catch(V){aa=false}}U=aa}if(T=="json-parse"){var X=L.parse;if(typeof X=="function"){try{if(X("0")===0&&!X(false)){ab=X(Y);var W=ab.a.length==5&&ab.a[0]===1;if(W){try{W=!X('"\t"')}catch(V){}if(W){try{W=X("01")!==1}catch(V){}}if(W){try{W=X("1.")!==1}catch(V){}}}}}catch(V){W=false}}U=W}}}return j[T]=!!U}if(!j("json")){var N="[object Function]";var K="[object Date]";var H="[object Number]";var I="[object String]";var z="[object Array]";var v="[object Boolean]";var A=j("bug-string-char-index");if(!w){var n=Math.floor;var S=[0,31,59,90,120,151,181,212,243,273,304,334];var y=function(T,U){return S[U]+365*(T-1970)+n((T-1969+(U=+(U>1)))/4)-n((T-1901+U)/100)+n((T-1601+U)/400)}}if(!(m={}.hasOwnProperty)){m=function(V){var T={},U;if((T.__proto__=null,T.__proto__={toString:1},T).toString!=q){m=function(Y){var X=this.__proto__,W=Y in (this.__proto__=null,this);this.__proto__=X;return W}}else{U=T.constructor;m=function(X){var W=(this.constructor||U).prototype;return X in this&&!(X in W&&this[X]===W[X])}}T=null;return m.call(this,V)}}var O={"boolean":1,number:1,string:1,"undefined":1};var p=function(T,V){var U=typeof T[V];return U=="object"?!!T[V]:!O[U]};h=function(V,Y){var W=0,T,U,X;(T=function(){this.valueOf=0}).prototype.valueOf=0;U=new T();for(X in U){if(m.call(U,X)){W++}}T=U=null;if(!W){U=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"];h=function(aa,ae){var ad=q.call(aa)==N,ac,ab;var Z=!ad&&typeof aa.constructor!="function"&&p(aa,"hasOwnProperty")?aa.hasOwnProperty:m;for(ac in aa){if(!(ad&&ac=="prototype")&&Z.call(aa,ac)){ae(ac)}}for(ab=U.length;ac=U[--ab];Z.call(aa,ac)&&ae(ac)){}}}else{if(W==2){h=function(aa,ad){var Z={},ac=q.call(aa)==N,ab;for(ab in aa){if(!(ac&&ab=="prototype")&&!m.call(Z,ab)&&(Z[ab]=1)&&m.call(aa,ab)){ad(ab)}}}}else{h=function(aa,ad){var ac=q.call(aa)==N,ab,Z;for(ab in aa){if(!(ac&&ab=="prototype")&&m.call(aa,ab)&&!(Z=ab==="constructor")){ad(ab)}}if(Z||m.call(aa,(ab="constructor"))){ad(ab)}}}}return h(V,Y)};if(!j("json-stringify")){var l={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"};var E="000000";var o=function(T,U){return(E+(U||0)).slice(-T)};var t="\\u00";var x=function(Z){var T='"',W=0,X=Z.length,Y=X>10&&A,V;if(Y){V=Z.split("")}for(;W<X;W++){var U=Z.charCodeAt(W);switch(U){case 8:case 9:case 10:case 12:case 13:case 34:case 92:T+=l[U];break;default:if(U<32){T+=t+o(2,U.toString(16));break}T+=Y?V[W]:A?Z.charAt(W):Z[W]}}return T+'"'};var k=function(Z,aq,X,ac,an,T,aa){var aj,V,ag,ap,ao,ab,am,ak,ah,ae,ai,U,Y,W,al,af;try{aj=aq[Z]}catch(ad){}if(typeof aj=="object"&&aj){V=q.call(aj);if(V==K&&!m.call(aj,"toJSON")){if(aj>-1/0&&aj<1/0){if(y){ao=n(aj/86400000);for(ag=n(ao/365.2425)+1970-1;y(ag+1,0)<=ao;ag++){}for(ap=n((ao-y(ag,0))/30.42);y(ag,ap+1)<=ao;ap++){}ao=1+ao-y(ag,ap);ab=(aj%86400000+86400000)%86400000;am=n(ab/3600000)%24;ak=n(ab/60000)%60;ah=n(ab/1000)%60;ae=ab%1000}else{ag=aj.getUTCFullYear();ap=aj.getUTCMonth();ao=aj.getUTCDate();am=aj.getUTCHours();ak=aj.getUTCMinutes();ah=aj.getUTCSeconds();ae=aj.getUTCMilliseconds()}aj=(ag<=0||ag>=10000?(ag<0?"-":"+")+o(6,ag<0?-ag:ag):o(4,ag))+"-"+o(2,ap+1)+"-"+o(2,ao)+"T"+o(2,am)+":"+o(2,ak)+":"+o(2,ah)+"."+o(3,ae)+"Z"}else{aj=null}}else{if(typeof aj.toJSON=="function"&&((V!=H&&V!=I&&V!=z)||m.call(aj,"toJSON"))){aj=aj.toJSON(Z)}}}if(X){aj=X.call(aq,Z,aj)}if(aj===null){return"null"}V=q.call(aj);if(V==v){return""+aj}else{if(V==H){return aj>-1/0&&aj<1/0?""+aj:"null"}else{if(V==I){return x(""+aj)}}}if(typeof aj=="object"){for(W=aa.length;W--;){if(aa[W]===aj){throw TypeError()}}aa.push(aj);ai=[];al=T;T+=an;if(V==z){for(Y=0,W=aj.length;Y<W;Y++){U=k(Y,aj,X,ac,an,T,aa);ai.push(U===F?"null":U)}af=ai.length?(an?"[\n"+T+ai.join(",\n"+T)+"\n"+al+"]":("["+ai.join(",")+"]")):"[]"}else{h(ac||aj,function(at){var ar=k(at,aj,X,ac,an,T,aa);if(ar!==F){ai.push(x(at)+":"+(an?" ":"")+ar)}});af=ai.length?(an?"{\n"+T+ai.join(",\n"+T)+"\n"+al+"}":("{"+ai.join(",")+"}")):"{}"}aa.pop();return af}};L.stringify=function(T,V,W){var U,ac,aa,Z;if(typeof V=="function"||typeof V=="object"&&V){if((Z=q.call(V))==N){ac=V}else{if(Z==z){aa={};for(var Y=0,X=V.length,ab;Y<X;ab=V[Y++],((Z=q.call(ab)),Z==I||Z==H)&&(aa[ab]=1)){}}}}if(W){if((Z=q.call(W))==H){if((W-=W%1)>0){for(U="",W>10&&(W=10);U.length<W;U+=" "){}}}else{if(Z==I){U=W.length<=10?W:W.slice(0,10)}}}return k("",(ab={},ab[""]=T,ab),ac,aa,U,"",[])}}if(!j("json-parse")){var G=String.fromCharCode;var i={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"};var B,Q;var C=function(){B=Q=null;throw SyntaxError()};var u=function(){var Y=Q,W=Y.length,X,V,T,Z,U;while(B<W){U=Y.charCodeAt(B);switch(U){case 9:case 10:case 13:case 32:B++;break;case 123:case 125:case 91:case 93:case 58:case 44:X=A?Y.charAt(B):Y[B];B++;return X;case 34:for(X="@",B++;B<W;){U=Y.charCodeAt(B);if(U<32){C()}else{if(U==92){U=Y.charCodeAt(++B);switch(U){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:X+=i[U];B++;break;case 117:V=++B;for(T=B+4;B<T;B++){U=Y.charCodeAt(B);if(!(U>=48&&U<=57||U>=97&&U<=102||U>=65&&U<=70)){C()}}X+=G("0x"+Y.slice(V,B));break;default:C()}}else{if(U==34){break}U=Y.charCodeAt(B);V=B;while(U>=32&&U!=92&&U!=34){U=Y.charCodeAt(++B)}X+=Y.slice(V,B)}}}if(Y.charCodeAt(B)==34){B++;return X}C();default:V=B;if(U==45){Z=true;U=Y.charCodeAt(++B)}if(U>=48&&U<=57){if(U==48&&((U=Y.charCodeAt(B+1)),U>=48&&U<=57)){C()}Z=false;for(;B<W&&((U=Y.charCodeAt(B)),U>=48&&U<=57);B++){}if(Y.charCodeAt(B)==46){T=++B;for(;T<W&&((U=Y.charCodeAt(T)),U>=48&&U<=57);T++){}if(T==B){C()}B=T}U=Y.charCodeAt(B);if(U==101||U==69){U=Y.charCodeAt(++B);if(U==43||U==45){B++}for(T=B;T<W&&((U=Y.charCodeAt(T)),U>=48&&U<=57);T++){}if(T==B){C()}B=T}return +Y.slice(V,B)}if(Z){C()}if(Y.slice(B,B+4)=="true"){B+=4;return true}else{if(Y.slice(B,B+5)=="false"){B+=5;return false}else{if(Y.slice(B,B+4)=="null"){B+=4;return null}}}C()}}return"$"};var P=function(U){var T,V;if(U=="$"){C()}if(typeof U=="string"){if((A?U.charAt(0):U[0])=="@"){return U.slice(1)}if(U=="["){T=[];for(;;V||(V=true)){U=u();if(U=="]"){break}if(V){if(U==","){U=u();if(U=="]"){C()}}else{C()}}if(U==","){C()}T.push(P(U))}return T}else{if(U=="{"){T={};for(;;V||(V=true)){U=u();if(U=="}"){break}if(V){if(U==","){U=u();if(U=="}"){C()}}else{C()}}if(U==","||typeof U!="string"||(A?U.charAt(0):U[0])!="@"||u()!=":"){C()}T[U.slice(1)]=P(u())}return T}}C()}return U};var J=function(V,U,W){var T=s(V,U,W);if(T===F){delete V[U]}else{V[U]=T}};var s=function(W,V,X){var U=W[V],T;if(typeof U=="object"&&U){if(q.call(U)==z){for(T=U.length;T--;){J(U,T,X)}}else{h(U,function(Y){J(U,Y,X)})}}return X.call(W,V,U)};L.parse=function(V,W){var T,U;B=0;Q=""+V;T=P(u());if(u()!="$"){C()}B=Q=null;return W&&q.call(W)==N?s((U={},U[""]=T,U),"",W):T}}}if(D){d(function(){return L})}}(this))},{}],42:[function(f,h,e){h.exports=g;function g(l,j){var m=[];j=j||0;for(var k=j||0;k<l.length;k++){m[k-j]=l[k]}return m}},{}]},{},[1])(1)});
plyCExe=function(e,t,a,r){bx.inClassing||((r=r||{}).preloadAsset={},r.fullAccel=!0,apn.CExe.call(this,e,t,a,r),this.o.useLongHold=!0,"Y"==bx.$getParamFromURL(location.href,"PRT")&&(this.o.screenStretch=1))},bx.$Inherit(plyCExe,apn.CExe),plyCExe._sptRun={getMyAnswer:{param:"",help:"Get previsously entered my answer of current question."},getQuestionStartIndex:{param:"",help:"Get start index of current question."},getQuestionCount:{param:"",help:"Get count of current question."},getQuestionTotalNumber:{param:"",help:"Get the total number of questions in a course."},getUserId:{param:"",help:"Get ID of current user(student)."},getContentId:{param:"",help:"Get ID of current content(file)."},getAuthCode:{param:"wgtID(String)|undefined",help:"Get current AuthCode. If 'wgtID', it is supposed to be taken from the widget data. If not, from content meta data. Error will be logged if no AuthCode."},getResult:{param:"",help:"Returns current AnswerReport{}.\nThis must be called on 'Poly Report' event."},getContentInfo:{param:"",help:"Get content activity result list information."},saveActivityQuizDetail:{param:"ActivityReport{}",help:"Save activity quiz information."},saveActivityFileAsset:{param:"ActivityAsset{}",help:"Save activity file asset."},saveActivityCompStatus:{param:'{completeYN:"Y|N"}',help:"Save this book completion inforatmion(Y|N)"},moveActivityMenu:{param:"Activity Index",help:"Move activity menu"},closeContent:{param:"",help:"Close viewer window"},runExample:{param:"",help:"Whether example animtion is running or not."},makeFullScreen:{param:'"Y|N"',help:"Send full screen signal to Container. If param value is 'Y' then make full screen mode."},reportStart:{param:"",help:"Report the start of content to LMS."},reportEnd:{param:"",help:"Report the end of content to LMS."},reportFinish:{param:"",help:"Report the end of COURSE to LMS."},reportAnswer:{param:"AnswerReport{}",help:"Report the result of content to LMS. Regaring to 'AnswerReport{}', please refer to its specification document."},reportCorrectAnswer:{param:"AnswerReport{}",help:"Report the correct answer of content to LMS.\nThis is supposed to be run on 'Page Run' event.\nRegaring to 'AnswerReport{}', please refer to the corresponding document."},submit:{param:"AnswerReport{}",help:"Submit all results of content to LMS. This is supposed to be run on 'Poly SubmitRequired' event. Regaring to 'AnswerReport{}', please refer to the corresponding document."},sendToContainer:{param:"Any",help:"Send any type of data to container. Param must have value."},sendContentState:{param:'undefiend|{flowState:"start|in|out"}',help:"Send current content state data to container.\n<span style='color:green'>If the content is composed of multiple pages or in network mode, it must be run at 'Page Run' event.</span>"},getFromContainer:{param:"",help:"Get common data from Container."},netClientLinkTo:{param:"{pageTitle:String}",help:"Request clients to change current page to the given page by page title."},netReportAnswer:{param:"plyAnswer.report{}",help:"Request answer to a report server. Regaring to 'plyAnswer{}', please refer to the corresponding document."},runDevice:{param:'{op:"contentInit | contentInitAllOp | broadcastDataToStudents | sendDataToStudent | sendDataToTeacher | getMyProfile | getLoginStudentsProfile | reportStudyResult | startCamera | startFloatingCamera | stopCamera | switchCamera | takePicture | startVideoRecord | stopVideoRecord | startFullScreenVideoRecord | stopFullScreenVideoRecord | startVoiceRecord | stopVoiceRecord | uploadFileToServer | uploadImageToServer | startDecibelCheck | stopDecibelCheck | saveContentProgress | loadContentProgress | movePrevContent | moveNextContent | getServerHost | showTeachingTool | hideTeachingTool | showContentTool | hideContentTool | createIndicator | deleteIndicator | setIndicatorActiveIndex | getDeviceOrientation | captureScreen | captureFullScreen | getStudentLessonResultSeq | getDevicePlatform | getAllStudentsProfile", data:Any}',help:'Request 2-View device API.<br/><span style="font-weight:bold">contentInit, contentInitAllOp</span> apis. If you explicitly call one of them, you can use the full api.<br/><span style="font-weight:bold">startFloatingCamera, takePicture, captureScreen</span> apis need data for position "{top:, left:, width:, height:}".'},getDeviceResponse:{param:"uuid",help:"Get Device API response data. After call this, the Data will be deleted."},getDeviceResponseOp:{param:"uuid",help:"Get Device API response name only."},setCourseData:{param:"{key:String, value:Any}",help:"Creating course global variables and storing data values for storing and referencing data between content bound to a course."},getCourseData:{param:"key",help:"Get the course global variable value."}},plyCExe.IStub_sptInfo=function(){var e,t={fns:{}};for(e in plyCExe._sptRun)plyCExe._sptRun[e]&&(t.fns[e]=bx.$cloneObject({},plyCExe._sptRun[e]));return t},plyCExe.send=function(e,t){window.parent&&(parent.postMessage({op:e,from:"aspen",data:t},"*"),plyCExe.isLoggingMode)&&console.warn("CONTENT_SND : op ["+e+"], data : ",t)},plyCExe.prototype.IStub_sptRunCheck=function(e,t,a){if(this._setOverlayInfo(),"getAuthCode"==e){if(this._getMeta(t))return!0}else if(plyCExe._sptRun[e])return!0;return!!apn.CExe.prototype.IStub_sptRunCheck&&apn.CExe.prototype.IStub_sptRunCheck.call(this,e,t,a)},plyCExe.prototype.ISub_clear=function(){plyCExe.isRunMode},plyCExe.prototype.IStub_sptRun=function(e,t,a){switch(this._setOverlayInfo(),e){case"getMyAnswer":return window.ply&&ply.dv&&ply.dv.contents?(this._plyCtxt.clearAnswer&&ply.dv.contents.setAnswer(this.project.property.id,this._plyCtxt.courseId,""),this._getMyAnswer()):"";case"getCourseParam":return window.ply&&ply.dv&&ply.dv.contents?ply.dv.contents.getCourseParam():"";case"getQuestionStartIndex":return this._plyCtxt.qStart;case"getQuestionCount":return this._plyCtxt.qCount;case"getQuestionTotalNumber":return this._plyCtxt.tqCount;case"runExample":return this._plyCtxt.runExample;case"getContentId":return this.project?this.project.property.id:"";case"getUserId":return window.ply&&ply.dv&&ply.dv.user?ply.dv.user.getUserId():"";case"getResult":return this._plyCtxt.result;case"getAuthCode":var r=this._getMeta(t);return r&&r.plyCode?r.plyCode:"NONE";case"getFromContainer":return this._plyCtxt.containerData;case"reportStart":return void(this.project&&this.project.property.id&&this.send("start",{project_id:this.project.property.id}));case"reportEnd":return void(this.project&&this.project.property.id&&this.send("end",{project_id:this.project.property.id}));case"reportFinish":return void(this.project&&this.project.property.id&&this.send("finish",{project_id:this.project.property.id}));case"reportAnswer":return void(t&&this.send("report",{project_id:this.project.property.id,answer:t}));case"reportCorrectAnswer":return void(t&&this.send("answer_info",{project_id:this.project.property.id,answer_info:t,state_info:{exe_type:this._getExeType(),net_mode:this._isNetworkMode(),flow_state:this._getFlowState()}}));case"submit":return void(t&&this.send("submit",{project_id:this.project.property.id,answer:t}));case"sendToContainer":return void(t&&this.send("to_container",{project_id:this.project.property.id,data:t}));case"sendContentState":return this.send("content_state",{project_id:this.project.property.id,info:{exe_type:this._getExeType(),net_mode:this._isNetworkMode(),flow_state:t&&t.flowState?t.flowState:this._getFlowState()}}),void(plyCExe.isRunMode||ply.dv.runDeviceApi({op:"contentInit"},this));case"makeFullScreen":return void(t&&this.send("full_screen",{project_id:this.project.property.id,mode:t}));case"netClientLinkTo":return void(t&&t.pageTitle&&this.getCurApx()&&this.getCurApx().netCmdRunPage(t.pageTitle));case"netReportAnswer":var n;return void(t&&(t.select||t.answer)&&this.getCurApx()&&(n={id:(r=this.getCurApx()).screen.UI.title,client:r.netId(),report:{}},bx.$cloneObject(n.report,t),r.netToServer("plyAnswer",n)));case"runDevice":return void("contentInit"==t.op||"contentInitAllOp"==t.op?plyCExe.isRunMode||ply.dv.runDeviceApi({op:"contentInitAllOp"},this):ply.dv.runDeviceApi(t,this));case"getDeviceResponse":return this._getDeviceApiRes(t);case"getDeviceResponseOp":return this._getDeviceApiRes(t,!0);case"setCourseData":if(t&&t.key&&window.localStorage){if(o=window.localStorage.getItem("globalData"))try{o=JSON.parse(o)}catch(e){o={}}else o={};o[t.key]=t.value,window.localStorage.setItem("globalData",JSON.stringify(o))}return;case"getCourseData":if(t&&window.localStorage){var o;if(o=window.localStorage.getItem("globalData"))try{o=JSON.parse(o)}catch(e){o={}}else o={};return o[t]}return}if(apn.CExe.prototype.IStub_sptRun)return apn.CExe.prototype.IStub_sptRun.call(this,e,t,a)},plyCExe.IStub_property=function(e,t,a){if(e&&apn.Project.getLayout(e).property.plyCExe)return apn.Project.getLayout(e).property.plyCExe[t]},plyCExe.prototype.IStub_getScreenList=function(){return apn.Project.getPages(this.project,!1,"apn.CFlowPage")},plyCExe.IStub_getConfiguration=function(e){return e&&apn.Project.resolveProperty(e,"exeNetworkMode")||e&&"plyMulti"==apn.Project.getLayout(e).CTXT.exeID?{}:{flowModeHide:!0,itrLtpSimple:!0}},plyCExe.prototype.init=function(e){apn.CExe.prototype.init.call(this,e),this.initPolyIF()},plyCExe.prototype._getDeviceApiRes=function(e,t){var a;if(a=this._plyCtxt.deviceResponse[e])return t||delete this._plyCtxt.deviceResponse[e],t?a.op:a},plyCExe.prototype._setDeviceApiRes=function(e){this._plyCtxt.deviceResponse=this._plyCtxt.deviceResponse||{};var t=function e(t){var a="xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)});return t[a]?e(t):a}(this._plyCtxt.deviceResponse);return this._plyCtxt.deviceResponse[t]=e,t},plyCExe.prototype.send=function(e,t){plyCExe.send(e,t)},plyCExe.prototype.runCourse=function(e){e&&this.send("run_course",{treeId:e})},plyCExe.prototype.initPolyIF=function(){plyCExe.isRunMode=!1,plyCExe.deviceReady=!1,this._plyCtxt={debug:!1,qStart:-1,qCount:-1},"Y"==bx.$getParamFromURL(location.href,"DEBUG")&&(this._plyCtxt.debug=!0);(e=bx.$getParamFromURL(location.href,"Q_START"))&&bx.$checkNaN(parseInt(e))&&(this._plyCtxt.qStart=bx.$checkNaN(parseInt(e))),(e=bx.$getParamFromURL(location.href,"Q_COUNT"))&&bx.$checkNaN(parseInt(e))&&(this._plyCtxt.qCount=bx.$checkNaN(parseInt(e))),this._plyCtxt.tqCount=0,(e=bx.$getParamFromURL(location.href,"T_Q_COUNT"))&&bx.$checkNaN(parseInt(e))&&(this._plyCtxt.tqCount=bx.$checkNaN(parseInt(e))),e=bx.$getParamFromURL(location.href,"COURSE_ID"),this._plyCtxt.courseId=e||"NONE",e=bx.$getParamFromURL(location.href,"RUN_EXAMPLE"),this._plyCtxt.runExample=!e||"N"!=e,e=bx.$getParamFromURL(location.href,"CLEAR_ANSWER"),this._plyCtxt.clearAnswer=!(!e||"Y"!=e),(e=bx.$getParamFromURL(location.href,"IS_RUN_MODE"))&&("Y"==e||"P"==e?(plyCExe.isRunMode=!0,plyCExe.deviceReady=!1,ply.dv.runDeviceApi({op:"contentInit"},this)):"B"==e&&(plyCExe.isRunMode=!0,plyCExe.deviceReady=!0));var e,a=this;window.addEventListener("message",function(e){if(e.data&&e.data.op&&"course"==e.data.from){var t=a.getPM().getCurrent();switch(e.data.op){case"notifyContentInitFinish":plyCExe.deviceReady=!0,a.fireEvent(t,"spt_Custom","notifyContentInitFinish");break;case"result":case"submit":e.data.data&&(a._plyCtxt.result=e.data.data,a.firePlyEvent(t,"report"==e.data.op?"report":"reqSubmit"));break;case"correct_answer":a.firePlyEvent(t,"correctAnswer");break;case"my_answer":a.getPM().get(t)&&(a._setObjectInfoToAnswer(e.data.data.answer),a.getPM().get(t).canvas.ctxSet("MyAnswer",e.data.data),a.firePlyEvent(t,"showMyAnswer"));break;case"record":e.data.data&&window[e.data.data.functionName]&&("RecordRecordingBuffer_callback"==e.data.data.functionName?window[e.data.data.functionName](e.data.data.uid,e.data.data.cid,e.data.data.progress):window[e.data.data.functionName](e.data.data.uid,e.data.data.cid,e.data.data.msg,e.data.data.w,e.data.data.l));break;case"to_content":e.data.data&&(a._plyCtxt.containerData=e.data.data,a.firePlyEvent(t,"rcvContainerData"));break;case"move_next":a.firePlyEvent(t,"nextPage");break;case"move_prev":a.firePlyEvent(t,"prevPage");break;case"deviceApiRes":a.fireCustomEvent(t,"DeviceResponse__"+a._setDeviceApiRes(e.data.data));break;case"TEST_deviceApiRes":e.data.TEST_exeId===a.tagId&&a.fireCustomEvent(t,"DeviceResponse__"+a._setDeviceApiRes(e.data.data));break;case"deviceNetApi":a.onReceivedNetData(e.data.data);break;case"PolyMsg":a.fireCustomEvent(t,encodeURIComponent("PolyMsg/"+JSON.stringify(e.data.data)))}console.log("RCV",e.data)}},!1),this._plyCtxt.debug&&(this.IDriver_onGestureEvent=function(e,t,a,r,n,o){if(e==bx.CGesture.MOUSE_RIGHTCLICK){e=this.getPM().getCurrent();if(this.getPM().get(e)){for(var i=this.getPM().get(e).canvas,s=[],p=document.elementFromPoint(r,n);p&&(!p.apnOID||i.event2checkPass(p,r,n,o,t,a))&&p!=i.tag&&p!=i.ownerDocument;)p.style.visibility="hidden",s.push(p),p=document.elementFromPoint(r,n);if(s.length)for(var l=0;l<s.length;l++)s[l].style.visibility="visible";p.apnOID&&this.send("object_info",{project_id:this.project.property.id,page_id:e,object_id:p.apnOID,label:i.screen.objects[p.apnOID].create.data.styles.title||""})}}})},plyCExe.prototype.fireEvent=function(e,t,a){e=e||this.getPM().getCurrent();this.getPM().get(e)&&this.getPM().get(e).canvas.fireEvent(t,a)},plyCExe.prototype.setOnNetDataFn=function(e){this.onNetData=e},plyCExe.prototype.onReceivedNetData=function(e){var t=this.getPM().getCurrent(),a=this._setDeviceApiRes(e);this.fireEvent(t,"spt_Custom","DeviceResponse__"+a),this.onNetData&&"function"==typeof this.onNetData&&this.onNetData(e.data)},plyCExe.prototype.firePlyEvent=function(e,t){this.fireEvent(e,"plyEvent",t)},plyCExe.prototype.fireCustomEvent=function(e,t){var a=this;function r(e){a.fireEvent(e,"spt_Custom",t)}if(r(e),this.overLayPageIds&&0<this.overLayPageIds.length)for(var n=0;n<this.overLayPageIds.length;n++)r(this.overLayPageIds[n])},plyCExe.prototype._getMyAnswer=function(){var e="",t=ply.dv.contents.getAnswer(this.project.property.id,this._plyCtxt.courseId);return"submit_data"==t.key?e=t.value.answer:"answer_list"==t.key&&t.value&&t.value.answer&&t.value.answer.answer&&(t.value.answer.answer=this._setObjectInfoToAnswer(t.value.answer.answer),e=t.value.answer),e},plyCExe.prototype._setObjectInfoToAnswer=function(e){if(e&&e.length){for(var t,a=0;a<e.length;a++)(t=this._getObjectInfo(e[a].authoring_code,e[a].page_id))&&(e[a].page_id=t.pageId,e[a].object_id=t.objectId);return e}},plyCExe.prototype._setOverlayInfo=function(){var e=this.project&&this.project.pages;if(e)for(var t in this.overLayPageIds=[],e)"apn.COverlayPage"==e[t].module&&this.overLayPageIds.push(t)},plyCExe.prototype._getObjectInfo=function(i,e){var t={},a=this.project&&this.project.pages;if(a){var r,n=this.project&&this.project.layouts;for(r in n)if(n[r]&&n[r].property&&n[r].property.plyCExe&&n[r].property.plyCExe.plyMeta&&n[r].property.plyCExe.plyMeta.plyCode==i){for(var o in t.objectId=this.project.property.id,a)if("apn.CFlowPage"==a[o].module){t.pageId=o;break}return t}if(e){if(t=s(e,a[e].objects,!0))return t}else for(var o in a)if(t=s(o,a[o].objects,!1))return t}function s(e,t,a){var r,n=null;if(t)for(var o in t)if((r=t[o].create&&t[o].create.data&&t[o].create.data.properties&&t[o].create.data.properties.attrs)&&(n=!(n=r.plyMeta&&r.plyMeta.plyCode==i?{pageId:e,objectId:o}:n)&&a&&r.cpPlyMeta&&r.cpPlyMeta.plyCode==i?{pageId:e,objectId:o}:n))break;return n}},plyCExe.prototype._getMeta=function(t){var a=this;function e(e){if(e&&(e=a.getPM().get(e))&&e.canvas){if(!t)return plyCExe.IStub_property(a.project,"plyMeta");if(e.canvas.screen&&e.canvas.screen.objects[t]){e=e.canvas.screen.objects[t].create.data;if(e&&e.properties&&e.properties.attrs)return e.properties.attrs.plyMeta||e.properties.attrs.cpPlyMeta}}return null}var r=e(this.getCurrentPageID());if(null===r&&this.overLayPageIds&&this.overLayPageIds.length)for(var n=0;n<this.overLayPageIds.length&&!(r=e(this.overLayPageIds[n]));n++);return r},plyCExe.prototype._getFlowState=function(){var e=this.getCurrentPageID(),t=[];return this._isStartPage(e)&&t.push("start"),this._isInPage(e)&&t.push("in"),this._isOutPage(e)&&t.push("out"),t},plyCExe.prototype._isStartPage=function(e){return(e=e||this.getCurrentPageID())==this.getStartPageID()},plyCExe.prototype._isInPage=function(e){return(e=e||this.getCurrentPageID())==this.getInPageID()},plyCExe.prototype._isOutPage=function(e){return(e=e||this.getCurrentPageID())==this.getOutPageID()},plyCExe.prototype._isNetworkMode=function(){return!(!this.project||!apn.Project.resolveProperty(this.project,"exeNetworkMode"))},plyCExe.prototype._getExeId=function(){return this.project&&apn.Project.getLayout(this.project).CTXT.exeID||""},plyCExe.prototype._getExeType=function(){var e=this.getExeOption();return e&&e.exeType||""},plyCExe.disableJsDropZone=function(e,t){try{for(const a of t)e.removeEventListener(a.type,a.handler)}catch(e){console.error(e)}},plyCExe.enableJsDropZone=function(e,i,s){var t=e=>{e.stopPropagation(),e.preventDefault()},t=[{type:"drop",handler:async function(e){e.stopPropagation(),e.preventDefault();var t=null,a=e.dataTransfer.files,r=[];if(s=s||(e=>alert(e)),0==a.length)return s("Only js file can be added.");if(5<a.length)return s("Up to 5 js files can be added");for(var n=0;n<a.length;n++){if("text/javascript"!=a[n].type){t="Only js file can be added. err: "+a[n].name;break}var o=await async function(r){return new Promise((e,t)=>{var a=new FileReader;a.onload=()=>e(a.result),a.onerror=t,a.readAsText(r)})}(a[n]);try{r.push({name:a[n].name,type:a[n].type,size:o.length,data:o})}catch(e){console.error(e),t="Read Error: "+a[n].name;break}}if(t)return s(t);i&&i(r)}},{type:"dragover",handler:t},{type:"dragenter",handler:t},{type:"dragleave",handler:t}];for(const a of t)e.addEventListener(a.type,a.handler);return t},plyCExe.prototype.IStub_setup=function(a){var e,r,t,n,o,i,s,p;function l(){for(var e in o)o[e]&&(this.id==e?(r[e].style.display="block",r.tagTab.$$(e).style.borderStyle="solid solid none solid"):(r[e].style.display="none",r.tagTab.$$(e).style.borderStyle="none none solid none"));apn.CExe._uiLastSetupTab=this.id}a&&a.getData()&&(e=apn.Project.getLayout(a.getData()).property,t=this,o={tagTab1:!0,tagTab4:!0,tagTabSp2:n=2==apn.Project.getScriptVer(a.getData())?!0:n},i=apn.CExe.GL({ko:"추가 설정",en:"Setup properties"}),window.asui&&asui.MENU&&asui.MENU.EXE_CFG&&(i=asui.MENU.EXE_CFG),s=()=>{eduLib.edtInputApplyAll(a,r.tagTab1),n&&eduLib.edtInputApplyAll(a,r.tagTabSp2),eduLib.edtInputApplyAll(a,r.tagTab4),a.save(),a.onExeDataChanged(),t.clearOnSetup(),plyCExe.disableJsDropZone(r.tagTab4,p)},r=a.dlgDoModal(Math.floor(.75*bx.UX.width),Math.floor(.9*bx.UX.height),s,()=>{plyCExe.disableJsDropZone(r.tagTab4,p)},{title:i}))&&(r.tagTab=r.$TAG("DIV",{style:"position:relative;width:100%;height:26px;padding-bottom:14px;"}),r.tagTab.innerHTML="<span id='tagTab1' style='"+apn.CExe.CSS_SETUP_TAB+"'>"+apn.CExe.GL({ko:"배치/스타일",en:"Layout/Style"})+"</span>\n\t\t<span id='tagTab4' style='"+apn.CExe.CSS_SETUP_TAB+"'>"+apn.CExe.GL({ko:"추가 모듈",en:"Additional Module"})+"</span>\n\t\t"+(n?"<span id='tagTabSp2' style='"+apn.CExe.CSS_SETUP_TAB+"'>"+apn.CExe.GL(apn.CExe.TXT_SETUP_TAB3)+"</span>":"")+"\n\t\t"+apn.CExe.CSS_SETUP_TAB_END,r.tagTab.$$("tagTab1").onclick=r.tagTab.$$("tagTab4").onclick=l,n&&(r.tagTab.$$("tagTabSp2").onclick=l),r.tagTab1=r.$TAG("DIV",{style:"width:100%;height:"+(r.contentHeight-40)+"px"}),r.tagTab4=r.$TAG("DIV",{style:"width:100%;height:"+(r.contentHeight-40)+"px"}),p=plyCExe.enableJsDropZone(r.tagTab4,e=>{asui&&asui.CFG&&asui.CFG.showBlock&&asui.CFG.showBlock("googleBlockScreen","loading");var t=r.tagTab4;eduLib._addTableItem(a,t,t._liu_div,t._liu_input,t._liu_id,"js",e),setTimeout(()=>asui.CFG.hideBlock(),500)}),n&&(r.tagTabSp2=r.$TAG("div",{style:apn.CExe.CSS_SETUP_PANE+"height:"+(r.clientHeight-40-24)+"px"})),this.edtSetupLayout(a,r.tagTab1,e),eduLib.edtInputAdd(a,r.tagTab1,{type:"space"}),this.edtSetupScreenBG(a,r.tagTab1,e),eduLib.edtInputAdd(a,r.tagTab1,{type:"space"}),this.edtSetupScrollBar(a,r.tagTab1,e),this.edtSetupJs(a,r.tagTab4,e),eduLib.edtInputAdd(a,r.tagTab4,{type:"message",value:"※ "+apn.CExe.GL({ko:" PC파일을 드래그해 한번에 최대 5개 js파일을 추가할 수 있습니다.\n등록 js파일명이 중복될 경우 예상치 못한 오류가 발생할 수 있습니다.",en:"You can add up to 5 js files at once by dragging PC files."}),join:!0}),n&&(this.edtSetupJs2Import(a,r.tagTabSp2,e),eduLib.edtInputAdd(a,r.tagTabSp2,{type:"space"})),(void 0!==apn.CExe._uiLastSetupTab&&r.tagTab.$$(apn.CExe._uiLastSetupTab)?r.tagTab.$$(apn.CExe._uiLastSetupTab):r.tagTab.$$("tagTab1")).onclick(),r.tagTab.$$("tagBlank").style.width=r.clientWidth-r.tagTab.$$("tagBlank").offsetLeft-24+"px")},plyCExe.prototype.remoteConnect=function(e,t){return!!(ply.dv&&ply.dv.net&&ply.dv.net.remoteConnect)&&ply.dv.net.remoteConnect(e,t,this)},plyCExe.prototype.remoteDisconnect=function(){return this.setOnNetDataFn(null),!!(ply.dv&&ply.dv.net&&ply.dv.net.remoteDisconnect)&&ply.dv.net.remoteDisconnect(this)},plyCExe.prototype.remoteBroadcast=function(e,t){return!!(ply.dv&&ply.dv.net&&ply.dv.net.remoteBroadcast)&&ply.dv.net.remoteBroadcast(t,e,this)},plyCExe.prototype.remoteSendToServer=function(t){if(ply.dv&&ply.dv.contents&&ply.dv.contents.reportStudyResult)try{if("plyAnswer"==JSON.parse(t).type)return ply.dv.contents.reportStudyResult(sendMmsg.data,this)}catch(e){console.error("ERROR : remoteSendToServer JSON parse error",t)}return!1},plyCExe.prototype.remoteGetClientProfile=function(){var e=apn.loadTempFile("PLY_USER_INFO"),e=e?{id:e.id,name:e.display_name,photoURL:e.thumbnail}:ply.dv&&ply.dv.user&&ply.dv.user.TEST_profiles?{id:ply.dv.user.TEST_profiles[0].info.id,name:ply.dv.user.TEST_profiles[0].info.display_name,photoURL:ply.dv.user.TEST_profiles[0].info.thumbnail}:{id:"Student1",name:"Student Name",photoURL:"URL"};return e},plyCExe.prototype.remoteGetLoginClientList=function(){var e=[],t=apn.loadTempFile("PLY_COURSE_STUDENTLIST");if(t&&t.length)for(var a=0;a<t.length;a++)e.push({id:t[a].id,name:t[a].display_name,photoURL:t[a].thumbnail});else if(ply.dv&&ply.dv.user&&ply.dv.user.TEST_profiles)for(a=0;a<ply.dv.user.TEST_profiles.length;a++)e.push({id:ply.dv.user.TEST_profiles[a].info.id,name:ply.dv.user.TEST_profiles[a].info.display_name,photoURL:ply.dv.user.TEST_profiles[a].info.thumbnail});else e=[{id:"Student1",name:"Student Name",photoURL:"URL"},{id:"Student2",name:"Student Name2",photoURL:"URL2"}];return e},plyCExe.prototype.sbxLoad=function(){apn.CExe.prototype.sbxLoad.call(this);var e=this;void 0!==this.o.exeEmuLoginIndex&&(window.__exeEmuLoginIndex=window.__exeEmuLoginIndex||[],window.__exeEmuLoginIndex.push(""+this.o.exeEmuLoginIndex)),this._sbxFrame.addEventListener("load",function(){void 0===e.o.exeEmuLoginIndex&&window.__exeEmuLoginIndex&&(this.contentWindow.postMessage({op:"loadedFrame",from:"sbxFrame",data:window.__exeEmuLoginIndex},"*"),delete window.__exeEmuLoginIndex)}),this._sbxFrame.addEventListener("load",this._sbxFrame.onload),this._sbxFrame.onload=void 0,delete this._sbxFrame.onload};
window.ply = window.ply || {};

ply.MediaResolve = function(file, /*MediaID*/id, /*Boolean|undefined*/snapshot, /*Boolean|undefined*/standAlone)/*URL|''*/
{
	//%%INFO Video이고 Snapshot이 필요한 경우, Snapshot을 지원하지 않으므로 ''를 Return함
	if (snapshot && (apn.Project.getMediaType(file, id) == 'video'||apn.Project.getMediaType(file, id) == 'audio')) return '';

	function getExtMediaInfo(/*String*/url)
	{
		var info = {};

		info.isExt = url.substring(0,1) == 'X';
		if (info.isExt) {
			if (url.substring(1,2) == 'I') info.mediaType = 'image';
			else if (url.substring(1,2) == 'A') info.mediaType = 'audio';
			else if (url.substring(1,2) == 'V') info.mediaType = 'video';

			info.reserve = url.substring(2,4);
			info.assetSystem = url.substring(4,8);
			info.url = url.substring(8);
		}
		else {
			info.url = url;
		}
		return info;
	}

	function doResolve(info)
	{
		var sepKey = '';
		var sepUrl = '';
		var sepIdx = -1;

		switch (info.assetSystem) {
		case 'PLY0':
			sepIdx = info.url.indexOf('/Contents/');
			sepUrl = sepIdx != -1 ? info.url.substring(sepIdx + 1) : info.url;
			break;
		default:
			sepUrl = info.url;
		}

		if (info.isExt) return standAlone ? sepUrl : info.url;
		else return '';
	}

	return doResolve(getExtMediaInfo(id));
}

ply.TTS = function(/*Number*/pitch, /*Number*/speed, /*Number*/volume, /*String*/text)
{
	var baseUrl = location.protocol + "//tts.koreapolyschool.com/TTSMP3.mp3?ttsLanguage=1&ttsSpeakerid=4";

	baseUrl += '&ttsPitch=' + (isNaN(pitch) ? 100 : pitch);
	baseUrl += '&ttsSpeed=' + (isNaN(speed) ? 100 : speed);
	baseUrl += '&ttsVolume=' + (isNaN(volume) ? 300 : volume);
	baseUrl += '&ttsText=' + encodeURIComponent(text);

	return baseUrl;
}

window.ply = window.ply || {};

var newIOS = navigator.userAgent.toLowerCase().indexOf('ios new callback') != -1;

ply.dv = {};
//샘플 Resource 파일
ply.dv.sampleRes = {};
ply.dv.sampleRes.audio = '/DB/ply/apx/sample.ogg';
ply.dv.sampleRes.image = '';
ply.dv.sampleRes.video = '';

//Contents 관련 API
ply.dv.contents = {};

//User 관련 API
ply.dv.user = {};

//Audio 관련 API
ply.dv.audio = {};
//Audio 녹음 API
ply.dv.audio.record = {};
//음성 인식 API
ply.dv.audio.speechRecognition = {};

//디바이스 API가 사용가능 상태인지 체크한다.
ply.dv._isDeviceApiEnable = function()
{
	if(bx.HCL.DV.isAndroid() && window.poly) {
		return true;
	}
	else if (bx.HCL.DV.isIOS()) {
		return true;
	}
	else if (window.cefQuery) {
		return true;
	}
	return false;
}
// Audio tag를 사용할지 flash를 사용할지를 체크한다.
// true : flash, false : audio tag
ply.dv.isEnabled = function()
{
	if(bx.HCL.DV.isAndroid() || bx.HCL.DV.isIOS()) {
		return false;
	}
	else if(navigator.userAgent.indexOf('Chrome/39') > -1) {
        return true;
    }

	return false;
}

ply.dv._clearTestProfile = function(exeWnd)
{
	for (var i=0; i<ply.dv.user.TEST_profiles.length; i++) {
		// ply.dv.user.TEST_profiles[i].exeId = '';
	}
}


//User ID를 가져온다.
ply.dv.user.getUserId = function() {
	//TODO 임시값 추후 바꿔야함
//	return '1111111';
	var userInfo = apn.loadTempFile('PLY_USER_INFO');
	return userInfo && userInfo.memberCode ? userInfo.memberCode : '1111111';
}

//%%SCHONG 삭제
////Content ID를 가져온다.
//ply.dv.contents.getContentId = function() {
//	//TODO 추후 구현
//	return '1110';
//}

//Contents의 Answer를 저장한다.
ply.dv.contents.setAnswer = function(/*string*/prjId, /*string*/courseId, /*Object*/data) {
	return apn.saveTempFile('PLY_ANSWER_INFO_' + courseId + '_' + prjId, data);
}

//Contents의 Answer를 가져온다.
ply.dv.contents.getAnswer = function(/*string*/prjId, /*string*/courseId) {
	return apn.loadTempFile('PLY_ANSWER_INFO_' + courseId + '_' + prjId ) || '';
}

//현재 Contents의 Course의 순서를 가져온다.
ply.dv.contents.getCourseOrder = function(/*Object*/data) {
	//TODO 추후 구현
	return 1;
}

//현재 Course가 몇개의 Contents로 이루어져 있는지 가져온다.
ply.dv.contents.getCourseTotalCount = function(/*Object*/data) {
	//TODO 추후 구현
	return 5;
}

//Audio 녹음 시작(녹음 및 음성인식 공용)
ply.dv.audio._startAudioRecord = function(contentId, /*Object{type,sentence}*/data) {

	var userId = ply.dv.user.getUserId();

	if(ply.dv._isDeviceApiEnable()) {
		if(bx.HCL.DV.isAndroid()) {
			window.poly.callRecordStartClicked(userId, contentId, data.type, data.sentence);
		}
		else if(bx.HCL.DV.isIOS()) {
			// TODO :: iOS인 경우 sentence를 여러 문장으로 처리해 줘야 정상 작동 하므로 '; ;'를 sentence에 추가해 줌.
			// 추후 iOS App이 변경될 경우에는 다시 원래 대로 처리해 줘야 함.
			var param = "jscall://callback?function=callRecordStartClicked&user_id=" + userId + "&content_id=" + contentId + "&type=" + data.type + "&sentense=" + data.sentence + ';';

			if(newIOS) {
				webkit.messageHandlers.callbackHandler.postMessage(param);
			}
			else {
				window.location = param;
			}
		}
		else {
			window.cefQuery({
				request: "PolyMessage:start?user_id=" + userId + "&content_id=" + contentId + "&type=" + data.type + "&sentense=" + data.sentence
				, onSuccess: function(response) {

				}
				, onFailure: function(errorCode, errorMessage) {
					if(errorMessage === 'Check the microphone connection'){
						if(ply.dv.audio.speechRecognition._onIncorrect) {
							ply.dv.audio.speechRecognition._onIncorrect('MIC');
						}
					}
					console.error('Start Audio Record Error.', errorCode, errorMessage);
				}
			});
		}
	}
}

//Audio 녹음 및 재생 stop(녹음 및 음성인식 공용)
ply.dv.audio._stop = function(contentId) {
	var userId = ply.dv.user.getUserId();

	if(ply.dv._isDeviceApiEnable()) {
		if(bx.HCL.DV.isAndroid()) {
			window.poly.callStopRecordClicked(userId, contentId);
		}
		else if(bx.HCL.DV.isIOS()) {
			var param = "jscall://callback?function=callRecordStopClicked&user_id="+userId+"&content_id="+contentId;
			
			setTimeout(function(){
				if(newIOS) {
					webkit.messageHandlers.callbackHandler.postMessage(param);
				}
				else {
					window.location = param;
				}
			}, 700);
		}
		else {
			window.cefQuery({
			    request: "PolyMessage:stop?user_id="+userId + "&content_id="+contentId
			    , onSuccess: function(response) {

			    }
			    , onFailure: function(errorCode, errorMessage) {
			    	console.error('Stop Audio Record Error.', errorCode, errorMessage);
			    }
			});
		}
	}
}

//음성 인식 결과를 Parsing 한다.
ply.dv.audio.speechRecognition._parseResult = function(/*String*/result) {

	var resJson = JSON.parse(result.replace(/=/gi, ':'));
	var correctWord = '';

	for(var i=1; i<=resJson.count; i++) {

		if(i > 1)
			correctWord += ' ';

		correctWord += resJson[i].word;
	}

	return {msg:resJson, correct:correctWord, score:resJson.total};
}

//Audio 녹음을 시작한다.
ply.dv.audio.record.start = function(contentId) {

	if(ply.dv._isDeviceApiEnable()) {

		var data = {
			type:'5m'
			, sentense:''
		};

		ply.dv.audio._startAudioRecord(contentId, data);
	}
}

//Audio 녹음 및 재생을 stop한다.
ply.dv.audio.record.stop = function(contentId,/*Function(url)*/onSubmit) {
	ply.dv.audio._stop(contentId);

	if(onSubmit) {
		var userId = ply.dv.user.getUserId();

		if(ply.dv._isDeviceApiEnable()) {

			ply.dv.audio.record._onSubmit = onSubmit;

			if(bx.HCL.DV.isAndroid()) {
				window.poly.callRecordSubmitClicked(userId, contentId);
			}
			else if(bx.HCL.DV.isIOS()) {
				var param = "jscall://callback?function=callRecordSubmitClicked&user_id="+userId+"&content_id="+contentId;
				
				if(newIOS) {
					webkit.messageHandlers.callbackHandler.postMessage(param);
				}
				else {
					window.location = param;
				}
			}
			else {
	    		window.cefQuery({
					request: "PolyMessage:submit?user_id="+userId + "&content_id="+contentId
				    , onSuccess: function(response) {

				    }
				    , onFailure: function(errorCode, errorMessage) {
				    	console.error('Submit Recorded Audio Error.', errorCode, errorMessage);
				    }
				});
			}
		}
		else {
			if(onSubmit)
				onSubmit(ply.dv.sampleRes.audio);
		}
	}
}

//재생중인 녹음된 Audio를 pause한다.
//ply.dv.audio.record.pause = function() {
//
//	var userId = ply.dv.user.getUserId();
//	var contentId = ply.dv.contents.getContentId();
//
//	if(ply.dv._isDeviceApiEnable()) {
//		if(bx.HCL.DV.isAndroid()) {
//			window.poly.callRecordPauseClicked(userId, contentId);
//		}
//		else if(bx.HCL.DV.isIOS()) {
//			window.location = "jscall://callback?function=callRecordPauseClicked&user_id="+userId+"&content_id="+contentId;
//		}
//		else {
//			window.cefQuery({
//				request: "PolyMessage:pause?user_id="+userId + "&content_id="+contentId
//			    , onSuccess: function(response) {
//
//			    }
//			    , onFailure: function(errorCode, errorMessage) {
//			    	console.error('Pause Audio Record Error.', errorCode, errorMessage);
//			    }
//			});
//		}
//	}
//}

//녹음된 Audio를 play한다.
ply.dv.audio.record.play = function(contentId) {

	var userId = ply.dv.user.getUserId();

	if(ply.dv._isDeviceApiEnable()) {
		if(bx.HCL.DV.isAndroid()) {
			window.poly.callRecordPlaybackClicked(userId, contentId);
		}
		else if(bx.HCL.DV.isIOS()) {
			var param = "jscall://callback?function=callRecordPalybackClicked&user_id="+userId+"&content_id="+contentId;

			if(newIOS) {
				webkit.messageHandlers.callbackHandler.postMessage(param);
			}
			else {
				window.location = param;
			}
		}
		else {
			window.cefQuery({
				request: "PolyMessage:playback?user_id="+userId + "&content_id="+contentId
			    , onSuccess: function(response) {
			    }
			    , onFailure: function(errorCode, errorMessage) {
			    	console.error('Play Recorded Audio Error.', errorCode, errorMessage);
			    }
			});
		}
	}
	else {
		//Viewer 환경이 아닌 경우에는 샘플 Audio 파일을 Play한다.
		var audioTag = $TAG('AUDIO');
		var srcTag = audioTag.$TAG('SOURCE');
		srcTag.src = ply.dv.sampleRes.audio;
		audioTag.onended = function() {audioTag.remove(); audioTag = undefined};
		audioTag.play();
	}
}

//녹음된 Audio를 submit한다.
//ply.dv.audio.record.submit = function(/*Function(msg)*/onSubmit) {
//
//	var userId = ply.dv.user.getUserId();
//	var contentId = ply.dv.contents.getContentId();
//
//	if(ply.dv._isDeviceApiEnable()) {
//
//		ply.dv.audio.record._onSubmit = onSubmit;
//
//		if(bx.HCL.DV.isAndroid()) {
//			window.poly.callRecordSubmitClicked(userId, contentId);
//		}
//		else if(bx.HCL.DV.isIOS()) {
//			window.location = "jscall://callback?function=callRecordSubmitClicked&user_id="+userId+"&content_id="+contentId;
//		}
//		else {
//    		window.cefQuery({
//				request: "PolyMessage:submit?user_id="+userId + "&content_id="+contentId
//			    , onSuccess: function(response) {
//
//			    }
//			    , onFailure: function(errorCode, errorMessage) {
//			    	console.error('Submit Recorded Audio Error.', errorCode, errorMessage);
//			    }
//			});
//		}
//	}
//	else {
//		if(onSubmit)
//			onSubmit(ply.dv.sampleRes.audio);
//	}
//}

//단어 음성 인식을 시작한다.
ply.dv.audio.speechRecognition.startWord = function(contentId, /*Object{sentence[]}*/data
												, /*Function(correct,score)*/onCorrect, /*Function(msg)*/onIncorrect
												, /*Function(msg)*/onTimeOver, /*Function(progress)*/onProgress
												, /*Function(url)*/onSetUrl) {

	if(!data || !Array.isArray(data.sentence)) {
		return false;
	}

	if(ply.dv._isDeviceApiEnable()) {
		data.type = 'word';

		var sentence = '';

		for(var i in data.sentence) {

			if(i > 0)
				sentence += ';';

			sentence += data.sentence[i];
		}

		data.sentence = sentence;

		ply.dv.audio.speechRecognition._onCorrect = onCorrect;
		ply.dv.audio.speechRecognition._onIncorrect = onIncorrect;
		ply.dv.audio.speechRecognition._onTimeOver = onTimeOver;
		ply.dv.audio.speechRecognition._onProgress = onProgress;
		ply.dv.audio.speechRecognition._onSetUrl = onSetUrl;

		ply.dv.audio._startAudioRecord(contentId, data);
	}
	else {
		if(onCorrect) {
			setTimeout(function() {
				var msg = '{"count"=3,"1"={"word"="I","score"=63, "phone"={"A"=63}},"2"={"word"="love","score"=45, "phone"={"l"=45,"^"=45,"v"=45}},"3"={"word"="you","score"=68, "phone"={"y"=72,"U"=64}},"total"=55}';
				var res = ply.dv.audio.speechRecognition._parseResult(msg);
				onCorrect(res.correct, res.score, res.msg);
				onSetUrl(ply.dv.sampleRes.audio, 'code-test');
			}, 2000);
		}
	}

	return true;
}

//문장 음성 인식을 시작한다.(단어의 경우에는 data.sentence의 Array의 순서대로 음성 인식을 시작한다.)
ply.dv.audio.speechRecognition.startSentence = function(contentId, /*Object{sentence[]}*/data
													, /*Function(correct,score)*/onCorrect, /*Function(msg)*/onIncorrect
													, /*Function(msg)*/onTimeOver, /*Function(progress)*/onProgress
													, /*Function(url)*/onSetUrl) {

	if(!data || !Array.isArray(data.sentence)) {
		return false;
	}

	if(ply.dv._isDeviceApiEnable()) {
		data.type = 'sentense';

		var sentence = '';

		for(var i in data.sentence) {

			if(i > 0)
				sentence += ';';

			sentence += data.sentence[i];
		}

		data.sentence = sentence;

		ply.dv.audio.speechRecognition._onCorrect = onCorrect;
		ply.dv.audio.speechRecognition._onIncorrect = onIncorrect;
		ply.dv.audio.speechRecognition._onTimeOver = onTimeOver;
		ply.dv.audio.speechRecognition._onProgress = onProgress;
		ply.dv.audio.speechRecognition._onSetUrl = onSetUrl;

		ply.dv.audio._startAudioRecord(contentId, data);
	}
	else {
		if(onCorrect) {
			setTimeout(function() {
				var msg = '{"count"=3,"1"={"word"="I","score"=63, "phone"={"A"=63}},"2"={"word"="love","score"=45, "phone"={"l"=45,"^"=45,"v"=45}},"3"={"word"="you","score"=68, "phone"={"y"=72,"U"=64}},"total"=55}';
				var res = ply.dv.audio.speechRecognition._parseResult(msg);
				onCorrect(res.correct, res.score, res.msg);
				onSetUrl(ply.dv.sampleRes.audio, 'code-test');
			}, 2000);
		}
	}

	return true;
}

//음성 인식을 stop한다.
ply.dv.audio.speechRecognition.stop = function(contentId, onSubmit) {
	ply.dv.audio._stop(contentId);
}

//음성 프로필을 셋팅한다.
ply.dv.audio.speechRecognition.setProfile = function(/*String*/country, /*String*/who) {

	if(!country || !who) {
		return false;
	}

	if(ply.dv._isDeviceApiEnable()) {
		if(bx.HCL.DV.isAndroid()) {
			window.poly.callChangeProfile(country, who);
		}
		else if(bx.HCL.DV.isIOS()) {
			var param = "jscall://callback?function=callChangeProfile&country="+country + "&who="+who;
			
			if(newIOS) {
				webkit.messageHandlers.callbackHandler.postMessage(param);
			}
			else {
				window.location = param;
			}
		}
		else {
			window.cefQuery({
				request: "PolyMessage:change_profile?country="+country + "&who="+who
			    , onSuccess: function(response) {

			    }
			    , onFailure: function(errorCode, errorMessage) {
			    	console.error('Set Speech Recognition Profile Error.', errorCode, errorMessage);
			    }
			});
		}
	}
	else {
//		console.error('audio.speechRecognition.setProfile', country, who);
		//동작 없음
	}

	return true;
}

//음성 Level을 셋팅한다.
ply.dv.audio.speechRecognition.setLevel = function(/*String*/level) {

	if(!level) {
		return false;
	}

	if(ply.dv._isDeviceApiEnable()) {
		if(bx.HCL.DV.isAndroid()) {
			window.poly.callChangeLevel(level);
		}
		else if(bx.HCL.DV.isIOS()) {
			var param = "jscall://callback?function=callChangeLevel&level="+level;
			
			if(newIOS) {
				webkit.messageHandlers.callbackHandler.postMessage(param);
			}
			else {
				window.location = param;
			}
		}
		else {
			window.cefQuery({
				request: "PolyMessage:change_level?level="+level
			    , onSuccess: function(response) {

			    }
			    , onFailure: function(errorCode, errorMessage) {
			    	console.error('Set Speech Recognition Level Error.', errorCode, errorMessage);
			    }
			});
		}
	}
	else {
//		console.error('audio.speechRecognition.setLevel', level);
		//동작 없음
	}

	return true;
}

/*%%INFO
	[주의]
	아래는 POLY에 의해서 모두 Global로 지정된 Callback임.
	다른 모듈이 이것을 Override하면
	오동작할 수 있는 가능성을 가지는 구조이지만,
	이미 이렇게 개발이 되어 있으므로 그대로 사용함
*/

//녹음 State Callback
function RecordState5M_callback(userId, contentId, msg, w, l) {

}

//녹음 완료 Callback
function MicWizard_Message_callback(userId, contentId, msg) {

}

//Upload Callback
function Upload_callback(userId, contentId, msg, w, l) {

	var formData = new FormData();
	formData.append('b64', msg);
	formData.append('uid', userId);
	formData.append('cid', contentId);
	formData.append('fileName', userId+'_'+contentId+'_'+new Date().getTime());
	formData.append('systemCode', 'EP');
	formData.append('memberCode', userId);

	var courseParam = apn.loadTempFile('PLY_COURSE_PARAM');
	if (courseParam) {
		if (courseParam.learningYearCode) formData.append('learningYearCode', courseParam.learningYearCode);
		if (courseParam.termGbn) formData.append('termGbn', courseParam.termGbn);
		if (courseParam.lcmsPrdId) formData.append('lcmsPrdId', courseParam.lcmsPrdId);
		if (courseParam.currCode) formData.append('currCode', courseParam.currCode);
		if (courseParam.activityCode) formData.append('activityCode', courseParam.activityCode);
	}

	var httpRequest = new XMLHttpRequest();
	httpRequest.onreadystatechange = function() {
		if(httpRequest.readyState === 4) {
			if(httpRequest.status === 200) {
				var url, code, resJson;
				try {
					resJson = JSON.parse(httpRequest.responseText);
					if(resJson) {
						resJson.data = JSON.parse(resJson.data);
						url = resJson.data.fileUrl;
						code = resJson.data.attachFileCode;
					}
					else {
						console.error('Fail to upload recorded Audio File. Server error.');
					}
				}
				catch(e){
					console.error('Fail to upload recorded Audio File. Parse JSON error.');
				}

				if(url && ply.dv.audio.record._onSubmit) {
					ply.dv.audio.record._onSubmit(url);
				}

				if(url && ply.dv.audio.speechRecognition._onSetUrl) {
					ply.dv.audio.speechRecognition._onSetUrl(url, code);
				}
			} else {
				console.error('Fail to upload recorded Audio File.');
			}
		}
	};

	var apiBaseUrl = location.protocol + '://devwww.icreate.kr';
	
	if(location.host == 'www.icreate.kr') {
		apiBaseUrl = location.protocol + '://www.icreate.kr';
		httpRequest.open("POST", apiBaseUrl + "/tlesif/authoringTool/api/audioFileUpload.json", true);
	}
	else if(location.host == 'lcmsapi.koreapolyschool.com' || location.host == 'file.koreapolyschool.com') {
		httpRequest.open("POST", "https://www.icreate.kr/tlesif/authoringTool/api/audioFileUpload.json", true);
	}
	else {
		httpRequest.open("POST", apiBaseUrl + "/tlesif/authoringTool/api/audioFileUpload.json", true);
	}
	
    httpRequest.send(formData);

//	if(ply.dv.audio.record._onSubmit) {
//		ply.dv.audio.record._onSubmit(msg);
//	}

//	if(!ply.dv.audio.record._iframeTag) {
//		ply.dv.audio.record._iframeTag = document.createElement('iframe');
//		ply.dv.audio.record._iframeTag.id = 'uploadIframe';
//		ply.dv.audio.record._iframeTag.name = 'uploadIframe';
//		ply.dv.audio.record._iframeTag.width = '0';
//		ply.dv.audio.record._iframeTag.height = '0';
//		ply.dv.audio.record._iframeTag.style.display = 'none';
//		document.body.appendChild(ply.dv.audio.record._iframeTag);
//	}
//
//	var formTag = $TAG('FORM');
//	formTag.action = 'http://125.60.70.53/front/talkAboutIt/MicUpload.jsp';
//	formTag.method = 'POST';
//	formTag.target = 'uploadIframe';
//
//	var valTag = formTag.$TAG('INPUT');
//	valTag.name = 'b64';
//	valTag.type = 'hidden';
//	valTag.value = msg;
//
//	var uidTag = formTag.$TAG('INPUT');
//	uidTag.name = 'uid';
//	uidTag.type = 'hidden';
//	uidTag.value = userId;
//
//	var cidTag = formTag.$TAG('INPUT');
//	cidTag.name = 'cid';
//	cidTag.type = 'hidden';
//	cidTag.value = contentId;
//
//	var fileNameTag = formTag.$TAG('INPUT');
//	fileNameTag.name = 'fileName';
//	fileNameTag.type = 'hidden';
//	fileNameTag.value = userId+'_'+contentId;
//
//	formTag.submit();
}

//음성 인식 정답 Callback
function RecordEnd_callback(userId, contentId, msg, w, l) {

	if(ply.dv.audio.speechRecognition._onCorrect) {
		var resultData = ply.dv.audio.speechRecognition._parseResult(msg);
		ply.dv.audio.speechRecognition._onCorrect(resultData.correct, resultData.score, resultData.msg);

		if(ply.dv.audio.speechRecognition._onSetUrl) {

			if(ply.dv._isDeviceApiEnable()) {

				if(bx.HCL.DV.isAndroid()) {
					window.poly.callRecordSubmitClicked(userId, contentId);
				}
				else if(bx.HCL.DV.isIOS()) {
					var param ="jscall://callback?function=callRecordSubmitClicked&user_id="+userId+"&content_id="+contentId;
					
					if(newIOS) {
						webkit.messageHandlers.callbackHandler.postMessage(param);
					}
					else {
						window.location = param;
					}
				}
				else {
		    		window.cefQuery({
						request: "PolyMessage:submit?user_id="+userId + "&content_id="+contentId
					    , onSuccess: function(response) {

					    }
					    , onFailure: function(errorCode, errorMessage) {
					    	console.error('Submit Recorded Audio Error.', errorCode, errorMessage);
					    }
					});
				}
			}
			else {
				if(ply.dv.audio.speechRecognition._onSetUrl)
					ply.dv.audio.speechRecognition._onSetUrl(ply.dv.sampleRes.audio);
			}
		}
	}
}

//음성 인식 시작 Callback
function RecordStart_callback(userId, contentId, msg, w, l) {
}

//음성 인식 완료 Callback
function RecordStop_callback(userId, contentId, msg, w, l) {
}

//주변에 잡음이 많을 때 Callback
function RecordSNR_callback(userId, contentId, msg, w, l) {
}

//음성 인식 오답 Callback
function RecordReject_callback(userId, contentId, msg, w, l) {

	if(ply.dv.audio.speechRecognition._onIncorrect) {
		ply.dv.audio.speechRecognition._onIncorrect(msg);
	}
}

//음성 인식 시간제한 Callback
function RecordTimeLimit_callback(userId, contentId, msg, w, l) {

	if(ply.dv.audio.speechRecognition._onTimeOver) {
		ply.dv.audio.speechRecognition._onTimeOver(msg);
	}
}

//음성 인식 파형 Callback
function RecordRecordingBuffer_callback(userId, contentId, iprogress100) {

	if(ply.dv.audio.speechRecognition._onProgress) {
		ply.dv.audio.speechRecognition._onProgress(iprogress100);
	}
}


/******************************************************
// 2-view device api 정의
*******************************************************/
ply.dv.runDeviceApi = function(data, exeWnd)
{
	var op = data && data.op;
	var param = data && data.data;

	ply.dv.apiExeWndId = exeWnd.tagId;

	switch (op) {
	case 'contentInitAllOp':
		// 컨텐츠의 Category Type(New e-POLY, Old e-POLY, Step-Up e-POLY) 컨텐츠에서
		// Pepper Reading용 API(OP)를 사용할 수 있도록 처리
		if (!ply.dv._is2VRunMode()) {
			// device 2view api run mode가 아닌 경우에만 contentInit 함수를 호출해서
			// 전체 api를 사용할 수 있도록 처리해 준다. preview 모드가 아닌 경우에는 runMode
			// 를 true로 강제 변경해 준다.
			plyCExe.isRunMode = !exeWnd.o.exePreview;
			ply.dv.contents.contentInit(param, 'contentInit');
		}
		break;
	case 'reportStudyResult':
		// 'netReportAnswer' API 처리 방식과 동일하게 data를 변경해 준다.
		var apx = exeWnd.getCurApx();
		var plyAnswer = {id:apx.screen.UI.title, client:apx.netId(), report:{}};
		bx.$cloneObject(plyAnswer.report, param);

		ply.dv.contents[op](plyAnswer);
		break;
	case 'contentInit':
	case 'notifyPageChanged':
	case 'saveContentProgress':
	case 'loadContentProgress':
	case 'createIndicator':
	case 'deleteIndicator':
	case 'setIndicatorActiveIndex':
	case 'showTeachingTool':
	case 'hideTeachingTool':
	case 'showContentTool':
	case 'hideContentTool':
	case 'moveNextContent':
	case 'movePrevContent':
	case 'saveStudentLessonResult':
	case 'saveStudentLessonResultSeq':
	case 'showQuestionSaveResult':
	case 'makeHTMLFile':
	case 'makeHTMLFileList':
	case 'getContentInfo':
	case 'saveActivityQuizDetail':
	case 'saveActivityFileAsset':
	case 'saveActivityCompStatus':
	case 'moveActivityMenu':
	case 'closeContent':
		ply.dv.contents[op](param, op, exeWnd);
		break;
	// Device 관련
	case 'captureScreen':
	case 'captureFullScreen':
	case 'getDeviceOrientation':
	case 'setVisibleLauncherMenu':
	case 'notifyNavigationVisibleState':
	case 'sttChangeProfile':
	case 'sttChangeLevel':
	case 'sttChangeTimeLimit':
	case 'sttStartRecognition':
	case 'sttStopRecognition':
	case 'startChromaActivity':
	case 'startFaceCAMActivity':
	case 'startAccelerometerEvent':
	case 'stopAccelerometerEvent':
	case 'getDevicePlatform':
		ply.dv.device[op](param, op, exeWnd);
		break;
	// Network mode api
	case 'broadcastDataToStudents':
	case 'sendDataToTeacher':
	case 'sendDataToStudent':
		exeWnd.remoteBroadcast(param !== undefined ? JSON.stringify(param) : param, op);
		break;
	case 'getMyProfile':
	case 'getLoginStudentsProfile':
	case 'getStudentLessonResultSeq':
	case 'getAllStudentsProfile':
		ply.dv.user[op](param, op, exeWnd);
		break;
	case 'startCamera':
	case 'stopCamera':
	case 'switchCamera':
	case 'takePicture':
	case 'startFloatingCamera':
		ply.dv.camera[op](param, op);
		break;
	case 'startVideoRecord':
	case 'stopVideoRecord':
		ply.dv.video[op.indexOf('start') != -1 ? 'start' : 'stop'](param, op);
		break;
	case 'startFullScreenVideoRecord':
	case 'stopFullScreenVideoRecord':
		ply.dv.video[op.indexOf('start') != -1 ? 'startFull' : 'stopFull'](param, op);
		break;
	case 'startVoiceRecord':
	case 'stopVoiceRecord':
		ply.dv.recorder[op.indexOf('start') != -1 ? 'start' : 'stop'](param, op);
		break;
	case 'getServerHost':
	case 'uploadFileToServer':
	case 'uploadImageToServer':
		ply.dv[op](param, op);
		break;
	case 'startDecibelCheck':
	case 'stopDecibelCheck':
		ply.dv.audioDecibel[op.indexOf('start') != -1 ? 'start' : 'stop'](param, op, exeWnd);
		break;
	default:
		// console.warn('WARNING - ['+ op +'] Not defined device api.');
		// poly에서는 enable, disable 체크하지 않고 postMessage로 전달한다.
		if(ply.dv._is2VRunMode()) {
			if(ply.dv._is2VEnable()) {
				plyCExe.send(op, param);
			}
			else {
				// ply.dv._isNotReady(op);
				plyCExe.send(op, param);
			}
		}
		else {
			// 기 정의되어 있지 않은 op의 경우 preview 모드에서는 정상 작동 하지 않음.
			// console.warn('WARNING - ['+ op +'] There is no response for not defined api on prview mode.', param);
			plyCExe.send(op, param);
		}
	}
}

// FOR TEST...
ply.dv.sendToExeForTest = function(data, exeWndId)
{
	if (data.op == 'notifyContentInitFinish') {
		window.postMessage({op:'notifyContentInitFinish', from:'course'}, '*');
	}
	else {
		window.postMessage({op:'TEST_deviceApiRes', from:'course', data:data, TEST_exeId:exeWndId || ply.dv.apiExeWndId}, '*');
	}
}

ply.dv.getServerHost = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('getServerHost');
		}
		else {
			ply.dv._isNotReady('getServerHost');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyServerHost', data:{host:'http://testServerHost'}});
	}
}

ply.dv.uploadFileToServer = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('uploadFileToServer', param);
		}
		else {
			ply.dv._isNotReady('uploadFileToServer');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyUploadToServerResult', data:{result:'success', uri:'/uploaedFilePath', url:'http://uploadFileUrl'}});
	}

}

ply.dv.uploadImageToServer = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('uploadImageToServer', param);
		}
		else {
			ply.dv._isNotReady('uploadImageToServer');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyUploadToServerResult', data:{result:'success', uri:'/uploaedFilePath', url:'http://uploadFileUrl'}});
	}
}

//deviceApi가 사용 가능한지 여부
ply.dv._is2VRunMode = function()
{
	return plyCExe.isRunMode;
}

ply.dv._is2VEnable = function()
{
	return plyCExe.deviceReady;
}

ply.dv._isNotReady = function(runOp)
{
	console.error('WARN - Device is not ready to use!!!');
	ply.dv.sendToExeForTest({op:'DeviceIsNotReady', data:runOp});
}

//디바이스 관련 API
ply.dv.camera = {};
ply.dv.recorder = {};
ply.dv.video = {};
ply.dv.audioDecibel = {};

/*	Camera ON
	onEnd(Boolean)
	opts(o):{
		area(o):{x:, y:, w:, h:}
	}
*/
ply.dv.camera.startCamera = function()
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('startCamera');
		}
		else {
			ply.dv._isNotReady('startCamera');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStartCameraResult', data:{result:'success'}});
	}
}

ply.dv.camera.startFloatingCamera = function(param, op)
{
	var timer = param && param.timer || 0;
	if (timer) delete param.timer;

	var run = function() {
		if(ply.dv._is2VRunMode()) {
			if(ply.dv._is2VEnable()) {
				plyCExe.send('startFloatingCamera', param);
			}
			else {
				ply.dv._isNotReady('startFloatingCamera');
			}
		}
		else {
			// on 되었다는 가정하에 전달
			ply.dv.sendToExeForTest({op:'notifyStartFloatingCameraResult', data:{result:'success'}});
		}
	};

	timer > 0 ? setTimeout(run, timer) : run();
}

//Camera OFF
ply.dv.camera.stopCamera = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('stopCamera');
		}
		else {
			ply.dv._isNotReady('stopCamera');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStopCameraResult', data:{result:'success'}});
	}
}

// 카메라를 변경한다.
ply.dv.camera.switchCamera = function()
{
	// poly에서는 enable, disable 체크하지 않고 postMessage로 전달한다.
	if(ply.dv._is2VEnable()) {
		plyCExe.send('switchCamera');
	}
	else {
		ply.dv.sendToExeForTest({op:'notifySwitchCameraResult', data:{result:'success'}});

	}
}

/*	사진을 촬영한다.
	param(o):{top:, left:, width:, height:, timer:}
*/
ply.dv.camera.takePicture = function(param, op)
{
	var timer = param && param.timer || 0;
	if (timer) delete param.timer;

	var run = function() {
		if(ply.dv._is2VRunMode()) {
			if(ply.dv._is2VEnable()) {
				plyCExe.send('takePicture', param);
			}
			else {
				ply.dv._isNotReady('takePicture');
			}
		}
		else {
			// on 되었다는 가정하에 전달
			ply.dv.sendToExeForTest({op:'notifyTakePictureResult', data:{result:'success', url:'image_url', src:'data:image/png;base64,' + ply.dv.sampleRes.image}});
		}
	};

	timer > 0 ? setTimeout(run, timer) : run();
};

// Video 촬영한다
ply.dv.video.start = function(param, op)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send(op);
		}
		else {
			ply.dv._isNotReady(op);
		}
	}
	else {
		// start 되었다는 가정하에 전달
		var testResOp = 'notifyS' + op.substring(1) + 'Result';
		ply.dv.sendToExeForTest({op:testResOp, data:{result:'success'}});
	}
}

// Video 촬영을 종료한다.
ply.dv.video.stop = function(param, op)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send(op);
		}
		else {
			ply.dv._isNotReady(op);
		}
	}
	else {
		// stop시에 테스트 용으로 비디오 촬영 결과를 넘겨준다.
		var testResOp = 'notifyVideoRecordResult';
		ply.dv.sendToExeForTest({op:testResOp, data:{result:'success', url:'data:video/webm;base64,' + ply.dv.sampleRes.video}});
	}
}

ply.dv.video.startFull = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('startFullScreenVideoRecord');
		}
		else {
			ply.dv._isNotReady('startFullScreenVideoRecord');
		}
	}
	else {
		// start 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStartFullScreenVideoRecordResult', data:{result:'success'}});
	}
}

// Video 촬영을 종료한다.
ply.dv.video.stopFull = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('stopFullScreenVideoRecord');
		}
		else {
			ply.dv._isNotReady('stopFullScreenVideoRecord');
		}
	}
	else {
		// stop시에 테스트 용으로 비디오 촬영 결과를 넘겨준다.
		ply.dv.sendToExeForTest({op:'notifyFullScreenVideoRecordResult', data:{result:'success', url:'data:video/webm;base64,' + ply.dv.sampleRes.video}});
	}
}


//음성을 녹음한다.
ply.dv.recorder.start = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('startVoiceRecord');
		}
		else {
			ply.dv._isNotReady('startVoiceRecord');
		}
	}
	else {
		// start 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStartVoiceRecord', data:{result:'success'}});
	}
};

//음성 녹음을 종료한다.
ply.dv.recorder.stop = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('stopVoiceRecord');
		}
		else {
			ply.dv._isNotReady('stopVoiceRecord');
		}
	}
	else {
		// stop시에 테스트 용으로 비디오 촬영 결과를 넘겨준다.
		ply.dv.sendToExeForTest({op:'notifyVoiceRecordResult', data:{result:'success', url:ply.dv.sampleRes.audio}});
	}
};

ply.dv.audioDecibel.start = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('startDecibelCheck');
		}
		else {
			ply.dv._isNotReady('startDecibelCheck');
		}
	}
	else {
		// start 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStartDecibelCheck', data:{result:'success'}});
		// 1초에 한 번씩 강제로 notifyDecibel 이벤트를 stopDecibelCheck 메세지가 올때까지 보낸다.
		var notiTime = 1000;
		var maxNotiCnt = 10;
		var notiId = exeWnd.tagId;

		function _clear(id)
		{
			if (ply.dv.audioDecibel[id]) {
				for (var k in ply.dv.audioDecibel[id]) {
					delete ply.dv.audioDecibel[id][k];
				}
				ply.dv.audioDecibel[id] = null;
			}
		}
		_clear(notiId);

		ply.dv.audioDecibel[notiId] = {};
		ply.dv.audioDecibel[notiId].notiValue = 30;
		ply.dv.audioDecibel[notiId].maxNotiCnt = 10;
		ply.dv.audioDecibel[notiId].notiCount = 0;

		ply.dv.audioDecibel[notiId].sendDecibel = function()
		{
			setTimeout(function() {
				var canRun = ply.dv.audioDecibel[notiId].run;
				var notiValue = ply.dv.audioDecibel[notiId].notiValue;
				var notiCount = ply.dv.audioDecibel[notiId].notiCount;

				if (canRun && notiCount < maxNotiCnt) {
					notiValue = 30 + (notiCount % 3 * 30);
					ply.dv.sendToExeForTest({op:'notifyDecibel', data:{val:notiValue}}, notiId);
					ply.dv.audioDecibel[notiId].notiCount += 1;
					ply.dv.audioDecibel[notiId].notiValue = notiValue;
					ply.dv.audioDecibel[notiId].sendDecibel();
				}
				else {
					_clear(notiId);
				}
			}, notiTime);
		}

		ply.dv.audioDecibel[notiId].run = true;
		ply.dv.audioDecibel[notiId].sendDecibel();
	}
}

ply.dv.audioDecibel.stop = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('stopDecibelCheck');
		}
		else {
			ply.dv._isNotReady('stopDecibelCheck');
		}
	}
	else {
		// decibel send를 중지한다.
		ply.dv.audioDecibel[exeWnd.tagId].run = false;
		ply.dv.sendToExeForTest({op:'notifyStopDecibelCheck', data:{result:'success'}});
	}
}

ply.dv.user.TEST_profiles =[
	{info:{id:'student1', display_name:'Tony Stark', thumbnail:'https://www.icreate.kr/DB/ply/apx/sample_p1.jpg'}, exeId:''},
	{info:{id:'student2', display_name:'Brus Banner', thumbnail:'https://www.icreate.kr/DB/ply/apx/sample_p2.jpg'}, exeId:''},
	{info:{id:'student3', display_name:'Natasha Alianovna Romanova', thumbnail:'https://www.icreate.kr/DB/ply/apx/sample_p3.jpg'}, exeId:''}
];

ply.dv.user.getMyProfile = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('getMyProfile');
		}
		else {
			ply.dv._isNotReady('getMyProfile');
		}
	}
	else {
		var foundId = false;
		var noUsedProfile = null;
		var retUserProfile = null;

		if (bx.$getParamFromURL(location.href, 'APXEMUUSER')){
			foundId = bx.$checkNaN(parseInt(bx.$getParamFromURL(location.href, 'APXEMUUSER')));
			foundId = foundId % ply.dv.user.TEST_profiles.length;
			ply.dv.user.TEST_profiles[foundId].exeId = foundId;
			retUserProfile = ply.dv.user.TEST_profiles[foundId].info;
		}
		else {
			for (var i=0; i<ply.dv.user.TEST_profiles.length; i++) {
				if (!noUsedProfile && !ply.dv.user.TEST_profiles[i].exeId) {
					noUsedProfile = ply.dv.user.TEST_profiles[i];
				}
				if (ply.dv.user.TEST_profiles[i].exeId == exeWnd.tagId) {
					retUserProfile = ply.dv.user.TEST_profiles[i].info;
					foundId = true;
				}
			}

			if (!foundId) {
				noUsedProfile.exeId = exeWnd.tagId;
				retUserProfile = noUsedProfile.info;
			}
		}

		ply.dv.sendToExeForTest({op:'notifyMyProfileResult', data:retUserProfile});
	}
}

ply.dv.user.getLoginStudentsProfile = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('getLoginStudentsProfile');
		}
		else {
			ply.dv._isNotReady('getLoginStudentsProfile');
		}
	}
	else {
		/**
		 * Script v2에서는 각 학생 화면이 별도의 iFrame으로 구성되어 있는 관계로 각각의 ID를 postMessage로 받아서 __exeEmuLoginIndex 변수에 임시 저장한다.
		 * (run_prv.html 파일에서 저장하는 부분이 있음)
		 * __exeEmuLoginIndex 값이 있는 경우 Test 프로필의 exeId에 직접 셋팅하도록 한다.
		 * */
		if(window.__exeEmuLoginIndex && window.__exeEmuLoginIndex.length) {
			
			for(var i=0; i<window.__exeEmuLoginIndex.length; i++) {
				if(ply.dv.user.TEST_profiles[i]) {
					ply.dv.user.TEST_profiles[i].exeId = window.__exeEmuLoginIndex[i];
				}
			}
			
			//임시 변수는 삭제함
			delete window.__exeEmuLoginIndex;
		}
		
		var retUsersProfile = [];
		for (var i=0; i<ply.dv.user.TEST_profiles.length; i++) {
			if (ply.dv.user.TEST_profiles[i].exeId) {
				retUsersProfile.push(ply.dv.user.TEST_profiles[i].info);
			}
		}
		ply.dv.sendToExeForTest({op:'notifyLoginStudentsProfileResult', data:retUsersProfile});
	}
}

ply.dv.user.getAllStudentsProfile = function()
{
	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			plyCExe.send('getAllStudentsProfile');
		}
		else {
			ply.dv._isNotReady('getAllStudentsProfile');
		}
	}
	else {
		var retUsersProfile = [];

		for(var i=0; i<ply.dv.user.TEST_profiles.length; i++) {
			retUsersProfile.push({
				id : ply.dv.user.TEST_profiles[i].info.id
				, display_name : ply.dv.user.TEST_profiles[i].info.display_name
				, thumbnail : ply.dv.user.TEST_profiles[i].info.thumbnail
				, state : 'login'
			});
		}

		ply.dv.sendToExeForTest({op:'notifyAllStudentsProfileResult', data:retUsersProfile});
	}
}

ply.dv.user.getStudentLessonResultSeq = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('getStudentLessonResultSeq', param);
		}
		else {
			ply.dv._isNotReady('getStudentLessonResultSeq');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyStudentLessonResultSeq', data: []});
	}
}

ply.dv.contents.contentInit = function(param, op)
{
	if(ply.dv._is2VRunMode()) {
		plyCExe.send('contentInit');
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyContentInitFinish'});
	}
}

ply.dv.contents.notifyPageChanged = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('notifyPageChanged', param);
		}
		else {
			ply.dv._isNotReady('notifyPageChanged');
		}
	}
}

ply.dv.contents.reportStudyResult = function(param)
{
	plyCExe.send('reportStudyResult', param);
}

ply.dv.contents.saveContentProgress = function(param)
{
	plyCExe.send('saveContentProgress', param);
}

ply.dv.contents.loadContentProgress = function(param)
{
	plyCExe.send('loadContentProgress');
}

ply.dv.contents.createIndicator = function(param)
{
	plyCExe.send('createIndicator', param);
}

ply.dv.contents.deleteIndicator = function(param)
{
	plyCExe.send('deleteIndicator', param);
}

ply.dv.contents.setIndicatorActiveIndex = function(param)
{
	plyCExe.send('setIndicatorActiveIndex', param);
}

ply.dv.contents.showTeachingTool = function(param)
{
	plyCExe.send('showTeachingTool', param);
}

ply.dv.contents.hideTeachingTool = function(param)
{
	plyCExe.send('hideTeachingTool', param);
}

ply.dv.contents.showContentTool = function(param)
{
	plyCExe.send('showContentTool', param);
}

ply.dv.contents.hideContentTool = function(param)
{
	plyCExe.send('hideContentTool', param);
}

ply.dv.contents.moveNextContent = function(param)
{
	plyCExe.send('moveNextContent', param);
}

ply.dv.contents.movePrevContent = function(param)
{
	plyCExe.send('movePrevContent', param);
}

ply.dv.contents.saveStudentLessonResult = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			param.project_id = exeWnd.project.property.id;
			plyCExe.send('saveStudentLessonResult', param);
		}
		else {
			ply.dv._isNotReady('saveStudentLessonResult');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifySaveStudentLessonResult', data:{result:'success'}});
	}
}

ply.dv.contents.saveStudentLessonResultSeq = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			param.project_id = exeWnd.project.property.id;
			plyCExe.send('saveStudentLessonResultSeq', param);
		}
		else {
			ply.dv._isNotReady('saveStudentLessonResultSeq');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifySaveStudentLessonResult', data:{result:'success'}});
	}
}

ply.dv.contents.showQuestionSaveResult = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('showQuestionSaveResult', param);
		}
		else {
			ply.dv._isNotReady('showQuestionSaveResult');
		}
	}
	else {
		var ret = window.confirm(param.totalAtt + '명 중 '+ (param.totalAtt - param.curAtt) +'명의 학생이 제출전입니다.\n다음 Activity 이동시, 미 제출된 학생의 학습기록은 저장되지 않습니다.\n이동하시겠습니까?');
		ply.dv.sendToExeForTest({op:'notifyQuestionSaveResult', data:{result:ret ? 'yes' : 'no'}});
	}
}

ply.dv.contents.makeHTMLFile = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('makeHTMLFile', param);
		}
		else {
			ply.dv._isNotReady('makeHTMLFile');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyMakeHTMLFileResult', data:{result:'success', uri:'/testAPI/htmlFileResult'}});
	}
}

ply.dv.contents.makeHTMLFileList = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('makeHTMLFileList', param);
		}
		else {
			ply.dv._isNotReady('makeHTMLFileList');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifyMakeHTMLFileListResult', data: {result:'success', resultList:[{result:'success', uri: '/asset/res1'}, {result:'fail'}]}});

	}
}
ply.dv.contents.getContentInfo = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('getContentInfo', param);
		}
		else {
			ply.dv._isNotReady('getContentInfo');
		}
	}
	else {
		var answerList = [
			{
				projectAuthoringCode: 12345,
				objectAuthoringCode: 45678,
				questionNumber: 1,
				correctAnswer: 'shoulder',
				userAnswer: 'shoulder',
				correctYN: 'Y',
				applyYN: 'Y',
				tryCount: 1
			}
		];
		ply.dv.sendToExeForTest({op:'contentInfo', data: {result:'success', answerList:answerList}});
	}
}
ply.dv.contents.saveActivityQuizDetail = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('saveActivityQuizDetail', param);
		}
		else {
			ply.dv._isNotReady('saveActivityQuizDetail');
		}
	}
	else {
		var answerList = [
			{
				projectAuthoringCode: 12345,
				objectAuthoringCode: 45678,
				questionNumber: 2,
				correctAnswer: 'finger',
				userAnswer: 'finger',
				correctYN: 'N',
				applyYN: 'Y',
				tryCount: 2,
				transactionId:'attachUnique111'
			}
		];
		ply.dv.sendToExeForTest({op:'notifySaveActivityQuizDetail', data: {result:'success', answerList:answerList}});
	}
}
ply.dv.contents.saveActivityFileAsset = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('saveActivityFileAsset', param);
		}
		else {
			ply.dv._isNotReady('saveActivityFileAsset');
		}
	}
	else {
		var detail = [
			{ transactionId:'attachUnique111', result:'success'},
			{ transactionId:'attachUnique222', result:'fail'}
		];
		ply.dv.sendToExeForTest({op:'notifySaveActivityFileAsset', data: {result:'success', detail:detail}});
	}
}
ply.dv.contents.saveActivityCompStatus = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('saveActivityCompStatus', param);
		}
		else {
			ply.dv._isNotReady('saveActivityCompStatus');
		}
	}
	else {
		ply.dv.sendToExeForTest({op:'notifySaveActivityCompStatus', data: {result:'success'}});
	}
}
ply.dv.contents.moveActivityMenu = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('moveActivityMenu', param);
		}
		else {
			ply.dv._isNotReady('moveActivityMenu');
		}
	}
	else {
		// no response data
	}
}
ply.dv.contents.closeContent = function(param, op, exeWnd)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('closeContent', param);
		}
		else {
			ply.dv._isNotReady('closeContent');
		}
	}
	else {
		// no response data
	}
}
// device 관려 API
ply.dv.device = {};

ply.dv.device.captureScreen = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('captureScreen', param);
		}
		else {
			ply.dv._isNotReady('captureScreen');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyCaptureScreenResult', data:{result:'success', url:'data:image/png;base64,' + ply.dv.sampleRes.image}});
	}

}

ply.dv.device.captureFullScreen = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('captureFullScreen', param);
		}
		else {
			ply.dv._isNotReady('captureFullScreen');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyCaptureScreenResult', data:{result:'success', url:'data:image/png;base64,' + ply.dv.sampleRes.image}});
	}
}

ply.dv.device.getDeviceOrientation = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('getDeviceOrientation', param);
		}
		else {
			ply.dv._isNotReady('getDeviceOrientation');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyDeviceOrientationResult', data:{result:'success', angle:0}});
	}
}

ply.dv.device.setVisibleLauncherMenu = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('setVisibleLauncherMenu', param);
		}
		else {
			ply.dv._isNotReady('setVisibleLauncherMenu');
		}
	}
}

ply.dv.device.notifyNavigationVisibleState = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('notifyNavigationVisibleState', param);
		}
		else {
			ply.dv._isNotReady('notifyNavigationVisibleState');
		}
	}
}

ply.dv.device.sttChangeProfile = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('sttChangeProfile', param);
		}
		else {
			ply.dv._isNotReady('sttChangeProfile');
		}
	}
}

ply.dv.device.sttChangeLevel = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('sttChangeLevel', param);
		}
		else {
			ply.dv._isNotReady('sttChangeLevel');
		}
	}
}

ply.dv.device.sttChangeTimeLimit = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('sttChangeTimeLimit', param);
		}
		else {
			ply.dv._isNotReady('sttChangeTimeLimit');
		}
	}
}

ply.dv.device.sttStartRecognition = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('sttStartRecognition', param);
		}
		else {
			ply.dv._isNotReady('sttStartRecognition');
		}
	}
}

ply.dv.device.sttStopRecognition = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('sttStopRecognition', param);
		}
		else {
			ply.dv._isNotReady('sttStopRecognition');
		}
	}
}

ply.dv.device.startChromaActivity = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('startChromaActivity', param);
		}
		else {
			ply.dv._isNotReady('startChromaActivity');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyChromaActivityResult', data: {resultCode:1, resultPath:''}});
	}
}

ply.dv.device.startFaceCAMActivity = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('startFaceCAMActivity', param);
		}
		else {
			ply.dv._isNotReady('startFaceCAMActivity');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyFaceCAMActivityResult', data: {resultCode:1, resultPath:''}});
	}
}

ply.dv.device.startAccelerometerEvent = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('startAccelerometerEvent', param);
		}
		else {
			ply.dv._isNotReady('startAccelerometerEvent');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.device.startAccelerometerInterval = setInterval(function() {
			ply.dv.sendToExeForTest({op:'notifyAccelerometerEvent', data: {x:0, y:0, z:0}});
		}, param.interval);
	}
}

ply.dv.device.stopAccelerometerEvent = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('stopAccelerometerEvent', param);
		}
		else {
			ply.dv._isNotReady('stopAccelerometerEvent');
		}
	}
	else {
		if (ply.dv.device.startAccelerometerInterval) {
			clearInterval(ply.dv.device.startAccelerometerInterval);
		}
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyStopAccelerometerEvent', data: {resultCode:1}});
	}
}

ply.dv.device.getDevicePlatform = function(param)
{
	if(ply.dv._is2VRunMode()) {
		if (ply.dv._is2VEnable()) {
			plyCExe.send('getDevicePlatform', param);
		}
		else {
			ply.dv._isNotReady('getDevicePlatform');
		}
	}
	else {
		// on 되었다는 가정하에 전달
		ply.dv.sendToExeForTest({op:'notifyDevicePlatform', data:{result:'success', device:'Windows'}});
	}
}

// device network mode
ply.dv.net = {};

ply.dv.net.remoteConnect = function(/*String*/host, /*Function*/onData, exeWnd)
{
	if (location.href.indexOf('icreate.kr') != -1) host = '52.78.26.96:9110';

	// postMessage로 전달 받은 data에 대해서 onData를 호출해 줄 수 있도록
	// exeWnd의 onNetData object레 할당해 준다.
	if (onData && typeof onData == 'function') {
		exeWnd.setOnNetDataFn(onData);
	}

	if(ply.dv._is2VRunMode()) {
		return true;
	}
	else {
		return exeWnd.remoteConnect$(host, function(data) {
			exeWnd.onReceivedNetData({op:'notifyReceiveData', data:data});
		});
	}
}

ply.dv.net.remoteDisconnect = function(exeWnd)
{
	exeWnd.setOnNetDataFn(null);

	if(!ply.dv._is2VRunMode()) {
		exeWnd.remoteDisconnect$();
	}
}

ply.dv.net.remoteBroadcast = function(/*String|Undefined*/op, /*String*/msg, exeWnd)
{
	var sendData = null;

	if(ply.dv._is2VRunMode()) {
		if(ply.dv._is2VEnable()) {
			try	{
				var sendData = msg && typeof msg == 'string' ? JSON.parse(msg) : msg;
				if (!op && sendData.data) {
					if (sendData.data.from == 'S' || (sendData.data.data && sendData.data.data.from == 'S')) {
						op = 'sendDataToTeacher';
					}
					else if (sendData.data.from == 'T' || sendData.type == 'APX_LTP' || (sendData.data.data && sendData.data.data.from == 'T')) {
						op = 'broadcastDataToStudents';
					}
				}
			}
			catch (e) {
				sendData = msg;
			}

			plyCExe.send(op, msg && typeof msg == 'string' ? JSON.parse(msg) : msg);
			return true;
		}
		else {
			ply.dv._isNotReady(op);
			return false;
		}
	}
	else {
		return exeWnd.remoteBroadcast$(msg);
	}
}

var polyPlayer=function(value,idx){
	/**
		*	속성
		*	id		:	flashID
		*	swf		:	swf object
		*	url		:	mp3 경로
	*
	**/
	var flashvars = {};
	var params = { allowscriptaccess: "always", wmode : "opaque",FlashVars:"idx="+idx};
	//var params = { allowscriptaccess: "always"};

	var parentNode=document.getElementById(value);
	
	var audioDiv = document.createElement('div');
	audioDiv.id=value+"_"+idx;
	this.id=audioDiv.id;
	
	parentNode.appendChild(audioDiv);
	
	swfobject.embedSWF(polyAudioApi.PATH_SWF||"imgs/player_aspen.swf", this.id, "418", "46", "10.0.0", "", flashvars, params );

}


/**
    *************   호출함수 *************
    * play      :   mp3 재생하기
    * stop      :   mp3 멈춤

    *************   콜백함수 *************
    * onEnded   :   mp3 재생 완료시 플래시에서 호출
    * onLoaded  :   mp3 로드 완료시 플래시에서 호출
    * onTimeUpdate  :   mp3 재생시 플래시에서 초단위 호출
    
    *************   속성 읽기/설정 *************
    * getPause	:   플래시에서 일시정지시 호출
    * setPause  :   mp3 재생시 일시정지
    
    *************   속성 읽기 *************
    * getTotalTime : 사운드 총 시간(초)
    * getPlayTime : 사운드 재생 시간(초)
    
    *************   속성 설정 *************
    * setUrl    :   mp3 대상 경로
    * setVolume :   mp3 사운드 볼륨
 **/
polyPlayer.prototype={
		
	/*	javascript	->	flash	*/
	play : function(){
		this.swf.play();
	},	
		
	/*	javascript	->	flash	*/
	stop : function(){
		this.swf.stop();
	},	
		
	/*	javascript	->	flash	*/
	pause : function(){
		this.swf.pause();
	},	
	
	/*	flash	->	javascript	*/
	volume: function (vol) {
	    this.swf.setVolume(vol);
	},
	
	/*	javascript	->	flash	*/
	currentTime : function(){
		this.swf.currentTime();
	},
	
	/*	flash	->	javascript	*/
	onEnded : function(value){
		this.swf.onEnded(value);
	},	
		
	/*	javascript	->	flash	*/
	onLoaded : function(value){
		this.swf.onLoaded(value);
	},	
		
	/*	javascript	->	flash	*/
	onTimeUpdate : function (value) {
	    this.swf.onTimeUpdate(value);
	},	
	/*	javascript	->	flash	*/
	onTrackStart : function (value) {
	    this.swf.onTrackStart(value);
	},	
	/*	javascript	->	flash	*/
	getPause : function(value){
		this.swf.getPause(value);
	},	
	/*	javascript	->	flash	*/
	setPause : function(){
		this.swf.setPause();
	},
	
	/*	flash	->	javascript	*/
	getTotalTime : function(){
		return this.swf.getTotalTime();
	},
		
	/*	flash	->	javascript	*/
	getPlayTime : function(){
		return this.swf.getPlayTime();
	},
	/*	javascript	->	flash */
	setPlayTime : function(value){
		return this.swf.setPlayTime(value);
	},
	
	/*	flash	->	javascript	*/
	setVolume : function (vol) {
	    this.swf.setVolume(vol);
	},
	
	/*	flash	->	javascript	*/
	getVolume : function(){
		return this.swf.getVolume();
	},
	volumeChange:function(value){
		this.swf.volumeChange(value);
	},
	/*	javascript	->	flash	*/
	setUrl : function(value){
		this.url=value;
		this.swf.setUrl( value);
	}
	
}

var swfobject=function(){var D="undefined",r="object",S="Shockwave Flash",W="ShockwaveFlash.ShockwaveFlash",q="application/x-shockwave-flash",R="SWFObjectExprInst",x="onreadystatechange",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,X=!+"\v1",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\s+(\S+\s+\S+$)/,"$1");ag[0]=parseInt(ab.replace(/^(.*)\..*$/,"$1"),10);ag[1]=parseInt(ab.replace(/^.*\.(.*)\s.*$/,"$1"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0}}else{if(typeof O.ActiveXObject!=D){try{var ad=new ActiveXObject(W);if(ad){ab=ad.GetVariable("$version");if(ab){X=true;ab=ab.split(" ")[1].split(",");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState=="complete")||(typeof j.readyState==D&&(j.getElementsByTagName("body")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener("DOMContentLoaded",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState=="complete"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll("left")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName("body")[0].appendChild(C("span"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener("load",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener("load",Y,false)}else{if(typeof O.attachEvent!=D){i(O,"onload",Y)}else{if(typeof O.onload=="function"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName("body")[0];var aa=C(r);aa.setAttribute("type",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable("$version");if(ab){ab=ab.split(" ")[1].split(",");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute("width")||"0";ai.height=ae.getAttribute("height")||"0";if(ae.getAttribute("class")){ai.styleclass=ae.getAttribute("class")}if(ae.getAttribute("align")){ai.align=ae.getAttribute("align")}var ah={};var X=ae.getElementsByTagName("param");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute("name").toLowerCase()!="movie"){ah[X[ad].getAttribute("name")]=X[ad].getAttribute("value")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName=="OBJECT"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return !a&&F("6.0.65")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName=="OBJECT"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width="310"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height="137"}j.title=j.title.slice(0,47)+" - Flash Player Installation";var ad=M.ie&&M.win?"ActiveX":"PlugIn",ac="MMredirectURL="+O.location.toString().replace(/&/g,"%26")+"&MMplayerType="+ad+"&MMdoctitle="+j.title;if(typeof ab.flashvars!=D){ab.flashvars+="&"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C("div");X+="SWFObjectNew";Y.setAttribute("id",X);ae.parentNode.insertBefore(Y,ae);ae.style.display="none";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C("div");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display="none";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C("div");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName=="PARAM")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah="";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()=="data"){ag.movie=ai[ae]}else{if(ae.toLowerCase()=="styleclass"){ah+=' class="'+ai[ae]+'"'}else{if(ae.toLowerCase()!="classid"){ah+=" "+ae+'="'+ai[ae]+'"'}}}}}var af="";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name="'+ad+'" value="'+ag[ad]+'" />'}}aa.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+ah+">"+af+"</object>";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute("type",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()=="styleclass"){Z.setAttribute("class",ai[ac])}else{if(ac.toLowerCase()!="classid"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!="movie"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C("param");aa.setAttribute("name",X);aa.setAttribute("value",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName=="OBJECT"){if(M.ie&&M.win){X.style.display="none";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]=="function"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(".");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName("head")[0];if(!aa){return}var X=(ad&&typeof ad=="string")?ad:"screen";if(ab){n=null;G=null}if(!n||G!=X){var Z=C("style");Z.setAttribute("type","text/css");Z.setAttribute("media",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+" {"+Y+"}"))}}}function w(Z,X){if(!m){return}var Y=X?"visible":"hidden";if(J&&c(Z)){c(Z).style.visibility=Y}else{v("#"+Z,"visibility:"+Y)}}function L(Y){var Z=/[\\\"<>\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent("onunload",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+="";ag+="";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+="&"+ai+"="+Z[ai]}else{am.flashvars=ai+"="+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\?/.test(Z)){Z=Z.split("?")[1]}if(aa==null){return L(Z)}var Y=Z.split("&");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf("="))==aa){return L(Y[X].substring((Y[X].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display="block"}}if(E){E(B)}}a=false}}}}();


function polyflashOnloadComplete(param){
	setTimeout(function() { 
		try { 
			polyAudioApi.inst[param].onCreated(param);
		} catch(e) {  
			setTimeout(function() { try { polyAudioApi.inst[param].onCreated(param); } catch(e) {    }  }, 300);  }  }, 300);
}

polyAudioApi=function(setDiv){ 
	this.seq = polyAudioApi.addInst(this);
	
	this.aud = new polyPlayer(setDiv,this.seq);
	this.created = false;
	this.loaded = false;
	this.loop = false;
	this.mute=false;
	this.state="ready";
}

//swf call back start
polyAudioApi.seq = 0;
polyAudioApi.inst = [];

polyAudioApi.addInst = function (fun)			{ polyAudioApi.inst[polyAudioApi.seq] = fun; return polyAudioApi.seq ++; };
polyAudioApi.loadCallback = function(seq)		{ polyAudioApi.inst[seq].onLoaded(); };
polyAudioApi.endedCallback = function(seq) 		{ polyAudioApi.inst[seq].onEnded(); };
polyAudioApi.timeUpdateCallback = function(seq) { polyAudioApi.inst[seq].onTimeUpdate(); };
polyAudioApi.trackStartCallback = function(seq) { polyAudioApi.inst[seq].onTrackStart(); };
polyAudioApi.volChangeCallback = function(seq) { polyAudioApi.inst[seq].onvolumeChange(); };
/** 사용자 이벤트  **/
//사용자의 Ended Event
polyAudioApi.prototype.onLoad=function(userFun){
	this.userLoadedEvents = userFun;
}

//사용자의 Ended Event
polyAudioApi.prototype.onended=function(userFun){
	this.userEnded = userFun;
}
//사용자의 trackStart Event
polyAudioApi.prototype.trackStart=function(userFun){
	this.trackStartEvents = userFun;
}

//사용자의 timeUpdate Event
polyAudioApi.prototype.timeUpdate=function(userFun){
	this.timeUpdateEvents = userFun;
}

//사용자의 volumeChange Event
polyAudioApi.prototype.volumeChange=function(userFun){
	this.volumeChangeEvents = userFun;
}
/** 사용자 이벤트  **/


polyAudioApi.prototype.onCreated = function(idx) {
	this.created = true;
	
	var audioTag=polyAudioApi.inst[idx].aud;

	audioTag.swf = document.getElementById(audioTag.id);	// swf객체 설정

	var index = '('+idx+')';

	audioTag.onLoaded("polyAudioApi.loadCallback"+index);	            // 사운드가 로드완료되면 호출할 함수	
	audioTag.onEnded("polyAudioApi.endedCallback"+index);               // 사운드 재생이 완료되면 호출할 함수
	audioTag.onTimeUpdate("polyAudioApi.timeUpdateCallback"+index);     // 사운드를 재생시 플레시에서 1초마다 호출할 함수
	audioTag.onTrackStart("polyAudioApi.trackStartCallback"+index);     // 사운드 재생 시작을 알림
	audioTag.volumeChange("polyAudioApi.volChangeCallback"+index);     // 사운드 재생 시작을 알림
	audioTag.setUrl(this.mp3Url)
	
}

//Flash --> javascript 
polyAudioApi.prototype.onLoaded = function() {

	this.loaded = true;
	
	//this.Duration= Math.floor(this.aud.getTotalTime());
	this.Duration= this.aud.getTotalTime();
	
	if (this.waitPlay) {
		this.doPlay();
	}
	
	if(this.userLoadedEvents){
		this.userLoadedEvents()
	}
};

//Flash --> javascript 
polyAudioApi.prototype.onTimeUpdate=function(){
	if (!this.aud){
		return;
	}
	
	//this.playtime = Math.floor(this.aud.getPlayTime());
	this.playtime = this.aud.getPlayTime();
	
	if(this.timeUpdateEvents){
		this.timeUpdateEvents();
	}
}

//Flash --> javascript 
polyAudioApi.prototype.onTrackStart=function(){
	if(this.trackStartEvents){
		this.trackStartEvents();
	}
}

//Flash --> javascript 
polyAudioApi.prototype.onEnded=function(){
	
	if(this.loop){
		this.playing = true;
		this.state="play";
		this.aud.play();
	}else{
		this.playing = false;
		this.state="stop";
		this.aud.stop();
	}

	if (this.userEnded) {
		this.userEnded();
	}

}
//Flash --> javascript 
polyAudioApi.prototype.onvolumeChange=function(){

	if (this.volumeChangeEvents) {
		this.volumeChangeEvents();
	}

}


//javascript --> Flash
polyAudioApi.prototype.src = function(URL) {
	
	if (!this.aud) return;
	
	this.loaded = false;
	this.mp3Url = URL;
	
	if(this.created){
		this.aud.setUrl(this.mp3Url);
	}
}

//javascript --> Flash
polyAudioApi.prototype.play = function() {
	
	if(!this.aud) return;
	
	if(this.playing) return;

	if(this.loaded){
		this.waitPlay = false;
		this.playing = true;
		this.state="play";
		this.aud.play();
	}else{
		this.waitPlay = true;
	}
}

//Loaded 상태에서 play 시작
polyAudioApi.prototype.doPlay = function() {
	this.playing = true;
	this.waitPlay = false;
	this.state="play";
	this.aud.play();
};

//javascript --> Flash
polyAudioApi.prototype.stop = function() {

	if(!this.aud) return;
	
	if(this.playing){
		this.playing = false;
		this.aud.stop();
		this.state="stop";
	}
}

//javascript --> Flash
polyAudioApi.prototype.pause = function() {

	if (!this.aud) return;

	if(this.playing){
		this.aud.pause();
		this.state="pause";
		this.playing = false;
	}
}

//javascript --> Flash
polyAudioApi.prototype.setLoop = function(flag) {

	if (!this.aud) return;

	this.loop=flag;

}

//javascript --> Flash
polyAudioApi.prototype.getLoop = function() {

	if (!this.aud) return;
	
	return this.loop;
}

// 재생시간 
polyAudioApi.prototype.infoPlayTime=function(){
	
	if (!this.loaded) return;
	return this.playtime;
}

//재생시간 설정
polyAudioApi.prototype.currentTime=function(time){
	if (!this.loaded) {
		this.waitPlay = true;
		return;
	}
	
	this.aud.setPlayTime(time);
	this.playing = true;
	this.state="play";
}

// 총시간 가져오기
polyAudioApi.prototype.infoDuration=function(){
	
	if (!this.loaded) return;
	return this.Duration;
}

// 볼륨 셋팅
polyAudioApi.prototype.setVolume=function(vol){
	
	if (!this.loaded) return;
	this.aud.setVolume(vol);
}
// 볼륨 가져오기
polyAudioApi.prototype.getVolume=function(){
	
	if (!this.loaded) return;
	return this.aud.getVolume();
}

// mute 셋팅
polyAudioApi.prototype.muted=function(flag){
	
	if (!this.loaded) return;

	if(flag){
		if(this.aud.getVolume()!=0){
			this.tempVolume=this.aud.getVolume();		
		}
		this.aud.setVolume(0);

	}else{		
		if(this.tempVolume==undefined){
			this.tempVolume=1;
		}
		this.aud.setVolume(this.tempVolume);
	}
	
	this.mute=flag;
}

//mute값 가져오기
polyAudioApi.prototype.getMuted=function(){

	return this.mute;
}

polyAudioApi.prototype.stated=function(){
	
	return this.state;
}